1
00:00:00,000 --> 00:00:04,425
ML Engineモデルのトレーニング方法を
確認しましょう

2
00:00:04,425 --> 00:00:07,330
トレーニングを始める前に次の点を
確認してください

3
00:00:07,330 --> 00:00:09,800
1. トレーニングデータを収集して準備し

4
00:00:09,800 --> 00:00:13,545
前処理された特性を
整理、分割、エンジニアリングします

5
00:00:13,545 --> 00:00:17,750
2. CMLEからアクセスできる
Cloud Storageなどに

6
00:00:17,750 --> 00:00:20,955
トレーニングデータを入れます

7
00:00:20,955 --> 00:00:23,820
CMLEにトレーニングジョブを送信するとき

8
00:00:23,820 --> 00:00:29,910
一般にはロジックを
ファイルtask.pyとmodel.pyに分割します

9
00:00:29,910 --> 00:00:33,150
task.pyはコードのエントリポイントで

10
00:00:33,150 --> 00:00:36,555
ジョブレベルの詳細を開始します

11
00:00:36,555 --> 00:00:39,600
コマンドライン引数の解析、実行時間

12
00:00:39,600 --> 00:00:40,980
出力先

13
00:00:40,980 --> 00:00:43,920
ハイパーパラメータ
調整インターフェースなどです

14
00:00:43,920 --> 00:00:48,755
コアML実行のため
task.pyはmodel.pyを呼び出します

15
00:00:48,755 --> 00:00:53,655
model.pyはコアMLのタスクを処理します

16
00:00:53,655 --> 00:00:56,940
データのフェッチ、特性の定義

17
00:00:56,940 --> 00:00:59,400
実際のトレーニングと評価です

18
00:00:59,400 --> 00:01:03,630
コンピュータ間のコードの共有には
常にパッケージ化が必要です

19
00:01:03,630 --> 00:01:07,050
トレーニング用にモデルを
CMLEに送信する場合も同様です

20
00:01:07,050 --> 00:01:09,644
TensorFlowとPythonは特に

21
00:01:09,644 --> 00:01:13,605
このような標準化されたパッケージと
構造を要求します

22
00:01:13,605 --> 00:01:18,465
パッケージが正しく動くか
ローカルで簡単にテストしましょう

23
00:01:18,465 --> 00:01:21,480
Python -mで直接呼び出して

24
00:01:21,480 --> 00:01:24,270
正しくインポートできたか確認しましょう

25
00:01:24,270 --> 00:01:28,380
次にgcloudを使用して
コードのローカルテストをします

26
00:01:28,380 --> 00:01:32,020
パッケージ構造が正しいか
正常性チェックができます

27
00:01:32,020 --> 00:01:37,575
大丈夫ならトレーニングジョブを送信して
クラウドにスケールアウトできます

28
00:01:37,575 --> 00:01:44,070
ここでコマンドラインに
package-pathでコードの場所を追加し

29
00:01:44,070 --> 00:01:48,335
module-nameで実行ファイルを指定します

30
00:01:48,390 --> 00:01:53,605
scale-tierにはコードを実行する
ハードウェアの種類を指定します

31
00:01:53,615 --> 00:01:58,215
BASICにすると1つのマシンで実行します

32
00:01:58,215 --> 00:02:01,590
STANDARDなら小さなクラスタで実行します

33
00:02:01,590 --> 00:02:05,520
BASIC_GPUなら単一GPUで動作します

34
00:02:05,520 --> 00:02:10,870
TPU上で実行したいときはBASIC_TPUにします

35
00:02:10,875 --> 00:02:15,205
カスタムの階層を指定して
各マシンタイプを定義できます

36
00:02:15,205 --> 00:02:17,315
スケール階層は拡張し続けます

37
00:02:17,315 --> 00:02:21,375
CMLEのドキュメントで
現在のオプションを確認してください

38
00:02:21,375 --> 00:02:22,760
プロのヒントをお伝えします

39
00:02:22,760 --> 00:02:24,850
MLジョブでパフォーマンスを最高にするには

40
00:02:24,850 --> 00:02:28,380
Google Cloud Storageで
単一リージョンのバケットを選択してください

41
00:02:28,380 --> 00:02:30,345
デフォルトはマルチリージョンですが

42
00:02:30,345 --> 00:02:33,440
これはMLのトレーニングより
ウェブサービスに適しています