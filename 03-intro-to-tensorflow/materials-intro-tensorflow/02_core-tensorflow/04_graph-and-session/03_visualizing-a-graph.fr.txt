Jusqu'à présent, nous avons vu comment écrire un graphe,
et comment l'exécuter. Mais de temps en temps, vous voulez visualiser le graphe. Vous voulez voir les opérations, les données qui y sont chargées, etc. Vous pourriez également souhaiter voir
l'architecture de vos réseaux de neurones. Pour écrire le graphe,
utilisez un tf.summary.FileWriter. Vous vous en servez donc
pour écrire le graphe de la session. Si vous avez l'intention
de visualiser le graphe, vous ne souhaitez probablement pas avoir
de noms de Tensors générés automatiquement (comme par exemple le Add_7
que nous avons vu précédemment). Donc, si vous écrivez le graphe
avec pour intention de le visualiser, veillez à nommer vos Tensors
de données et vos opérations. Lorsque vous exécutez
ce programme après avoir fait cela, vous obtenez un nouveau répertoire
appelé "summaries". Il est intitulé ainsi, car ce nom a été spécifié comme
premier argument de tf.summary.FileWriter. Vous pouvez l'appeler
comme vous le souhaitez. Et ce répertoire contient un fichier
qui contient lui-même un graphe. Le graphe est dans
un format binaire documenté, et n'est pas véritablement lisible. Comment pouvez-vous améliorer l'apparence
du contenu de ce fichier de sortie ? Pour visualiser le graphe, vous pouvez utiliser un programme
qui s'appelle TensorBoard. Il est fourni
avec la distribution TensorFlow, et peut donc être appelé
à partir de Datalab. Voici le code Python grâce auquel
vous pouvez appeler TensorBoard en le faisant pointer sur le répertoire
de premier niveau appelé "summaries". Servez-vous ensuite
de l'interface utilisateur qui s'affiche pour accéder à la section des graphes dans laquelle vous verrez
une représentation visuelle de votre graphe avec x, y, z1, z2, z3
et les opérations qui les connectent. Vous pouvez faire plus
que cela avec TensorBoard, et vous pourrez vous amuser avec cet outil
au cours du prochain atelier et dans le cadre d'autres ateliers
de la spécialisation. Étant donné que nous avons tendance
à développer des modèles de ML dans Datalab, il est très pratique de pouvoir lancer
TensorBoard directement depuis Datalab. Mais il peut parfois arriver que vous lanciez une tâche d'entraînement
susceptible de durer plusieurs heures, et que vous voulez surveiller. Vous n'avez pas besoin d'utiliser Datalab
pour lancer TensorBoard. Vous vous souvenez que j'ai dit
que TensorBoard est fourni avec TensorFlow ? Il se trouve que TensorFlow
est également installé dans Cloud Shell. Et bien que Cloud Shell manque de puissance pour l'exécution de véritables tâches
de machine learning, il est assez puissant pour permettre
d'exécuter TensorBoard. Vous disposez ici de
la procédure grâce à laquelle vous pouvez lancer TensorBoard
à partir de Cloud Shell en le faisant pointer
sur le répertoire de sortie d'un modèle hébergé
sur Google Cloud Storage. Vous trouverez
de la documentation à ce sujet sur le site Web indiqué dans cette vidéo.