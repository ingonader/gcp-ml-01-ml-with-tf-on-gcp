1
00:00:00,000 --> 00:00:04,430
Você pode chamar sess.runs z
ou pode chamar

2
00:00:04,440 --> 00:00:09,045
z.eval para avaliar z no contexto
da sessão padrão.

3
00:00:09,045 --> 00:00:11,790
O z.eval é apenas um atalho,

4
00:00:11,790 --> 00:00:13,835
e você o verá e o codificará
com frequência.

5
00:00:13,835 --> 00:00:17,215
É o mesmo que chamar run na sessão padrão.

6
00:00:17,215 --> 00:00:21,939
Você pode chamar session.run
e passar uma única resposta,

7
00:00:21,939 --> 00:00:26,110
mas também pode passar
uma lista de tensores para avaliar.

8
00:00:26,110 --> 00:00:28,690
O TensorFlow descobrirá quais partes

9
00:00:28,690 --> 00:00:31,795
do gráfico precisa avaliar
e realizará a avaliação.

10
00:00:31,795 --> 00:00:33,880
Para cada tensor de entrada,

11
00:00:33,880 --> 00:00:36,890
há uma matriz NumPy
correspondente na saída.

12
00:00:36,890 --> 00:00:39,975
Como passamos z e z3,

13
00:00:39,975 --> 00:00:45,200
você retorna às matrizes NumPy
que estou chamando de a1 e a3.

14
00:00:45,200 --> 00:00:52,620
Observe que esse código também mostra que
você não precisa escrever tf.add(x, y).

15
00:00:52,620 --> 00:00:55,120
Você pode simplesmente dizer x + y,

16
00:00:55,120 --> 00:00:59,325
porque as operações aritméticas comuns
estão sobrecarregadas.

17
00:00:59,325 --> 00:01:03,195
Mencionei antes brevemente o tf.eager.

18
00:01:03,195 --> 00:01:06,975
Normalmente, os programas do TensorFlow
usam avaliação lenta,

19
00:01:06,975 --> 00:01:10,240
e é isso que eu recomendo quando
você escreve o código de produção.

20
00:01:10,240 --> 00:01:15,370
No entanto, quando você está
desenvolvendo ou depurando, às vezes

21
00:01:15,370 --> 00:01:20,680
pode ser prático ter o código executado
de modo imediato em vez de lentamente.

22
00:01:20,680 --> 00:01:24,570
Então, vou mostrar como usar o tf.eager.

23
00:01:24,570 --> 00:01:29,090
Você importa tf.eager
e ativa a execução imediata.

24
00:01:29,090 --> 00:01:31,440
Mas faça isso apenas uma vez.

25
00:01:31,440 --> 00:01:34,175
Normalmente, você faz isso
no início do seu mi.

26
00:01:34,175 --> 00:01:38,295
Aqui, estou criando dois tensores x e y

27
00:01:38,295 --> 00:01:40,775
e imprimindo x - y.

28
00:01:40,775 --> 00:01:43,405
Se não estivéssemos no modo imediato,

29
00:01:43,405 --> 00:01:45,460
o que seria impresso?

30
00:01:46,790 --> 00:01:49,085
Apenas a saída de depuração do tensor.

31
00:01:49,935 --> 00:01:52,820
Isso incluiria um nome exclusivo
atribuído pelo sistema

32
00:01:52,820 --> 00:01:55,355
para o nó no DAG, bem como a forma

33
00:01:55,355 --> 00:01:58,920
e o tipo de dados do valor que será
exibido quando os DAGs forem executados.

34
00:01:59,430 --> 00:02:02,035
Mas como estamos no modo imediato,

35
00:02:02,035 --> 00:02:07,040
não precisamos aguardar a sessão executada
para ter o resultado real da subtração.

36
00:02:07,040 --> 00:02:11,030
É por isso que, quando faço x - y,

37
00:02:11,030 --> 00:02:14,300
você vê a lista 2, 3, 4.