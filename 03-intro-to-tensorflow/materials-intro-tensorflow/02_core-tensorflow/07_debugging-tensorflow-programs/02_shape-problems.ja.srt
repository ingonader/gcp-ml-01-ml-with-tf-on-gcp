1
00:00:00,000 --> 00:00:05,000
では よくある問題の
対処方法について説明します

2
00:00:05,000 --> 00:00:07,500
まずは形状エラー

3
00:00:07,500 --> 00:00:13,285
次にスカラーとベクトルの不一致による
一種の形状エラー

4
00:00:13,285 --> 00:00:17,520
最後はデータ型の不一致についてです

5
00:00:17,520 --> 00:00:22,170
前のレッスンでは
このコードを使用しました

6
00:00:22,170 --> 00:00:25,165
aとcの形状が違うために

7
00:00:25,165 --> 00:00:28,145
加算できませんでした

8
00:00:28,145 --> 00:00:32,870
どちらの形状が正しいかは
目的次第です

9
00:00:32,870 --> 00:00:37,210
ここでは メソッドが
元の4行×3列の行列を取り入れて

10
00:00:37,210 --> 00:00:41,775
4×2の一定サイズの
スライディング

11
00:00:41,775 --> 00:00:46,240
ウィンドウを
処理しようとしています

12
00:00:46,240 --> 00:00:49,590
つまり aが正しくcが誤りです

13
00:00:49,590 --> 00:00:54,555
どうすればcを(4, 2)に
できるでしょうか

14
00:00:54,555 --> 00:00:59,420
cのスライスを変更して
「すべての行と列1」から

15
00:00:59,420 --> 00:01:05,735
「すべての行と列1および列2」にする
方法があります

16
00:01:05,735 --> 00:01:08,530
Pythonの範囲には

17
00:01:08,530 --> 00:01:12,435
最初の数字は含まれ
最後の数字は含まれません

18
00:01:12,435 --> 00:01:17,640
aは列0と列1
cは列1と列3を取得し

19
00:01:17,640 --> 00:01:21,295
毎回2列単位でスライスします

20
00:01:21,295 --> 00:01:25,685
これで正常に
動作するようになります

21
00:01:25,685 --> 00:01:31,250
バッチサイズが原因の
形状エラーもあります

22
00:01:31,250 --> 00:01:34,895
テンソルの形状については

23
00:01:34,895 --> 00:01:39,785
次元を可変長にできると
説明しました

24
00:01:39,785 --> 00:01:42,240
可変長テンソルを使うのは

25
00:01:42,240 --> 00:01:45,865
バッチ処理のプログラムの場合です

26
00:01:45,865 --> 00:01:49,970
バッチは通常 すべて同じサイズです

27
00:01:49,970 --> 00:01:53,285
各バッチのサンプルが
64個であるものの

28
00:01:53,285 --> 00:01:56,725
入力ファイルの最後では

29
00:01:56,725 --> 00:01:59,069
サンプル数が64に満たず

30
00:01:59,069 --> 00:02:02,690
たとえば42個のサンプルを含む

31
00:02:02,690 --> 00:02:07,115
テンソルが作成される可能性があります

32
00:02:07,115 --> 00:02:11,850
コード内の
プレースホルダXの形状では

33
00:02:11,850 --> 00:02:14,640
1次元目がNoneになっています

34
00:02:14,640 --> 00:02:17,575
Noneは可変長を意味します

35
00:02:17,575 --> 00:02:20,150
Xの値を出力すると

36
00:02:20,150 --> 00:02:26,085
テンソルのデバッグ出力で
2次元テンソルと表示されます

37
00:02:26,085 --> 00:02:28,715
(?, 3)の部分は

38
00:02:28,715 --> 00:02:35,330
行列の列数が常に3であるものの
行数は可変だという意味です

39
00:02:35,330 --> 00:02:38,005
架空のデータを入力する際

40
00:02:38,005 --> 00:02:41,300
データの形状はどうなりますか

41
00:02:41,300 --> 00:02:43,625
3つの要素が含まれますが

42
00:02:43,625 --> 00:02:45,685
1次元テンソルです

43
00:02:45,685 --> 00:02:50,465
プレースホルダーが求めているのは
2次元行列です

44
00:02:50,475 --> 00:02:54,170
行数は可変なので
たとえ1行でも構いませんが

45
00:02:54,170 --> 00:02:57,450
2次元行列にする必要があります

46
00:02:57,450 --> 00:03:01,020
どのように修正すればよいでしょうか

47
00:03:01,020 --> 00:03:04,645
スライスほど簡単ではありません

48
00:03:04,645 --> 00:03:08,600
これらのメソッドを使って

49
00:03:08,600 --> 00:03:12,755
形状を強制的に変更します

50
00:03:12,755 --> 00:03:16,840
必要なのはtf.reshapeで

51
00:03:16,840 --> 00:03:21,190
元の数値を取り入れて
別の形状に配置します

52
00:03:21,190 --> 00:03:24,120
3つの数値があり それで十分ですが

53
00:03:24,120 --> 00:03:28,445
2次元のテンソルが必要です

54
00:03:28,445 --> 00:03:31,770
ここで形状を変更して
送り出します