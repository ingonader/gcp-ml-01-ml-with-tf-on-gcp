1
00:00:00,000 --> 00:00:04,095
これはコースのGitHubリポジトリです

2
00:00:04,095 --> 00:00:06,450
03_TensorFlowの中です

3
00:00:06,450 --> 00:00:08,419
これが実行中の章です

4
00:00:08,419 --> 00:00:11,410
debug_demoを開きます

5
00:00:11,410 --> 00:00:17,225
この章でお話ししたことを
いくつか見てみましょう

6
00:00:17,225 --> 00:00:22,035
TensorFlowをインポートします

7
00:00:22,035 --> 00:00:24,890
これが最初の例です

8
00:00:24,890 --> 00:00:29,710
すべてのデータ行を
スライスして取得します

9
00:00:29,710 --> 00:00:31,630
cではすべての行と

10
00:00:31,630 --> 00:00:35,335
1列だけを取得します

11
00:00:35,335 --> 00:00:37,395
aとcを加算すると

12
00:00:37,395 --> 00:00:40,065
形状エラーが

13
00:00:40,065 --> 00:00:42,060
発生します

14
00:00:42,060 --> 00:00:47,620
「 次元は同じでなければならないが
2と4がある」

15
00:00:47,620 --> 00:00:52,990
という値エラーメッセージが見えます

16
00:00:53,020 --> 00:00:56,275
最初は2次元テンソル 4, 2

17
00:00:56,275 --> 00:00:59,025
2番目は1次元テンソル 4です

18
00:00:59,025 --> 00:01:01,210
上に戻ると

19
00:01:01,210 --> 00:01:04,050
common_shapes.pycがあります

20
00:01:04,050 --> 00:01:06,100
これは

21
00:01:06,100 --> 00:01:07,885
関係ないので

22
00:01:07,885 --> 00:01:09,240
無視できます

23
00:01:09,240 --> 00:01:12,195
これも無視できます

24
00:01:12,195 --> 00:01:15,845
これもTensorFlowです

25
00:01:15,845 --> 00:01:20,520
すべてTensorFlowなので
無視します

26
00:01:20,520 --> 00:01:25,130
スクロールしていくと
やがてコード内にある

27
00:01:25,130 --> 00:01:27,810
some_methodが見つかります

28
00:01:27,810 --> 00:01:31,260
s=a+c いうメソッドがあります

29
00:01:31,260 --> 00:01:33,755
これが問題です

30
00:01:33,755 --> 00:01:37,220
実行中のセッションから
呼び出されますが

31
00:01:37,220 --> 00:01:40,535
それは無視します

32
00:01:40,535 --> 00:01:42,060
さて これを調べて

33
00:01:42,060 --> 00:01:44,935
エラーの場所を特定します

34
00:01:44,935 --> 00:01:47,490
ここにs=a+cがあります

35
00:01:47,490 --> 00:01:53,185
2つを加算するとき
テンソルはまったく同じ

36
00:01:53,185 --> 00:01:56,390
形状である必要があります

37
00:01:56,390 --> 00:01:58,150
でないと機能しません

38
00:01:58,150 --> 00:02:02,085
では 問題を修正しましょう

39
00:02:02,085 --> 00:02:09,344
この場合 fake（架空）データを作成します

40
00:02:09,344 --> 00:02:12,910
この架空データを渡しますが

41
00:02:12,910 --> 00:02:15,680
その形状は4x3行列です

42
00:02:15,680 --> 00:02:19,035
これを渡して さらに

43
00:02:19,035 --> 00:02:24,015
aの形状を取得し
cの形状を出力します

44
00:02:24,015 --> 00:02:26,225
このセルを

45
00:02:26,225 --> 00:02:27,660
実行すると

46
00:02:27,660 --> 00:02:33,440
aの形状は4, 2
cの形状は4です

47
00:02:33,440 --> 00:02:36,920
これで原因がわかりました

48
00:02:36,920 --> 00:02:40,140
次は これを
どうやって修正するかです

49
00:02:40,140 --> 00:02:41,705
それは

50
00:02:41,705 --> 00:02:44,760
テンソルを同じ形状にすることです

51
00:02:44,760 --> 00:02:47,260
最初のインスタンスは 0:2です

52
00:02:47,260 --> 00:02:49,950
次は1:3で

53
00:02:49,950 --> 00:02:51,735
毎回1つ削除します

54
00:02:51,735 --> 00:02:52,950
イメージについては

55
00:02:52,950 --> 00:02:56,710
「ストライド」という用語を
覚えてください

56
00:02:56,710 --> 00:02:59,560
ストライドを1

57
00:02:59,560 --> 00:03:01,520
ウインドウのサイズを2にして

58
00:03:01,520 --> 00:03:03,020
実行してみると

59
00:03:03,020 --> 00:03:04,750
機能します

60
00:03:04,750 --> 00:03:09,150
スライドウィンドウの結果が戻ります

61
00:03:09,150 --> 00:03:13,305
このように
コードをデバッグします

62
00:03:13,305 --> 00:03:15,190
呼び出しトレースを調べ

63
00:03:15,190 --> 00:03:16,905
エラーメッセージを見て

64
00:03:16,905 --> 00:03:20,180
問題の場所と
原因を特定します

65
00:03:20,180 --> 00:03:23,655
修正して
架空データで確認します

66
00:03:23,655 --> 00:03:28,595
次にデータ全体で
再試行します

67
00:03:28,595 --> 00:03:33,640
型エラーでも
プロセスはまったく同じです

68
00:03:33,640 --> 00:03:35,755
aとbを足しますが

69
00:03:35,755 --> 00:03:38,255
aは浮動小数点数で

70
00:03:38,255 --> 00:03:40,149
bは整数ですので

71
00:03:40,149 --> 00:03:41,435
動作しません

72
00:03:41,435 --> 00:03:44,000
スタックトレースを調べて

73
00:03:44,000 --> 00:03:48,155
エラーメッセージを見て判断します

74
00:03:48,155 --> 00:03:52,740
1つの方法は
整数であるbを

75
00:03:52,740 --> 00:03:55,055
キャストすることです

76
00:03:55,055 --> 00:03:57,260
これが基本的な考え方です