1
00:00:00,000 --> 00:00:03,340
tf.expand_dimsは

2
00:00:03,340 --> 00:00:08,755
tensorに1つの次元を挿入して
形状を変更します

3
00:00:08,755 --> 00:00:12,790
3行2列の行列xがあります

4
00:00:12,790 --> 00:00:17,350
xでtf.expand_dimsを
呼び出す際

5
00:00:17,350 --> 00:00:20,985
どの次元に挿入するかを指定します

6
00:00:20,985 --> 00:00:24,730
ここでは Pythonの
2次元目を指定します

7
00:00:24,730 --> 00:00:26,520
0が1次元目です

8
00:00:26,520 --> 00:00:30,310
形状が (3, 2) から (3, 1, 2) に

9
00:00:30,310 --> 00:00:32,415
拡張されました

10
00:00:32,415 --> 00:00:35,125
どういうことでしょうか

11
00:00:35,125 --> 00:00:38,695
3行2列の行列だったxの値が

12
00:00:38,695 --> 00:00:43,275
3次元行列 つまり
3次元テンソルになりました

13
00:00:43,275 --> 00:00:46,475
左角かっこの数が変わっています

14
00:00:46,475 --> 00:00:50,030
保存されている数値は変わりません

15
00:00:50,030 --> 00:00:53,720
ここではスライスを使って

16
00:00:53,720 --> 00:00:56,460
テンソルの一部を抽出します

17
00:00:56,460 --> 00:01:01,900
以前は 角かっこと
抽出する行/列を指定する

18
00:01:01,900 --> 00:01:04,130
省略形の構文でしたが

19
00:01:04,130 --> 00:01:07,805
今回は省略形のないtf.sliceで

20
00:01:07,805 --> 00:01:12,260
xからデータを抜き出します

21
00:01:12,260 --> 00:01:15,480
[0, 1]から開始して

22
00:01:15,480 --> 00:01:19,145
2行1列のデータを取り出します

23
00:01:19,145 --> 00:01:23,040
2と5を得られる理由がわかりますか

24
00:01:23,040 --> 00:01:24,825
ここで問題です

25
00:01:24,825 --> 00:01:32,020
このtf.sliceを 角かっこ付きの
構文にするとどうなりますか

26
00:01:32,030 --> 00:01:35,410
答えは まずx[

27
00:01:35,410 --> 00:01:42,770
必要な行は0:2
必要な列は1:2

28
00:01:42,770 --> 00:01:45,230
正解はx[0:2, 1:2]です

29
00:01:45,230 --> 00:01:50,055
squeezeは
expand_dimsの逆の演算です

30
00:01:50,055 --> 00:01:56,840
expand_dimsでは サイズ1の次元を
テンソルのどこにでも挿入できます

31
00:01:56,840 --> 00:02:02,010
squeezeではサイズ1の次元を
テンソルの形状から削除できます

32
00:02:02,010 --> 00:02:05,050
このテンソル「t」は

33
00:02:05,050 --> 00:02:07,905
角かっこの数からわかるとおり

34
00:02:07,905 --> 00:02:10,435
3次元テンソルです

35
00:02:10,435 --> 00:02:18,185
tを渡して squeezeを呼び出すと
コンパクトな2次元テンソルが得られます

36
00:02:18,185 --> 00:02:24,945
元のテンソルは1, 2, 4
削除後は 2, 4 です

37
00:02:24,945 --> 00:02:29,595
ここではreshapeを使えば

38
00:02:29,595 --> 00:02:32,129
済みますが

39
00:02:32,129 --> 00:02:36,080
1次元を挿入するか削除するか
明らかにすることで

40
00:02:36,080 --> 00:02:38,570
わかりやすいコードになります

41
00:02:38,570 --> 00:02:41,980
変換には基本的に

42
00:02:41,980 --> 00:02:45,720
1/2/4の行列を
コンテキストに応じて

43
00:02:45,720 --> 00:02:49,024
形状1, 2, 4の3次元テンソルか

44
00:02:49,024 --> 00:02:53,480
形状2, 4の
2次元テンソルとして扱います