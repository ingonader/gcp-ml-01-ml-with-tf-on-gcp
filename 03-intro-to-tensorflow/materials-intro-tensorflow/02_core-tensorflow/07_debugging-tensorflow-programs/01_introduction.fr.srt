1
00:00:00,000 --> 00:00:02,370
J'espère que, lors de l'atelier précédent,

2
00:00:02,370 --> 00:00:07,105
quand il vous a été demandé d'écrire du code
pour calculer l'aire d'un triangle,

3
00:00:07,105 --> 00:00:09,300
vous n'avez pas seulement
exécuté les cellules,

4
00:00:09,300 --> 00:00:14,285
et que vous avez essayé d'écrire
du code TensorFlow en partant de zéro.

5
00:00:14,285 --> 00:00:17,470
Si vous avez procédé ainsi
et que vous ne faites pas exception,

6
00:00:17,470 --> 00:00:21,370
vous avez rapidement été confrontés
à des erreurs de compilation et d'exécution,

7
00:00:21,370 --> 00:00:23,565
de sorte que vous avez
commencé à vous demander

8
00:00:23,565 --> 00:00:27,225
comment vous pouviez déboguer
un programme TensorFlow.

9
00:00:27,225 --> 00:00:30,190
Le débogage d'un programme
TensorFlow peut être complexe

10
00:00:30,190 --> 00:00:33,015
en raison du paradigme
de l'évaluation paresseuse.

11
00:00:33,015 --> 00:00:35,090
Si votre graphe contient des erreurs,

12
00:00:35,090 --> 00:00:40,355
vous ne pourrez en avoir connaissance
qu'après l'exécution de la partie concernée.

13
00:00:40,355 --> 00:00:42,210
C'est l'une des raisons pour lesquelles

14
00:00:42,210 --> 00:00:44,330
il a été indiqué
que tf.eager peut être utile

15
00:00:44,330 --> 00:00:46,820
pour développer des programmes TensorFlow.

16
00:00:46,820 --> 00:00:48,740
Ce n'est toutefois pas une panacée.

17
00:00:48,740 --> 00:00:52,605
Vous avez toujours besoin de connaître
la procédure de débogage de ces programmes,

18
00:00:52,605 --> 00:00:56,270
même si vous avez développé le programme
de manière interactive avec tf.eager.

19
00:00:56,270 --> 00:00:59,375
Voyons donc comment vous pouvez
déboguer les programmes TensorFlow

20
00:00:59,375 --> 00:01:02,690
lorsqu'ils utilisent l'évaluation paresseuse.

21
00:01:02,690 --> 00:01:07,330
Vous déboguez un programme TensorFlow
comme n'importe quel autre programme.

22
00:01:07,330 --> 00:01:10,519
Vous devez apprendre
à lire les messages d'erreur,

23
00:01:10,519 --> 00:01:16,420
et utiliser ces messages ainsi que les traces
de la pile pour isoler la méthode.

24
00:01:16,420 --> 00:01:19,910
L'isolation de la méthode
(problématique) a pour objectif

25
00:01:19,910 --> 00:01:23,755
de vous permettre d'appeler
cette méthode isolément.

26
00:01:23,755 --> 00:01:26,850
Il n'est pas recommandé d'essayer
de procéder à un débogage global

27
00:01:26,850 --> 00:01:29,180
en exécutant l'intégralité
du programme TensorFlow

28
00:01:29,180 --> 00:01:30,590
pour l'ensemble de données.

29
00:01:30,590 --> 00:01:34,840
Il est préférable d'envoyer
des données existantes à la méthode.

30
00:01:34,840 --> 00:01:39,450
Cela permet d'avoir une erreur reproductible
que l'on peut essayer de corriger.

31
00:01:39,450 --> 00:01:42,205
Mais comment corriger l'erreur ?

32
00:01:42,205 --> 00:01:46,880
Même si nous ne pouvons étudier ici
toutes les erreurs possibles,

33
00:01:46,880 --> 00:01:50,420
nous allons voir certains des types
de messages d'erreur les plus courants,

34
00:01:50,420 --> 00:01:53,215
et je vous indiquerai comment
remédier à ces problèmes.

35
00:01:53,215 --> 00:01:57,610
La première étape consiste
à ne pas vous laisser perturber

36
00:01:57,610 --> 00:02:00,090
lorsque vous voyez
une liste de messages d'erreur.

37
00:02:00,090 --> 00:02:02,695
Regardez attentivement chaque message.

38
00:02:02,695 --> 00:02:06,750
Vous devez tout particulièrement
rechercher deux informations,

39
00:02:06,750 --> 00:02:09,415
la première étant la trace de la pile.

40
00:02:09,415 --> 00:02:14,010
Il s'agit de la pile des appels de méthodes
de l'heure à laquelle l'erreur a été générée.

41
00:02:14,010 --> 00:02:15,839
Dans ce cas par exemple,

42
00:02:15,839 --> 00:02:19,695
vous voyez que la ligne s
a pour fonction d'additionner a et c.

43
00:02:19,695 --> 00:02:23,990
Il y a un problème dans
la méthode some_method(data).

44
00:02:23,990 --> 00:02:24,735
Manifestement,

45
00:02:24,735 --> 00:02:29,280
la pile des appels contiendra également
de nombreuses méthodes de bibliothèques TF.

46
00:02:29,280 --> 00:02:31,675
Votre programme appelle ces méthodes.

47
00:02:31,675 --> 00:02:34,645
Vous devez donc
vous concentrer sur votre code,

48
00:02:34,645 --> 00:02:36,100
et ce faisant,

49
00:02:36,100 --> 00:02:38,760
rechercher la deuxième information.

50
00:02:38,760 --> 00:02:41,065
Regardez le message d'erreur.

51
00:02:41,065 --> 00:02:46,135
Il indique dans ce cas qu'une erreur
de valeur a été rencontrée.

52
00:02:46,135 --> 00:02:49,295
TensorFlow attend des dimensions égales.

53
00:02:49,295 --> 00:02:51,830
Et il se trouve qu'elles ne le sont pas.

54
00:02:51,830 --> 00:02:54,000
Que se passe-t-il ?

55
00:02:54,000 --> 00:03:04,025
Et bien, l'addition ne peut fonctionner
que si a et c sont des Tensors 2D.

56
00:03:04,025 --> 00:03:09,405
Ou, si a est un Tensor 4D,
c doit également en être un.

57
00:03:09,405 --> 00:03:17,360
Dans ce cas, il s'avère que
l'un est un Tensor 2D de forme 4,2

58
00:03:17,360 --> 00:03:22,610
et l'autre un Tensor 1D de forme 4.

59
00:03:22,610 --> 00:03:24,710
C'est donc le problème.

60
00:03:25,710 --> 00:03:28,905
Il y a manifestement quelque chose
d'incorrect dans votre programme.

61
00:03:28,905 --> 00:03:31,380
Soit vous voulez que les deux
soient de forme 4,2,

62
00:03:31,380 --> 00:03:34,265
soit vous voulez que les deux
soient de forme 4.

63
00:03:34,265 --> 00:03:37,790
Mais le fait de consulter la pile des appels
et de lire le message d'erreur

64
00:03:37,790 --> 00:03:41,380
vous aide à comprendre le problème.

65
00:03:41,380 --> 00:03:44,645
La pile des appels vous a permis
de trouver la ligne de code

66
00:03:44,645 --> 00:03:46,520
et le nom de la méthode.

67
00:03:46,520 --> 00:03:49,170
Il vous reste à rechercher
la méthode et à l'examiner.

68
00:03:49,170 --> 00:03:52,695
Ici, le nom de la méthode est some_method,

69
00:03:52,695 --> 00:03:55,780
et elle est associée à un Tensor appelé data.

70
00:03:55,780 --> 00:03:58,617
C'est le Tensor que vous devez tester

71
00:03:58,617 --> 00:04:01,615
pour parvenir à faire en sorte
que tout fonctionne correctement.

72
00:04:01,615 --> 00:04:03,835
Oubliez le reste de votre programme.

73
00:04:03,835 --> 00:04:08,445
Ne vous occupez pas du mode de lecture
des données dans le programme actuel.

74
00:04:08,445 --> 00:04:11,705
Nous allons appeler la méthode
avec des données fictives.

75
00:04:11,705 --> 00:04:18,300
Nous devons pour cela créer une session
et un Tensor qui soit un tableau codé en dur.

76
00:04:18,300 --> 00:04:23,200
Et dans ce cas, j'ai créé
un Tensor 4,3 appelé fake_data.

77
00:04:23,200 --> 00:04:25,010
Vous le voyez ?

78
00:04:25,010 --> 00:04:31,485
Je le transmets dans some_method.

79
00:04:31,485 --> 00:04:35,765
Remarquez que j'ai également
ajouté des instructions print

80
00:04:35,765 --> 00:04:38,075
pour certaines données du code.

81
00:04:38,075 --> 00:04:41,360
Cette technique de débogage
est un peu primitive,

82
00:04:41,360 --> 00:04:44,690
mais c'est la plus simple pour
diagnostiquer des erreurs de forme.

83
00:04:44,690 --> 00:04:49,925
Nous avons donc une addition avec a et c,
et c'est là que se situait le problème.

84
00:04:49,925 --> 00:04:54,360
Je fais donc en sorte que les formes
de a et de c soient affichées.

85
00:04:54,360 --> 00:04:56,289
Et lorsque j'exécute le programme,

86
00:04:56,289 --> 00:04:59,490
nous avons 4,2 pour la première ligne,

87
00:04:59,490 --> 00:05:02,335
et 4 pour la deuxième.

88
00:05:02,335 --> 00:05:05,475
C'est bien ce qu'indiquait
le message d'erreur relatif à la valeur.

89
00:05:05,475 --> 00:05:07,675
Et maintenant, que vouliez-vous faire.

90
00:05:07,675 --> 00:05:11,250
Vouliez-vous scinder une matrice 4,2 pour c ?

91
00:05:11,250 --> 00:05:14,775
Ou vouliez-vous scinder
un vecteur 1D pour a ?

92
00:05:14,775 --> 00:05:18,745
Quoi que vous vouliez faire, faites-le.

93
00:05:18,745 --> 00:05:20,599
Lorsque j'exécute le programme,

94
00:05:20,599 --> 00:05:23,790
nous avons 4,2 pour la première ligne,

95
00:05:23,790 --> 00:05:26,660
et 4 pour la deuxième.

96
00:05:26,660 --> 00:05:29,805
C'est bien ce qu'indiquait
le message d'erreur relatif à la valeur.

97
00:05:29,805 --> 00:05:32,000
Et maintenant, que vouliez-vous faire.

98
00:05:32,000 --> 00:05:36,010
Vouliez-vous scinder une matrice 4,2 pour c ?

99
00:05:36,010 --> 00:05:39,625
Ou vouliez-vous scinder
un vecteur 1D pour a ?

100
00:05:39,625 --> 00:05:42,080
Quoi que vous vouliez faire…