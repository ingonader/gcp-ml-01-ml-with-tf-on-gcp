1
00:00:00,590 --> 00:00:04,270
Neste laboratório,
assim como fizemos nos anteriores,

2
00:00:04,270 --> 00:00:07,719
você acessa o console do GCP,

3
00:00:07,719 --> 00:00:10,795
entra no Cloud Shell e inicia o Datalab.

4
00:00:10,795 --> 00:00:12,700
Quando estiver no Datalab,

5
00:00:12,700 --> 00:00:17,905
navegarei até o bloco de notas
até "Getting started with TensorFlow".

6
00:00:17,905 --> 00:00:21,145
Portanto, a primeira célula
deste bloco de notas é importar

7
00:00:21,145 --> 00:00:25,315
pacotes do NumPy e do TensorFlow,
porque vamos brincar com os dois.

8
00:00:25,315 --> 00:00:28,150
Então, posso executar essa célula,
e isso basicamente me diz

9
00:00:28,150 --> 00:00:31,915
que estou executando o TensorFlow 1.4
nesta instância.

10
00:00:31,915 --> 00:00:35,870
Então, mostrarei como adicionar
duas matrizes NumPy.

11
00:00:35,870 --> 00:00:37,930
Então, tenho uma matriz NumPy, que é a,

12
00:00:37,930 --> 00:00:39,795
e outra, que é b.

13
00:00:39,795 --> 00:00:45,530
Neste caso, estou adicionando
NumPy np.add(a ,b) e imprimindo c.

14
00:00:45,530 --> 00:00:47,015
Como isso é NumPy,

15
00:00:47,015 --> 00:00:49,560
toda a pontuação
está sendo avaliada imediatamente.

16
00:00:49,560 --> 00:00:51,395
Então, quando eu o executo,

17
00:00:51,395 --> 00:00:53,130
recebo 8, 2, 10.

18
00:00:53,130 --> 00:00:54,470
Então, essa é a minha lista.

19
00:00:54,470 --> 00:00:57,355
O código equivalente no TensorFlow
tem duas etapas.

20
00:00:57,355 --> 00:00:59,995
Então, vamos executar apenas a primeira.

21
00:00:59,995 --> 00:01:04,040
A primeira etapa,
novamente como em NumPy, é criar a,

22
00:01:04,040 --> 00:01:07,905
criar a com np.array,
fazer tf.constant.

23
00:01:07,905 --> 00:01:10,155
Então, criarei uma matriz constante a

24
00:01:10,155 --> 00:01:12,450
e outra matriz constante b

25
00:01:12,450 --> 00:01:14,990
e chamarei tf.add(a, b).

26
00:01:14,990 --> 00:01:16,880
Mas, desta vez, quando eu imprimir c,

27
00:01:16,880 --> 00:01:19,665
você não verá a lista 8, 2 e 10.

28
00:01:19,665 --> 00:01:21,315
O que você verá?

29
00:01:21,315 --> 00:01:24,635
Você vê uma saída de depuração do tensor.

30
00:01:24,635 --> 00:01:26,020
Portanto, neste caso,

31
00:01:26,020 --> 00:01:28,990
dizemos que c
é um resultado da operação add.

32
00:01:28,990 --> 00:01:32,040
Ele conterá três números,
e todos serão inteiros.

33
00:01:32,040 --> 00:01:35,075
Esta é a primeira etapa,
a criação do gráfico.

34
00:01:35,075 --> 00:01:37,360
Então vamos tentar algo.

35
00:01:37,360 --> 00:01:40,575
Vamos mudar isso para ser,
por exemplo, 5.0.

36
00:01:40,575 --> 00:01:45,565
Neste ponto, a agora se torna
não uma matriz de inteiros,

37
00:01:45,565 --> 00:01:49,380
mas uma matriz de flutuantes.

38
00:01:49,380 --> 00:01:51,470
Então, vamos imprimir não apenas c,

39
00:01:51,470 --> 00:01:54,595
mas vamos imprimir a também
para você saber do que estou falando.

40
00:01:54,595 --> 00:01:56,389
E agora, quando eu o executo,

41
00:01:56,389 --> 00:02:01,580
você vê que a é do tipo float e, agora,

42
00:02:01,580 --> 00:02:06,950
não podemos somar a e b porque
a é do tipo float, mas b é do tipo int,

43
00:02:06,950 --> 00:02:08,479
e é por isso que recebo o erro.

44
00:02:08,479 --> 00:02:13,250
Mas posso mudá-lo também para ser um float
e, quando eu executar,

45
00:02:13,250 --> 00:02:17,280
c será do tipo float.

46
00:02:17,280 --> 00:02:19,920
Então, lembre-se disso.

47
00:02:19,920 --> 00:02:24,840
Vou alterá-lo de volta para um número
inteiro para realizar a próxima etapa.

48
00:02:24,840 --> 00:02:27,820
Neste caso, tenho a e c,

49
00:02:27,820 --> 00:02:32,140
e a próxima etapa do meu gráfico
é avaliar o valor de c.

50
00:02:32,140 --> 00:02:33,560
Assim, conseguirei
os números.

51
00:02:33,560 --> 00:02:35,985
Lembre-se, crie o gráfico
e execute-o.

52
00:02:35,985 --> 00:02:40,800
Então, neste caso, farei sess.run(c)
e depois imprimirei o resultado.

53
00:02:40,800 --> 00:02:43,650
O resultado será
uma matriz antiga regular.

54
00:02:43,650 --> 00:02:46,170
E quando imprimo, fico com 8, 2 e 10.

55
00:02:46,170 --> 00:02:49,665
Então, temos que lembrar que,
no TensorFlow, a avaliação é lenta.

56
00:02:49,665 --> 00:02:51,585
Etapa número um, crie o gráfico.

57
00:02:51,585 --> 00:02:53,475
Etapa número dois, execute o gráfico.

58
00:02:53,475 --> 00:02:57,315
Agora, neste caso,
tudo no meu gráfico foi fixado no código.

59
00:02:57,315 --> 00:03:01,630
No entanto, normalmente você colocará
um marcador nos itens

60
00:03:01,630 --> 00:03:04,965
para conseguir ter informações
no ambiente de execução.

61
00:03:04,965 --> 00:03:07,990
Então, no meu caso, basicamente
estou criando a

62
00:03:07,990 --> 00:03:11,700
para ser um marcador
que conterá uma lista,

63
00:03:11,700 --> 00:03:14,460
e b será outro marcador
que conterá uma lista.

64
00:03:14,460 --> 00:03:18,500
Vou adicionar a e b
e agora passarei os números

65
00:03:18,500 --> 00:03:21,000
3, 4 e 5 no ambiente de execução.

66
00:03:21,000 --> 00:03:22,635
Quando estou executando a sessão,

67
00:03:22,635 --> 00:03:24,120
estou passando 3, 4

68
00:03:24,120 --> 00:03:25,695
e 5 para a

69
00:03:25,695 --> 00:03:28,245
e -1, 2 e 3 para B.

70
00:03:28,245 --> 00:03:31,960
E agora, quando imprimo o resultado,
recebo 2, 6 e 8

71
00:03:31,960 --> 00:03:33,615
porque 3 - 1 = 2.

72
00:03:33,615 --> 00:03:36,990
Mas, neste caso, lembre-se de que
essas três linhas tratam

73
00:03:36,990 --> 00:03:40,140
da criação do gráfico: a, b e c.

74
00:03:40,140 --> 00:03:43,360
O restante delas trata
da execução do gráfico

75
00:03:43,360 --> 00:03:46,265
e, quando executo o gráfico,
estou alimentando valores.

76
00:03:46,265 --> 00:03:49,410
Portanto, podemos agora
juntar os dois conceitos

77
00:03:49,410 --> 00:03:52,405
quando se trata de fazer algo útil.

78
00:03:52,405 --> 00:03:54,150
Então, o que vamos fazer é:

79
00:03:54,150 --> 00:03:56,100
digamos que, dado um triângulo,

80
00:03:56,100 --> 00:03:57,450
os lados do triângulo,

81
00:03:57,450 --> 00:04:00,480
deixe-me ir em frente
e calcular a área do triângulo.

82
00:04:00,480 --> 00:04:04,625
Há uma fórmula chamada Teorema de Herão
que é basicamente esta aqui.

83
00:04:04,625 --> 00:04:06,900
E é isso que vamos implementar
no TensorFlow.

84
00:04:06,900 --> 00:04:09,770
De novo, o TensorFlow
não tem a ver apenas com redes neurais,

85
00:04:09,770 --> 00:04:11,815
tem a ver com qualquer
programação numérica.

86
00:04:11,815 --> 00:04:15,240
Com certeza também podemos calcular
a área de um triângulo no TensorFlow.

87
00:04:15,240 --> 00:04:17,295
Então eu tenho meu método,

88
00:04:17,295 --> 00:04:21,180
minha função para calcular
a área com base nos lados.

89
00:04:21,180 --> 00:04:23,640
Mas lembre-se de que você não vai usar

90
00:04:23,640 --> 00:04:26,590
o TensorFlow para calcular
a área de um triângulo.

91
00:04:26,590 --> 00:04:32,025
Você vai usar o TensorFlow para criar
a área de muitos triângulos.

92
00:04:32,025 --> 00:04:37,080
Então vamos decidir que não será
um conjunto de três números,

93
00:04:37,080 --> 00:04:41,700
serão muitos conjuntos
de três números, certo?

94
00:04:41,700 --> 00:04:44,700
Então, pegaremos um número de triângulos

95
00:04:44,700 --> 00:04:48,780
e agora queremos conseguir a e b e c,
os três lados.

96
00:04:48,780 --> 00:04:55,050
A vai cortar os lados que basicamente
serão o tamanho do lote,

97
00:04:55,050 --> 00:04:57,030
o número de triângulos que temos,

98
00:04:57,030 --> 00:04:59,890
vezes três, porque temos três deles.

99
00:04:59,890 --> 00:05:01,820
Então a primeira coluna será a,

100
00:05:01,820 --> 00:05:04,080
a segunda será b

101
00:05:04,080 --> 00:05:06,010
e a terceira será c.

102
00:05:06,010 --> 00:05:09,510
Então, neste caso, conseguirei
a primeira coluna, que é a,

103
00:05:09,510 --> 00:05:11,060
a segunda coluna, que é b,

104
00:05:11,060 --> 00:05:13,100
e a terceira, que é c.

105
00:05:13,100 --> 00:05:18,575
Portanto, se vamos passar
matrizes 2x3 aqui,

106
00:05:18,575 --> 00:05:21,230
passaremos a matriz 2x3
de dois triângulos.

107
00:05:21,230 --> 00:05:23,175
Cada triângulo tem três lados.

108
00:05:23,175 --> 00:05:27,270
O primeiro conjunto de lados
é 5 e 2.3, que é a,

109
00:05:27,270 --> 00:05:30,165
3 e 4.1, que é b,

110
00:05:30,165 --> 00:05:33,795
e 7.1 e 4.8, esse é o seu c.

111
00:05:33,795 --> 00:05:35,820
Então, agora temos a, b e c.

112
00:05:35,820 --> 00:05:37,830
Calculamos metade do perímetro,

113
00:05:37,830 --> 00:05:40,080
então (a + b + c) dividido por dois,

114
00:05:40,080 --> 00:05:43,680
e depois usamos essa fórmula
para calcular o quadrado da área.

115
00:05:43,680 --> 00:05:46,455
Calculamos a raiz quadrada disso
e voltamos.

116
00:05:46,455 --> 00:05:51,990
Tudo isso é parte da criação do gráfico,
e, quando queremos executá-lo,

117
00:05:51,990 --> 00:05:56,740
podemos basicamente fazer sess.run,
mas, desta vez,

118
00:05:56,740 --> 00:06:02,130
quero calcular a área variável
ou a área de tensor do TensorFlow,

119
00:06:02,130 --> 00:06:05,130
e o modo como conseguimos a área
é chamar compute_area

120
00:06:05,130 --> 00:06:07,590
passando esses valores.

121
00:06:07,590 --> 00:06:09,330
Então, se eu executar isso agora,

122
00:06:09,330 --> 00:06:12,250
basicamente terei
a área de dois triângulos.

123
00:06:12,250 --> 00:06:15,255
É por isso que consegui
dois números aqui, há dois triângulos.

124
00:06:15,255 --> 00:06:17,865
Mas aqui esses números
estão fixos no código.

125
00:06:17,865 --> 00:06:19,470
Você pode não querer isso,

126
00:06:19,470 --> 00:06:20,925
pode querer alimentá-los.

127
00:06:20,925 --> 00:06:23,310
Então é isso que este último item
está mostrando.

128
00:06:23,310 --> 00:06:26,200
Está mostrando o uso
da mesma área de computação,

129
00:06:26,200 --> 00:06:30,150
mas os lados agora são basicamente
alimentados no gráfico.

130
00:06:30,150 --> 00:06:32,610
Então, "sides" é
um marcador,

131
00:06:32,610 --> 00:06:34,425
não mais uma constante tf.

132
00:06:34,425 --> 00:06:38,460
E quando você executar
e quiser avaliar a área,

133
00:06:38,460 --> 00:06:40,905
passaremos um par de chave-valor.

134
00:06:40,905 --> 00:06:44,460
A chave é o nome do tensor, sides,

135
00:06:44,460 --> 00:06:50,310
e o valor agora é a matriz 2D porque você
está passando, e uma matriz de triângulos.

136
00:06:50,310 --> 00:06:54,825
Então, agora podemos executar, e isso
mostra essencialmente o mesmo resultado.

137
00:06:54,825 --> 00:07:00,060
A última parte do bloco de notas mostra
como podemos evitar essas duas etapas,

138
00:07:00,060 --> 00:07:03,270
criar o gráfico e executá-lo
usando tf imediato.

139
00:07:03,270 --> 00:07:09,450
Agora estamos chamando
enable_eager_execution.

140
00:07:09,450 --> 00:07:15,450
Ao chamar isso, garantimos que agora
não haja mais duas etapas.

141
00:07:15,450 --> 00:07:18,885
Não é criar e executar o gráfico,
mas o processo de criar o gráfico,

142
00:07:18,885 --> 00:07:20,175
tudo o que estamos fazendo,

143
00:07:20,175 --> 00:07:22,650
tudo será avaliado imediatamente.

144
00:07:22,650 --> 00:07:25,500
Então, neste caso, estou criando
a área de computação,

145
00:07:25,500 --> 00:07:27,215
estou fazendo exatamente o mesmo,

146
00:07:27,215 --> 00:07:30,460
e estou dizendo que a área é
compute_area e print area.

147
00:07:30,460 --> 00:07:32,990
Se eu não tenho uma execução imediata,

148
00:07:32,990 --> 00:07:36,180
deixe-me comentar isso para que
você possa ver do que estou falando.

149
00:07:36,180 --> 00:07:40,110
Se eu não tenho uma execução imediata
e executo print area,

150
00:07:40,110 --> 00:07:43,290
só recebo a saída de depuração do tensor.

151
00:07:43,290 --> 00:07:45,970
Então essa é
uma saída de depuração do tensor.

152
00:07:45,970 --> 00:07:48,525
Não estou recebendo os valores aqui,

153
00:07:48,525 --> 00:07:53,790
estou apenas recebendo que isso conterá
a resposta para dois triângulos.

154
00:07:53,790 --> 00:07:59,745
Mas agora vou permitir
a execução imediata e depois executar.

155
00:07:59,745 --> 00:08:04,320
Quando fazemos isso, você percebe que
a saída contém os valores reais.

156
00:08:04,320 --> 00:08:06,195
Eu ainda estou chamando print area.

157
00:08:06,195 --> 00:08:08,790
Eu não chamei session.run print area.

158
00:08:08,777 --> 00:08:11,967
Mas, desta vez,
estou recebendo a resposta de volta.