TensorBoardでトレーニングを
モニタリングする方法をご紹介します 完了した2項目に
チェックマークを付け 残りは2つです train_and_evaluateをすでに使っているので トレーニングが進むにつれて
評価指標が得られます それを可視化するために
TensorBoardツールを使いましょう どんなトレーニングでも
これがベストプラクティスです グラフでトレーニングと評価の
曲線を比較すると 役立つ情報がたくさん得られます 私はtrain_and_evaluateを 分散型トレーニングの時だけでなく
いつも使っています TensorBoardツールを使えば モデルがディスクに書き込むトレーニングと
評価指標を可視化できます TensorBoardはTensorFlow
インストール環境に標準で含まれる コマンドラインツールです RunConfigで指定した
出力ディレクトリを参照すると TensorBoardダッシュボードが
localhost:6006で表示されます 作成済みのEstimatorには 定義済み
標準指標のセットがあるので 他に構成するものは ありません たとえばトレーニングと評価の損失を
同じグラフで確認でき これはモデルの過剰適合を
確認するのに役立ちます Dense Neural Network Estimatorは ゼロを出力するニューロンの断片も追跡します ReLU活性化関数を使うときには
確かにこれが起きますが 注意が必要です すべてゼロを出力する
ニューロンからなるネットワークは 「死んで」います TensorBoardでは TensorFlowグラフも
確認できます これは デバッグする時や コードが生成するグラフを確認したい時に
役立つでしょう カスタムEstimatorの作成で 独自のニューラルネットワーク層を
指定する場合 tf.summary.**コマンドを使用すると さまざまなデータをログに記録し
TensorBoardで可視化できます たとえば 数値、テキスト
画像、音声ファイルも可能です Estimator APIでモデルに
1行追加するだけで出力が得られます 「tf.summary.scalar」に続けて TensorBoardで見たいグラフの名前と プロットする値のテンソルです Estimator APIを使わない場合は 追加のステップが必要です この資料で それを確認してください たとえば これはヒストグラムのプロットです 独自の出力で起こり得る問題を
可視化するのに役立ちます 左側は シグモイドで活性化された
ニューラルネットワーク層の すべての値のヒストグラムです 問題がありますね
ゼロと1がピークになっています ほとんどのニューロンが飽和し
役に立たないでしょう バッチ正規化というテクニックで
これを修正できます これはバッチ正規化後の
同じ層の出力です 役立つ範囲全体で ニューロンが
値を生成するようになりました より良い結果が
生成されるかどうかは モデルによりますが 少なくともバッチ正規化が
機能しているのを確認できます 画像や音声を扱うときは TensorBoardに専用のダッシュボードがあり
目や耳で状態を確認できます コードで関数summary.imageと
summary.audioを使えば 画像や音声ファイルを表すテンソルを
記録することを指定できます そして TensorBoardの専用ダッシュボードに
それらが表示されます たとえばこれは 飛行機の検出モデルの開発で
私が使った可視化です