1
00:00:00,000 --> 00:00:06,700
Estimator APIの説明で使った定数ではなく
実際のデータを考えましょう

2
00:00:06,705 --> 00:00:12,500
データがnumpy配列またはpandasの形で
メモリに収まっている場合

3
00:00:12,500 --> 00:00:15,390
データをモデルにフィードする便利な関数が

4
00:00:15,390 --> 00:00:17,760
Estimator APIに備わっています

5
00:00:17,760 --> 00:00:24,110
estimator.inputs.numpy_input_fnと
estimator.inputs.pandas_input_fnです

6
00:00:24,110 --> 00:00:31,800
特徴辞書をxとして指定し
features_columnのときと同じ名前を使います

7
00:00:31,800 --> 00:00:34,415
labelsはyとして指定します

8
00:00:34,415 --> 00:00:36,235
pandasから読み込むとき

9
00:00:36,235 --> 00:00:38,430
特徴の名前は必要ありません

10
00:00:38,430 --> 00:00:42,240
APIはfeature_columnの定義で
使われた名前に基づき

11
00:00:42,240 --> 00:00:46,155
正しいカラムを
pandasデータフレームから取り出します

12
00:00:46,155 --> 00:00:48,100
これらのinput関数は

13
00:00:48,100 --> 00:00:52,485
ニューラルネットワーク モデルを
トレーニングする主な機能を実装します

14
00:00:52,485 --> 00:00:56,130
通常 トレーニングが最もうまくいくのは

15
00:00:56,130 --> 00:01:01,230
ステップで入力データのミニバッチを
1度に1つずつ実行する場合です

16
00:01:01,230 --> 00:01:05,285
1つのデータ項目でも
データセット全体でもありません

17
00:01:05,285 --> 00:01:08,080
バッチサイズをここで指定できます

18
00:01:08,080 --> 00:01:12,310
また トレーニング中にデータセットを
繰り返す回数も指定でき

19
00:01:12,310 --> 00:01:14,840
これをエポック数といいます

20
00:01:14,840 --> 00:01:20,100
そして トレーニングデータを
徹底的にシャッフルすることが重要です

21
00:01:20,100 --> 00:01:23,245
Estimator APIでそれを行うことができます

22
00:01:23,245 --> 00:01:26,945
その際 データセットがメモリ内に
複製されるのを防ぐには

23
00:01:26,945 --> 00:01:30,045
シャッフルキューのサイズを指定できます

24
00:01:30,045 --> 00:01:35,770
デフォルトでは トレーニングデータを
すべて使用するまでトレーニングします

25
00:01:35,770 --> 00:01:41,130
またはinput関数のエポック数がnの場合は
n回使用します

26
00:01:41,130 --> 00:01:43,445
これをオーバーライドできます

27
00:01:43,445 --> 00:01:47,775
つまりtrain関数を呼び出すときに
ステップ数を明示的に指定できます

28
00:01:47,775 --> 00:01:50,610
ステップを設定する2つの変数があります

29
00:01:50,610 --> 00:01:53,820
まずsteps=1000は

30
00:01:53,820 --> 00:01:58,965
前回のチェックポイントから1,000回の
追加的なステップを実行します

31
00:01:58,965 --> 00:02:03,210
1回のステップは
入力データのバッチ1つ分です

32
00:02:03,210 --> 00:02:09,315
次にmax_steps=1000は
最新のチェックポイントから再開し

33
00:02:09,315 --> 00:02:12,255
前回の実行で達したステップ数を読み取り

34
00:02:12,255 --> 00:02:15,765
ステップ数がmax_stepsになるまで続けます

35
00:02:15,765 --> 00:02:20,085
これはチェックポイントがすでにあると
何もしない可能性があります

36
00:02:20,085 --> 00:02:25,970
これがコード全体です
feature_column、 model、input関数があり

37
00:02:25,970 --> 00:02:30,870
pandas、dataframe、トレーニング自体から
データを読み取ります

38
00:02:30,870 --> 00:02:33,090
新しい特徴を追加したいですか？

39
00:02:33,090 --> 00:02:35,745
たとえば 戸建ての寝室（bedroom）の数を

40
00:02:35,745 --> 00:02:38,385
feature_columnのリストに追加して

41
00:02:38,385 --> 00:02:42,770
pandasデータフレームでも
必ずそれと同じ名前にします