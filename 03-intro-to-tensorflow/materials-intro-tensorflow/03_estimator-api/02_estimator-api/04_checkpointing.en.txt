Now, let's talk about checkpoints. They will be important when you start training larger models. Why are these important? They allow you to continue training, resume on failure, and predict from a train model. You get checkpoints for free, just specify a folder directory. And let's take a look at the code. In the previous lesson we trained an estimator by calling the train function and then predicted house prices by calling the predict function. But of course, it is not practical to do this every time, especially when training takes a long time. We need a way to save our train model. It's called a checkpoint. Checkpoints come as standard, when you use the estimator API. Specify a folder, when you instantiate the model and checkpoints will be saved there periodically. How'd you restore an estimator from a checkpoint in the same way? Specify a folder when you instantiated, if a checkpoint is found there it is loaded, and the estimator is ready for predictions. Training will also raise you from the latest checkpoint. This is how you continue training when you think that a couple more training steps are necessary. If you want to restart from scratch, delete this folder. Without any checkpoints to start from, the estimator will train from scratch. Please be aware that restarting from the latest checkpoint, is the default behavior of estimators. This is useful, but you have to remember, to delete the checkpoints directory, to restart training. Especially, when you have changed the model.