Sehen wir uns zuerst die Komponenten
der Estimator API an und die Handhabung anderer gängiger ML-Aufgaben
wie verteiltes Training, Überwachung und Bereitstellung. Estimators sind ein Teil der 
fortgeschritteneren TensorFlow APIs. Ihr erster Kontakt mit
TensorFlow im vorherigen Modul beschränkte sich auf
die Grundlagen von TensorFlow. Sie verwenden TensorFlow hier aber
nur als Bibliothek zur Zahlenverarbeitung. Unterhalb dieser Ebene liegen einige
APIs, mit denen Sie selten interagieren. Sie dienen der Hardware, CPU, GPU, TPU
oder alternativen Plattformen wie Android. Über den Kernfunktionen von TensorFlow 
finden Sie APIs für typische Bausteine, die zum Erstellen
eines Modells benötigt werden. Verschiedene neuronale Netzwerkschichten,
verschiedene Verlustfunktionen und mehr. Und schließlich Estimators. Ein simples TensorFlow-Modell umfasst
meist einige neurale elektrische Schichten und eine Trainingsschleife. Vielleicht fragen Sie sich,
warum Sie dabei Hilfe brauchen sollten. Sie wissen, wie man
eine Schleife programmiert. Das ist richtig,
aber inzwischen verwende ich selbst für winzige
Protypmodelle meistens Estimators. Ich finde es gut, dass sie austauschbar
sind und ich viele standardmäßige, vorgefertigte Estimator-Modelle
schnell hintereinander testen kann. Mit der Datenmenge und der Trainingszeit
steigen jedoch auch die Anforderungen. Brauchen Sie Checkpoints, um
das Training anzuhalten und fortzusetzen? Estimators haben sie. Ihre Daten sind zu groß
für den Arbeitsspeicher? Estimators haben eine Dataset API,
die solche Datasets verarbeitet. Sie können ein großes Netzwerk nur
trainieren, wenn Sie sehen, wie es läuft. Estimators erfassen während des 
Trainings automatisch wichtige Messwerte für die Visualisierung im Tensorboard. Vielleicht denken Sie
jetzt an verteiltes Training? Estimators enthalten bereits den
benötigten Cluster-Aggregationsscode. Und schließlich wollen Sie Ihr Modell
so verpacken, dass es bereit für die Hyperparameter-Optimierung
der ML-Engine ist, oder es mit dem verwalteten und autoskalierten
Vorhersagedienst der ML-Engine in die Produktion verschieben. Auch das kann die Estimator API. Wollen Sie Ihre Trainingsschleife
jetzt immer noch selbst schreiben, mit all dem Boilerplate-Code,
der sich immer wiederholt? Ich denke nicht, also
sehen wir uns die Estimator API einmal an. Mit dem Basisklassen-Estimator können Sie
Ihr eigenes Modell einbetten, dass Sie aus Ebenen der TF Layers API erstellen. Wenn Sie aber etwas recht Einfaches
bauen wollen, brauchen Sie das nicht. TensorFlow hat einige vorgefertigte
Estimators für Sie zum Ausprobieren. Lineare oder dichte neuronale Netzwerk-
Klassifikatoren zur Datenkategorisierung und ähnliche Regressoren zur
Vorhersage von kontinuierlichen Werten. Nicht zu vergessen den
DNNLinearCombinedClassifier, bekannt als das breite und tiefe Modell, gemäß dem 
Google-Paper, das ihn bekannt machte. Er ist sehr wichtig, weil wir ihn
zum Beispiel für die Empfehlungs-Engine von Google Play nutzen. Er ist jedoch sehr flexibel und wurde schon als Zugpferd des maschinellen
Lernens in Unternehmen bezeichnet. Er funktioniert für alle strukturierten
Daten und ist sofort einsatzbereit. Dank der gemeinsamen API sind
vorgefertigte Estimators austauschbar. Man kann sie alle leicht ausprobieren.