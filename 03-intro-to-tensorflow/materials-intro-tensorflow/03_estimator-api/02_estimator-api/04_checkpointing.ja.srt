1
00:00:00,000 --> 00:00:02,550
チェックポイントについてご説明します

2
00:00:02,550 --> 00:00:06,265
これは 大きなモデルのトレーニングで
重要になります

3
00:00:06,265 --> 00:00:07,890
なぜ重要ですか？

4
00:00:07,890 --> 00:00:10,200
これを使えばトレーニングを継続し

5
00:00:10,200 --> 00:00:13,735
エラー地点から再開し
トレーニングモデルから予測できます

6
00:00:13,735 --> 00:00:15,500
チェックポイントは無料です

7
00:00:15,500 --> 00:00:18,015
フォルダディレクトリを指定するだけです

8
00:00:18,015 --> 00:00:20,160
コードを見てみましょう

9
00:00:20,160 --> 00:00:24,710
前のレッスンでtrain_functionを呼び出して
Estimatorをトレーニングし

10
00:00:24,710 --> 00:00:28,730
predict_functionを呼び出して
戸建ての価格を予測しました

11
00:00:28,730 --> 00:00:32,220
これを毎回行うのは非現実的です

12
00:00:32,220 --> 00:00:35,265
特にトレーニングが長時間のときは

13
00:00:35,265 --> 00:00:38,460
トレーニングモデルを保存する方法が必要です

14
00:00:38,460 --> 00:00:40,610
それがチェックポイントです

15
00:00:40,610 --> 00:00:44,475
Estimator APIではチェックポイントを
標準として使えます

16
00:00:44,475 --> 00:00:47,709
モデルをインスタンス化するときに
フォルダを指定すると

17
00:00:47,709 --> 00:00:50,350
チェックポイントが定期的に保存されます

18
00:00:50,350 --> 00:00:53,920
チェックポイントからEstimatorを
復元するには？

19
00:00:53,920 --> 00:00:57,369
同じように
インスタンス化フォルダを指定します

20
00:00:57,369 --> 00:01:00,190
チェックポイントが見つかれば
読み込まれて

21
00:01:00,190 --> 00:01:03,175
Estimatorで予測する準備ができます

22
00:01:03,175 --> 00:01:07,110
またトレーニングは
最新のチェックポイントから再開します

23
00:01:07,110 --> 00:01:09,550
トレーニングステップがもっと必要なら

24
00:01:09,550 --> 00:01:12,050
この方法でトレーニングを継続できます

25
00:01:12,050 --> 00:01:16,250
最初からやり直したいときは
フォルダを削除します

26
00:01:16,250 --> 00:01:18,620
開始するチェックポイントがなければ

27
00:01:18,620 --> 00:01:21,105
Estimatorはゼロからトレーニングします

28
00:01:21,105 --> 00:01:23,840
なおEstimatorのデフォルト動作は

29
00:01:23,840 --> 00:01:27,280
最新のチェックポイントから再開することです

30
00:01:27,280 --> 00:01:29,025
これは便利です ただし

31
00:01:29,025 --> 00:01:32,935
トレーニングをやり直すには
ディレクトリを削除してください

32
00:01:32,935 --> 00:01:36,250
特にモデルを変更したときは
注意が必要です