Vamos para os dados reais,
e não as constantes que usamos anteriormente para
ilustrar a API Estimator. Se os dados cabem em uma memória
na forma de matrizes numpy ou Pandas, a API Estimator tem funções fáceis de
conveniência para inseri-los no modelo, chamadas estimator.inputs.numpy_input_fn
e estimator.inputs.Pandas_input_fn. Você especifica o dicionário de atributos
como x, usando os mesmos nomes usados ​​para definir as colunas de
atributo, e os rótulos como y. Ao ler do Pandas, esses nomes de atributos
não são necessários. A API selecionará as colunas corretas do frame de dados do Pandas com base nos
nomes usados ​​nas colunas de atributo. Essas funções de entrada implementam as principais funcionalidades necessárias
ao treinar modelos de redes neurais. Geralmente, o treinamento funciona
melhor quando uma etapa de treinamento é executada no chamado minilote de
dados de entrada por vez, não um único item de dados e nem
todo o conjunto de dados. Você pode especificar o
tamanho do lote aqui. E também dizer quantas
vezes quer repetir o conjunto de dados durante o treinamento,
que é o número de épocas. E, por fim, o rigor na organização dos
dados de treinamento é importante. Você pode pedir à API Estimator
para fazer isso. E, para evitar a replicação do conjunto
de dados na memória, ao fazer isso, você pode especificar o
tamanho da fila aleatória. Por padrão, o treino será executado
até que os dados de treinamento sejam esgotados ou esgotados n vezes, se você
especificar n épocas na função de entrada. Você também pode modificar isso com um número explícito de etapas
ao chamar a função de treino. Há duas variantes para a
configuração da etapa. Etapas equivalentes a 1.000 executarão 1.000 etapas de treinamento adicionais
do último ponto de verificação. Uma etapa aqui corresponde a um lote
de dados de entrada. Etapas máximas iguais a 1.000 reiniciam
dos pontos de verificação mais recentes, leem a contagem de etapas
alcançada na execução anterior e continuam até que a contagem
atinja o máximo de etapas. Isso pode não fazer nada se o ponto
de verificação já está lá. Aqui está o código inteiro com
colunas de atributo, um modelo, uma função de entrada que lê dados de um
frame do Pandas e o próprio treinamento. Você gostaria de adicionar
um novo atributo? Como o número de quartos da casa. Você pode adicioná-lo à lista de colunas
de atributo e verificar se ele está presente com o mesmo nome
no frame de dados do Pandas.