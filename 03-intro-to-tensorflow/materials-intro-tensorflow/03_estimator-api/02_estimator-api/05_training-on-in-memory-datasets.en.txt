Let's move to real data and not the constants we have been using previously to illustrate the Estimator API. If your data fits a memory in the form of either numpy arrays or Pandas, the Estimator API has easy convenience functions for feeding them into your model. They are called estimator.inputs.numpy_input_fn and estimator.inputs.Pandas_input_fn. You specify your feature dictionary as x using the same names as the ones you used to, to define features columns and your labels as y. When the reading from Pandas, these feature names are not even necessary. The API will pick up the correct columns from your Pandas data frame based on the names you used when defining feature columns. These input functions implement the key functionalities needed when training neural network models. Typically, training works best when one training step is performed on what is called a mini batch of input data at a time, not a single data item and not the entire data set either. You can specify the batch size here. You can also say how many times you want to repeat the data set during training called the number of epochs. And finally, thoroughness shuffling your training data is important. You can ask the Estimator API to do it. And to avoid replicating the data set in memory, when doing so, you can specify the size of the shuffle queue. By default, training will run until your training data is exhausted or exhausted n times if you specifies you want n epochs in your input function. You can also override this with an explicit number of steps when calling the train function. There are two variants for the step setting. Steps equals 1,000 will run 1,000 additional training steps starting from the last checkpoint. One step here corresponds to one batch of input data. Max steps equals 1,000 on the other hand restarts from the latest check points reads the step count reached in the previous run and continues until the step count reaches max steps. This can potentially do nothing if the checkpoint was already there. Here is the entire code with feature columns, a model, an input function that reads data from a Pandas data frame and the training itself. Would you like to add a new feature? Let's say the number of bedrooms in the house. You can add it to the list of feature columns and make sure it is present with the same name in the Pandas data frame.