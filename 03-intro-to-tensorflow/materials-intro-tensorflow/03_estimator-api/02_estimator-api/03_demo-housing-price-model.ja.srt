1
00:00:00,000 --> 00:00:03,910
これまでのコードを実行しましょう

2
00:00:06,110 --> 00:00:10,055
まずここでfeature_columnを定義します

3
00:00:10,055 --> 00:00:13,070
面積のnumeric_columnが1つ

4
00:00:13,070 --> 00:00:21,500
物件タイプ（戸建てまたはアパート）の
categorical_column_with_vocaburary_listです

5
00:00:21,510 --> 00:00:26,610
同じ形式に設定されたデータを提供します

6
00:00:26,610 --> 00:00:30,735
このtrain_input関数でそれを行います

7
00:00:30,735 --> 00:00:33,600
下で定義しているように

8
00:00:33,600 --> 00:00:35,535
特徴（features）は面積です

9
00:00:35,535 --> 00:00:40,425
6つのデータからなるリストです

10
00:00:40,425 --> 00:00:43,130
そして再び物件タイプです

11
00:00:43,130 --> 00:00:46,090
6つの物件タイプからなるリストで

12
00:00:46,090 --> 00:00:48,330
3つの戸建てと3つのアパートです

13
00:00:48,330 --> 00:00:51,365
最後にターゲットとなるlabelsは

14
00:00:51,365 --> 00:00:56,015
1,000ドル単位の物件価格です

15
00:00:56,015 --> 00:01:01,340
こうしてtrain_input関数と
feature_columnができたので

16
00:01:01,340 --> 00:01:04,550
LinearRegressorをインスタンス化できます

17
00:01:04,550 --> 00:01:06,534
作成済みEstimatorです

18
00:01:06,534 --> 00:01:08,755
トレーニングを開始するために

19
00:01:08,755 --> 00:01:13,760
model.trainを呼び出し
train_input関数をパラメータとして渡します

20
00:01:13,760 --> 00:01:16,740
トレーニングがこうして行われます

21
00:01:16,740 --> 00:01:19,245
完了したら

22
00:01:19,245 --> 00:01:22,080
予測を試してみましょう

23
00:01:22,080 --> 00:01:25,300
それにはpredict_input関数が必要です

24
00:01:25,300 --> 00:01:28,820
今回の特徴に合わせて

25
00:01:28,820 --> 00:01:31,740
square_footageとtypeを使います

26
00:01:31,840 --> 00:01:39,370
predict_input関数を定義し
それを使ってmodel.predictを呼び出します

27
00:01:39,370 --> 00:01:42,965
これで予測ジェネレーターができました

28
00:01:42,965 --> 00:01:45,010
Pythonのジェネレーターです

29
00:01:45,010 --> 00:01:47,315
そこから値が得られるでしょうか？

30
00:01:47,315 --> 00:01:49,990
「次の予測」をコーディングします

31
00:01:49,990 --> 00:01:54,492
やってみましょう
できました

32
00:01:54,492 --> 00:01:58,682
戸建ての価格が
1,000ドル単位で表示されます