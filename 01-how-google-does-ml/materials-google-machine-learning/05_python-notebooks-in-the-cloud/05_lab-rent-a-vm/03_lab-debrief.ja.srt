1
00:00:00,000 --> 00:00:04,560
このラボでは 必要なアクセスと
セキュリティを備えた

2
00:00:04,560 --> 00:00:09,360
Compute Engineインスタンスの
作成方法について見ました

3
00:00:09,360 --> 00:00:12,370
そしてCloud Storageでデータを交換し

4
00:00:12,370 --> 00:00:14,470
簡単なタスクを行いました

5
00:00:14,470 --> 00:00:19,277
つまり ウェブページで現在の
地震データを表示することです

6
00:00:19,277 --> 00:00:23,610
GCP Consoleにログインした後 
まず最初に

7
00:00:23,610 --> 00:00:28,115
Compute Engineインスタンスを
作成しました

8
00:00:28,115 --> 00:00:31,710
Compute Engineインスタンスは
左側にあります

9
00:00:31,710 --> 00:00:35,520
ここでCompute Engineと
VMインスタンスがあります

10
00:00:37,150 --> 00:00:40,560
ここで インスタンスを作成できます

11
00:00:43,460 --> 00:00:45,965
インスタンスには好きな名前を付けられます

12
00:00:45,965 --> 00:00:49,545
「earthquake」という名前にしましょう

13
00:00:50,475 --> 00:00:53,885
us-central1-bを選びます

14
00:00:55,540 --> 00:00:58,320
vCPUは1つで十分でしょう

15
00:00:58,320 --> 00:01:01,690
すべてのCloud APIへのアクセスを許可して

16
00:01:02,790 --> 00:01:04,860
インスタンスを作成します

17
00:01:05,870 --> 00:01:08,685
現在 インスタンスを作成中です

18
00:01:08,685 --> 00:01:10,605
ラベルは必要ありませんので

19
00:01:10,605 --> 00:01:12,618
情報パネルを非表示にします

20
00:01:12,618 --> 00:01:17,450
earthquakeというインスタンスを
us-central1-bゾーンに作成中です

21
00:01:17,450 --> 00:01:20,240
まだIPアドレスがありません ...

22
00:01:20,240 --> 00:01:24,553
はい インスタンスができました
外部IPもあります

23
00:01:24,553 --> 00:01:27,760
SSHメニュー項目に移り

24
00:01:27,760 --> 00:01:32,060
SSHをクリックして先に進みます

25
00:01:32,060 --> 00:01:37,700
ポップアップを許可しさらにSSHします

26
00:01:39,770 --> 00:01:48,010
作成したばかりの仮想マシンに
SSHでアクセスしました

27
00:01:48,010 --> 00:01:51,119
作成したばかりの この仮想マシンには

28
00:01:51,119 --> 00:01:54,319
必要なソフトウェアがありません

29
00:01:54,319 --> 00:01:59,575
重要なソフトウェアとして たとえば
gitというソフトが必要でしょう

30
00:01:59,575 --> 00:02:04,030
これを使うと
リポジトリからソースコードを入手できます

31
00:02:04,030 --> 00:02:06,000
しかしgitと入力しても

32
00:02:06,000 --> 00:02:08,090
gitコマンドが見つかりません

33
00:02:08,090 --> 00:02:11,065
まずgitをインストールする必要があります

34
00:02:11,065 --> 00:02:17,796
sudo apt-get install gitで
インストールできます

35
00:02:17,796 --> 00:02:21,940
ここで 別のセルで続行します

36
00:02:23,620 --> 00:02:25,490
gitがインストール中です

37
00:02:25,490 --> 00:02:28,810
Sudoではルートとして操作できるので

38
00:02:28,810 --> 00:02:32,990
VMにソフトウェアをインストールする
ためのアクセス権が得られます

39
00:02:32,990 --> 00:02:36,555
ここでgitと入力すると gitが存在します

40
00:02:36,555 --> 00:02:38,550
gitがインストール済みです

41
00:02:38,550 --> 00:02:41,645
次に このコースに対応するコードの

42
00:02:41,645 --> 00:02:45,815
gitクローンを作成します

43
00:02:45,815 --> 00:02:53,955
これはgithub.com Google Cloud Platform
training-data-analystにあります

44
00:02:55,775 --> 00:03:01,335
この時点でリポジトリ
training data analystがあります

45
00:03:01,335 --> 00:03:04,190
ここでQwiklabに戻ると

46
00:03:04,190 --> 00:03:07,260
先ほどCompute Engineインスタンスを
すでに作成し

47
00:03:07,260 --> 00:03:08,880
それにSSH接続して

48
00:03:08,880 --> 00:03:11,290
gitソフトウェアをインストールしました

49
00:03:11,290 --> 00:03:12,730
次は どうしますか

50
00:03:12,730 --> 00:03:17,955
USGSから地震データを取り込みましょう

51
00:03:17,955 --> 00:03:22,379
幸い データを入手可能にする
スクリプトが作成済みで

52
00:03:22,379 --> 00:03:26,970
そのスクリプトはリポジトリの中にあります

53
00:03:26,970 --> 00:03:29,990
training data analystに移動して

54
00:03:29,990 --> 00:03:32,465
... どこを見ましょうか

55
00:03:33,395 --> 00:03:41,294
コース/機械学習/
deepdive 01 googlemlを調べる必要があります

56
00:03:41,294 --> 00:03:42,810
やってみましょう

57
00:03:42,810 --> 00:03:46,890
cdに続いてcourses machine learning deepdive

58
00:03:46,890 --> 00:03:49,080
タブの入力補助を使っているので

59
00:03:49,080 --> 00:03:51,138
すべてを入力しなくて済みます

60
00:03:51,138 --> 00:03:54,270
cd 01 googlemlと入力すると

61
00:03:54,270 --> 00:04:00,190
必要なスクリプトがここにあります

62
00:04:00,190 --> 00:04:06,715
次にingest.shを調べることができます
見てみましょう

63
00:04:06,715 --> 00:04:09,730
earthquakes（地震）の中です

64
00:04:11,100 --> 00:04:14,140
less ingest.shと入力します

65
00:04:15,010 --> 00:04:19,739
これで既存のearthquakes.csvが
すべて削除され

66
00:04:19,739 --> 00:04:26,345
download wgetつまりweb getにより
csvファイルをダウンロードします

67
00:04:26,345 --> 00:04:29,369
その名前はearthquakes.csvです

68
00:04:29,369 --> 00:04:34,508
実行するにはbash ingest.shと
入力します

69
00:04:34,508 --> 00:04:39,775
これでearthquakes.csvが
存在するようになりました

70
00:04:39,775 --> 00:04:44,315
最初の数行を見るためにheadできます

71
00:04:44,895 --> 00:04:47,960
ファイルの最初の10行です

72
00:04:47,960 --> 00:04:54,700
ここ数週間に発生したすべての地震の
時刻 緯度 経度が表示されます

73
00:04:55,453 --> 00:04:58,073
これを入手した後

74
00:04:58,073 --> 00:05:00,727
データを変換できます

75
00:05:00,727 --> 00:05:02,722
データの変換が終わりました

76
00:05:02,722 --> 00:05:05,185
これはDatalab Notebookの一例です

77
00:05:05,185 --> 00:05:08,400
これクリックして概観を見てみましょう

78
00:05:08,400 --> 00:05:11,450
earthquakes.iphython Notebookがあり

79
00:05:11,450 --> 00:05:15,380
実行中のコードが表示されます

80
00:05:15,380 --> 00:05:18,760
このコードは地震のデータを入手し

81
00:05:18,760 --> 00:05:22,380
matplotlibを使ってそれをプロットします

82
00:05:22,380 --> 00:05:27,644
次にそれをpng画像ファイルとして保存します

83
00:05:28,914 --> 00:05:30,763
操作を進めます

84
00:05:30,763 --> 00:05:36,475
指示に戻り 足りないソフトウェアを
すべてインストールする必要があります

85
00:05:36,475 --> 00:05:38,480
他にどんなソフトウェアが必要か

86
00:05:38,480 --> 00:05:41,093
ちょっと調べてみましょう

87
00:05:42,173 --> 00:05:49,360
install missing.shがあります
その中のインストール指示によると

88
00:05:49,360 --> 00:05:52,540
basemapをインストールする必要があります

89
00:05:52,540 --> 00:05:56,574
basemapはPythonパッケージです
これで地図を描くことができます

90
00:05:56,574 --> 00:05:59,685
Python numpyは数値処理用ライブラリです

91
00:05:59,685 --> 00:06:03,590
matplotlibは
基礎プロッティング用ライブラリです

92
00:06:03,590 --> 00:06:07,200
必要な3つのPythonパッケージだけを
インストールします

93
00:06:07,200 --> 00:06:10,720
bash install missing.shと入力すると

94
00:06:11,600 --> 00:06:14,925
これらのソフトウェア
パッケージをすべて入手して

95
00:06:14,925 --> 00:06:18,845
この仮想マシンにインストールします

96
00:06:19,995 --> 00:06:23,286
これで ソフトウェアが
すべてインストールされました

97
00:06:23,286 --> 00:06:29,121
次に このディレクトリで
transform.pyを実行できます

98
00:06:29,121 --> 00:06:30,850
transform.pyの中には

99
00:06:30,850 --> 00:06:34,680
IPython Notebookのすべての
pythonコードが含まれています

100
00:06:34,680 --> 00:06:38,139
プロットして画像ファイルを
作成するコードです

101
00:06:38,139 --> 00:06:43,043
ではpython transfrom.pyを実行しましょう

102
00:06:50,173 --> 00:06:52,160
この時点で

103
00:06:55,172 --> 00:06:57,675
ls minus lrtを実行できるならば

104
00:06:57,675 --> 00:07:00,430
作成したばかりの内容を表示できます

105
00:07:00,430 --> 00:07:04,090
ご覧のように新しいファイル
earthquakes.pngがあります

106
00:07:04,090 --> 00:07:05,770
画像ファイルです

107
00:07:05,770 --> 00:07:09,706
この画像ファイルを取り出して
クラウドに置く必要があるとします

108
00:07:09,706 --> 00:07:11,865
クラウド上のストレージ つまり

109
00:07:11,865 --> 00:07:14,755
Google Cloud Storageに置いてみましょう

110
00:07:14,755 --> 00:07:17,550
そのために バケットを作成します

111
00:07:18,980 --> 00:07:25,287
GCPウェブサービスメニューに戻ります

112
00:07:25,287 --> 00:07:31,460
左側にあるバーをクリックして
Storageまでスクロールダウンし

113
00:07:31,460 --> 00:07:33,540
バケットを作成します

114
00:07:33,540 --> 00:07:36,545
このバケットの名前は
一意である必要があります

115
00:07:36,545 --> 00:07:38,285
世界で他にない名前です

116
00:07:38,285 --> 00:07:41,637
世界中で一意のものと言えば
プロジェクト名です

117
00:07:41,637 --> 00:07:43,570
よほど運が悪くない限り

118
00:07:43,570 --> 00:07:47,420
私たちのプロジェクト名を
誰もバケット名に使っていないでしょう

119
00:07:47,420 --> 00:07:52,263
ですからプロジェクトの名前をコピーします

120
00:07:53,963 --> 00:07:58,720
それをバケットの名前として使います

121
00:07:59,020 --> 00:08:04,370
複数リージョンまたは特定リージョンの
バケットにすることができます

122
00:08:04,370 --> 00:08:07,268
ここでは特定リージョンバケットを作成します

123
00:08:07,268 --> 00:08:08,790
us-central1です

124
00:08:08,790 --> 00:08:14,045
Compute Engineインスタンスの作成に
使ったのと同じリージョンですね

125
00:08:14,045 --> 00:08:17,895
これで データ取得にかかる待ち時間が減ります

126
00:08:17,895 --> 00:08:20,410
こうして作成してみましょう

127
00:08:20,410 --> 00:08:23,270
これでバケットが作成されました

128
00:08:23,270 --> 00:08:30,041
ここで 作成したばかりのearthquake.pngを
このバケットにコピーします

129
00:08:30,041 --> 00:08:31,450
その方法は？

130
00:08:31,450 --> 00:08:34,600
gsutilを使うことができます

131
00:08:34,600 --> 00:08:39,502
コピーするには まずgsutilと入力し

132
00:08:40,402 --> 00:08:42,490
バケットの名前を入力します

133
00:08:42,490 --> 00:08:45,740
バケット名は 先程のように
プロジェクトの名前です

134
00:08:45,740 --> 00:08:48,730
幸いにもこのプロジェクト名を使えます

135
00:08:54,000 --> 00:08:59,055
プロジェクト名 さらにたとえばearthquakes

136
00:08:59,055 --> 00:09:01,475
これで すべてのファイル

137
00:09:01,475 --> 00:09:06,785
earthquakes.htm earthquakes.png
earthquakes.csvが3つとも

138
00:09:06,785 --> 00:09:11,315
クラウドにコピーされ
バケットの中に存在します

139
00:09:11,315 --> 00:09:16,885
実際にバケットに戻って更新表示してみます

140
00:09:16,885 --> 00:09:21,939
これはearthquakesです
中には3つのファイルがあります

141
00:09:21,939 --> 00:09:28,060
次に3つのファイルをすべて取り出して
パブリックに共有してみましょう

142
00:09:28,060 --> 00:09:29,815
パブリックに共有すると

143
00:09:29,815 --> 00:09:32,755
パブリックリンクを入手できます

144
00:09:32,755 --> 00:09:37,120
このearthquakes.htmの
パブリックリンクをクリックできます

145
00:09:37,120 --> 00:09:40,265
クリックして表示されるのは

146
00:09:40,265 --> 00:09:45,115
storage.googleapis.com/プロジェクト名

147
00:09:45,115 --> 00:09:48,965
/earthquake/earthquake.htmです

148
00:09:48,965 --> 00:09:51,480
これは基本的にフォルダ構造です

149
00:09:51,480 --> 00:09:55,845
そして完全に公開されたウェブページが
見えます

150
00:09:55,845 --> 00:10:01,305
公開ウェブページである理由は
すでにパブリックにしたからです

151
00:10:01,305 --> 00:10:03,145
公開共有を設定しました

152
00:10:03,145 --> 00:10:07,930
そうしないと
ウェブでこれにアクセスできません

153
00:10:07,930 --> 00:10:13,180
こうして このラボではCompute Engineを使用し

154
00:10:13,180 --> 00:10:17,590
さらにCloud Storageを基本的に
コンピューティングリソースとして

155
00:10:17,590 --> 00:10:19,710
従来型の方法で使いました

156
00:10:19,710 --> 00:10:24,040
もちろんこの方法でリソースを
使うわけではありません

157
00:10:24,040 --> 00:10:29,035
VMを作成してソフトウェアを
インストールするわけではありません

158
00:10:29,035 --> 00:10:31,100
代わりに このコースの大半では

159
00:10:31,100 --> 00:10:34,440
いわゆるマネージド サービスを使用します

160
00:10:34,440 --> 00:10:37,640
これを使えば 必要なコードを実行するときに

161
00:10:37,640 --> 00:10:40,340
自分でVMをプロビジョニングしたり

162
00:10:40,340 --> 00:10:43,610
ソフトウェアをインストールしたり
しなくて済みます

163
00:10:43,610 --> 00:10:47,150
代わりに「ここにあるコードを
実行しなさい」と指示し

164
00:10:47,150 --> 00:10:50,730
最終結果として
そのコードの影響がなくなります

165
00:10:50,730 --> 00:10:54,300
このような高いレベルの より抽象的な形で

166
00:10:54,300 --> 00:10:56,240
クラウドサービスを使う方法を

167
00:10:56,240 --> 00:10:58,020
この後のラボで見ていきます

168
00:10:58,020 --> 00:11:02,392
今回のラボで皆さまにお見せしたかったことは

169
00:11:02,392 --> 00:11:06,672
どんな基礎の上に
すべての機能が構築されているか

170
00:11:06,672 --> 00:11:10,832
つまり
コンピューティング用のCompute Engineと

171
00:11:10,832 --> 00:11:14,712
永続的保存のためのCloud Storageの基礎です