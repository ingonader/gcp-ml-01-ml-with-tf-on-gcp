Muchas tareas son imposibles de resolver
sin el aprendizaje automático. Hagamos un alto
y veamos cómo clasificaríamos estas imágenes sin un modelo de AA. Si escribiéramos un algoritmo
para clasificar estas imágenes probablemente una serie
de instrucciones IF ¿qué nos interesaría? Si pensaron en el color, van bien. Podríamos ver el color
de los pixeles en la imagen. Si la mayoría de los pixeles fueran rojos la clasificación de salida
sería "manzana". Si la mayoría de los pixeles
fueran naranja la salida sería "naranja". Esto funcionaría muy bien
con este ejemplo. Pero, ¿y si las imágenes variaran? ¿Y si tuviéramos imágenes
en escala de grises? Tendríamos
que buscar un atributo diferente. Tal vez la presencia de tallo
o la textura de la imagen. Tendríamos que escribir nuestro algoritmo
de nuevo para obtener una clasificación
precisa de estas imágenes. ¿Y si agregáramos una tercera fruta
a la ecuación? ¿Si agregáramos un mango?
Entienden la idea. Tendríamos que volver a escribir
el algoritmo de clasificación otra vez. Pero estas imágenes
son todas muy similares. Todas son circulares. Todas son frutas. Si tuviéramos dos imágenes
que quisiéramos clasificar que no se parecieran en nada,
la tarea debería ser bastante simple. ¿Y si tuviéramos las imágenes
de un perro y un trapeador? Debería ser muy fácil clasificarlas. El perro es un ser viviente. El trapeador no tiene ojos,
nariz ni boca. Debería ser una tarea
de clasificación bastante sencilla. Pero se darán cuenta de que,
en realidad, es bastante difícil. Aquí tenemos cuatro fotos
de perros pastores y cuatro de trapeadores y es difícil incluso para el ojo humano
distinguir el uno del otro. Entienden lo que quiero decir,
no debemos escribir código específico para identificar cada tipo posible
de elemento que veamos en las imágenes. En vez, debemos escribir código
que encuentre estas reglas por nosotros. Es posible que no tengamos imágenes. Podríamos tener otros tipos
de datos no estructurados que queremos clasificar también. Hoy quiero hablarles de dos maneras en las que
Google Cloud Platform puede ayudarlos a agregar AA a sus aplicaciones. A la izquierda,
tenemos herramientas para ayudarlos a crear modelos de AA personalizados. TensorFlow es una biblioteca
de código abierto desarrollada por el equipo de Google Brain,
que les permite entrenar sus propios modelos de AA con datos propios. Si desean ejecutar modelos de TensorFlow
en la infraestructura administrada de Google, tenemos una herramienta
llamada Cloud Machine Learning Engine. Hoy quiero que nos enfoquemos
en la parte derecha que es lo que me gusta llamar
aprendizaje automático amigable. Son un conjunto de API
entrenadas previamente que ofrecen acceso a modelos
de AA entrenados previamente mediante una única solicitud
a la API de REST. Hablaré de cada una de las API en detalle,
y veremos algunas demostraciones.