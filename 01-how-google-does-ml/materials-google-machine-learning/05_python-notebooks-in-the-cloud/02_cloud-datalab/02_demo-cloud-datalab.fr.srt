1
00:00:00,310 --> 00:00:02,070
Voici à quoi ressemble Datalab.

2
00:00:02,070 --> 00:00:05,907
C'est un bloc-notes Jupyter
à utiliser où que vous soyez

3
00:00:05,907 --> 00:00:08,050
et qui exécute Python, Bash, etc.

4
00:00:08,050 --> 00:00:11,530
Par exemple,
une fois dans cette cellule de code,

5
00:00:11,530 --> 00:00:13,345
je peux saisir du code Python,

6
00:00:13,345 --> 00:00:17,191
"x = 5", "y = x + 5" et

7
00:00:17,191 --> 00:00:22,410
"print (y)".
Si je l'exécute, j'obtiens ce résultat.

8
00:00:22,410 --> 00:00:27,340
Voilà toute la simplicité
et la puissance du bloc-notes.

9
00:00:27,340 --> 00:00:31,210
Le résultat du programme
est incorporé au code même.

10
00:00:31,210 --> 00:00:33,530
Je peux ensuite ajouter une note.

11
00:00:33,530 --> 00:00:37,160
Je peux ajouter, par exemple,
un titre...

12
00:00:42,410 --> 00:00:43,410
Puis du texte...

13
00:00:43,410 --> 00:00:47,080
Lors de l'exécution,
j'obtiens une note.

14
00:00:47,080 --> 00:00:50,860
Vous avez ainsi du code, des résultats,

15
00:00:50,860 --> 00:00:53,900
des commentaires,
le tout dans le même bloc-notes.

16
00:00:54,280 --> 00:00:58,380
Lorsque vous utiliserez ces blocs-notes,
il vous arrivera souvent

17
00:00:58,380 --> 00:01:00,690
d'effacer toutes les cellules,

18
00:01:00,690 --> 00:01:03,470
ce qui entraîne
la suppression des résultats.

19
00:01:03,470 --> 00:01:07,890
Vous pouvez aussi
exécuter toutes les cellules,

20
00:01:07,890 --> 00:01:10,740
ce qui entraîne de fait leur exécution.

21
00:01:10,740 --> 00:01:15,620
Voilà le principe de fonctionnement
du bloc-notes Datalab.