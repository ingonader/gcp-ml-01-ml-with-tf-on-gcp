1
00:00:00,300 --> 00:00:01,410
Have you used Google Docs?

2
00:00:02,760 --> 00:00:06,920
How is it different from documents
edited in a desktop editor?

3
00:00:08,500 --> 00:00:10,970
Have you filed taxes online?

4
00:00:10,970 --> 00:00:15,250
How is the experience different from
doing your taxes in a desktop program?

5
00:00:16,750 --> 00:00:22,020
There are lots of benefits, but
one key aspect is collaboration.

6
00:00:22,020 --> 00:00:24,870
You don't have to email documents back and
forth.

7
00:00:24,870 --> 00:00:28,590
You can work on your taxes,
alongside your accountant.

8
00:00:28,590 --> 00:00:31,800
When I first started doing
scientific research,

9
00:00:31,800 --> 00:00:34,550
collaborating n a single
result was painful.

10
00:00:35,680 --> 00:00:41,220
I'd write some code and create a graph and
then I would create a snapshot, create

11
00:00:41,220 --> 00:00:46,680
the image file, put it into a doc, create
a PDF and send it to my collaborator.

12
00:00:47,710 --> 00:00:51,580
And a few hours later,
my colleague would say, looks great, but

13
00:00:51,580 --> 00:00:53,223
could you add one more year of data?

14
00:00:53,223 --> 00:00:55,125
It looks kind of sparse.

15
00:00:55,125 --> 00:01:00,360
And I'd go through the process
all over again, why?

16
00:01:00,360 --> 00:01:03,950
Because the PDF I'd sent
along was not editable.

17
00:01:03,950 --> 00:01:05,720
Round trips took a long time.

18
00:01:07,540 --> 00:01:10,170
Enter Python notebooks.

19
00:01:10,170 --> 00:01:14,538
I'd write the code, create the graph,
write some commentary and

20
00:01:14,538 --> 00:01:17,590
send the notebook link to my colleague.

21
00:01:17,590 --> 00:01:21,829
And when my colleague wanted to add one
more year of data, she would simply edit

22
00:01:21,829 --> 00:01:26,570
the cell, look at the new graph and
then say see, looks a lot better.

23
00:01:26,570 --> 00:01:28,050
And that was great.

24
00:01:28,050 --> 00:01:30,660
We now had a better notebook
to do the next step.

25
00:01:32,220 --> 00:01:35,552
But one problem with
traditional notebooks,

26
00:01:35,552 --> 00:01:38,720
who runs the server
that hosts these pages?

27
00:01:39,750 --> 00:01:41,430
Whose machine?

28
00:01:41,430 --> 00:01:46,360
If it is mine and my machine goes to
sleep, then my colleague can't work.

29
00:01:48,110 --> 00:01:51,570
When your Datalab notebook
is hosted in the cloud,

30
00:01:51,570 --> 00:01:54,830
you can develop together quite easily.

31
00:01:54,830 --> 00:01:59,700
And just as Google Docs are available,
even when your computer isn't on.

32
00:01:59,700 --> 00:02:02,950
So too are Datalab notebooks,
when you run them on the cloud.

33
00:02:04,200 --> 00:02:06,600
To share a notebook within a project,

34
00:02:06,600 --> 00:02:11,140
other users can simply Datalab connect
to the VM and work using the url.

35
00:02:12,160 --> 00:02:17,180
Another way to share notebooks is through
revision control systems such as Git.

36
00:02:17,180 --> 00:02:22,200
Cloud also frees you from being
constrained by hardware limitations.

37
00:02:22,200 --> 00:02:27,040
Not only can you run Datalab in
any computer instance you want,

38
00:02:27,040 --> 00:02:31,060
you can also change the machine
specs after it's been provisioned.

39
00:02:31,060 --> 00:02:35,150
You can go to the web console,
find the running VM, stop it and

40
00:02:35,150 --> 00:02:37,130
restart it with a new
machine configuration.

41
00:02:38,350 --> 00:02:39,710
As a developer,

42
00:02:39,710 --> 00:02:45,050
to work in Datalab, you simply connect
the VM that's running the notebook server.

43
00:02:45,050 --> 00:02:48,760
The notebooks themselves
can be persisted in Git, so

44
00:02:48,760 --> 00:02:51,730
you can delete the VM if
you don't need it anymore.

45
00:02:51,730 --> 00:02:56,200
And when you run the notebook,
the computation is carried out on the VM.