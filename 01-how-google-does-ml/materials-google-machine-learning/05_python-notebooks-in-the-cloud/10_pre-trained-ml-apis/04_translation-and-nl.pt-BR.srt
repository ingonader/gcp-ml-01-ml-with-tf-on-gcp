1
00:00:00,490 --> 00:00:02,640
A Cloud Natural Language é uma API que
permite

2
00:00:02,640 --> 00:00:03,830
que você compreenda texto

3
00:00:03,830 --> 00:00:05,640
com uma solicitação única da REST API.

4
00:00:05,640 --> 00:00:08,115
Vamos ver o que você pode
fazer com ela.

5
00:00:08,115 --> 00:00:11,835
Primeiro, a API permite extrair
entidades do texto.

6
00:00:11,835 --> 00:00:15,519
Ela também fornece o sentimento
geral da frase ou um documento de texto,

7
00:00:15,519 --> 00:00:18,540
que dirá se a frase é positiva
ou negativa.

8
00:00:19,740 --> 00:00:23,490
Com a sintaxe de análise você pode entrar
nos detalhes linguísticos do texto

9
00:00:23,490 --> 00:00:25,790
para extrair coisas como partes da fala.

10
00:00:25,790 --> 00:00:29,750
E por fim, a API permite classificar o
conteúdo em categorias diferentes.

11
00:00:29,750 --> 00:00:33,230
Vamos ver o métodos de sintaxe de
análise em detalhes.

12
00:00:33,230 --> 00:00:35,350
Para isso, usaremos a frase
de exemplo:

13
00:00:35,350 --> 00:00:38,560
"A Natural Language API nos ajuda a
compreender texto."

14
00:00:38,560 --> 00:00:41,330
Criei uma visualização para mostrar
como é a resposta do

15
00:00:41,330 --> 00:00:42,890
JSON da API.

16
00:00:42,890 --> 00:00:45,690
Ela retorna a chamada árvore de análise
de dependência,

17
00:00:45,690 --> 00:00:49,080
que diz como as diferentes palavras na
frase se relacionam entre si,

18
00:00:49,080 --> 00:00:50,750
quais palavras dependem de quais.

19
00:00:52,200 --> 00:00:53,810
Então temos o rótulo da análise,

20
00:00:53,810 --> 00:00:56,230
que nos diz o papel de cada
palavra na frase.

21
00:00:56,230 --> 00:00:59,940
Por exemplo, "ajuda" é o verbo raiz e
"API" é o sujeito.

22
00:01:01,300 --> 00:01:02,710
Também temos a parte da fala,

23
00:01:02,710 --> 00:01:07,140
que nos dirá se a palavra é um adjetivo,
um substantivo, um verbo etc.

24
00:01:08,450 --> 00:01:11,960
E temos o lema, que é a forma
canônica da palavra, então

25
00:01:11,960 --> 00:01:16,240
nesse exemplo, o lema retornado é
"ajudar", que é o lema para "ajuda".

26
00:01:16,240 --> 00:01:19,250
Isso é útil se você estiver contando o
número de vezes que uma

27
00:01:19,250 --> 00:01:21,930
palavra é usada para descrever
algo no seu aplicativo.

28
00:01:21,930 --> 00:01:25,010
Você não vai querer contar "ajuda"
e "ajudar" como duas coisas,

29
00:01:25,010 --> 00:01:28,050
você usará a forma canônica da palavra
ou o lema para isso.

30
00:01:28,050 --> 00:01:32,260
E por fim, temos detalhes adicionais de
morfologia em nosso texto.

31
00:01:32,260 --> 00:01:34,570
Isso varia com base no idioma
no qual você enviou

32
00:01:34,570 --> 00:01:36,420
o texto para a Natural Language API.

33
00:01:37,870 --> 00:01:40,380
O próximo método é a
classificação de conteúdo.

34
00:01:40,380 --> 00:01:44,380
Para mostrar como funciona, tenho um
artigo de jornal e enviei o título e

35
00:01:44,380 --> 00:01:48,870
a primeira frase para a Natural Language
API a fim de categorizar.

36
00:01:48,870 --> 00:01:51,750
E vemos aqui que ela pode retornar
a categoria "beisebol".

37
00:01:51,750 --> 00:01:55,720
Isso é muito legal, considerando que a
palavra "beisebol" não é mencionada

38
00:01:55,720 --> 00:01:59,720
neste texto. E ela pode classificar
com 99% de competência.

39
00:02:00,410 --> 00:02:04,100
Este método da API oferece mais de 700
categorias possíveis

40
00:02:04,100 --> 00:02:06,540
que você pode usar para classificar
seu texto.

41
00:02:06,540 --> 00:02:09,651
Agora falarei sobre uma empresa que está
usando alguns métodos

42
00:02:09,651 --> 00:02:11,292
diferentes dessa API na produção.

43
00:02:11,292 --> 00:02:15,240
A empresa se chama Wootric, e eles são
uma plataforma de feedback de clientes.

44
00:02:15,240 --> 00:02:17,870
O modo como a Wootric ajuda
clientes a coletar feedbacks

45
00:02:17,870 --> 00:02:19,680
é por meio desta caixa.

46
00:02:19,680 --> 00:02:22,820
Eles a colocam em vários lugares pelo
aplicativo deles e

47
00:02:22,820 --> 00:02:26,660
pedem ao usuário para dar uma nota sobre
a experiência com esta parte

48
00:02:26,660 --> 00:02:28,210
específica do aplicativo.

49
00:02:28,210 --> 00:02:31,943
Então eles dão uma nota de zero a dez, e
esse número é muito fácil

50
00:02:31,943 --> 00:02:33,820
para a Wootric interpretar.

51
00:02:33,820 --> 00:02:37,430
Mas o que é muito mais difícil de saber
é este feedback aberto.

52
00:02:37,430 --> 00:02:39,740
Aí entra a Natural Language API.

53
00:02:39,740 --> 00:02:43,460
Então você está usando a análise de
sentimento para medir se o feedback

54
00:02:43,460 --> 00:02:47,380
aberto da pessoa se alinha com a nota
que ela deu.

55
00:02:47,380 --> 00:02:50,580
Então eles usam entidade e análise
de sintaxe para extrair

56
00:02:50,580 --> 00:02:54,940
entidades-chave do texto e usam isso para
rotear esse feedback de modo apropriado.

57
00:02:54,940 --> 00:02:59,326
Por exemplo, se houver um cliente irritado
com a usabilidade,

58
00:02:59,326 --> 00:03:02,748
eles podem rotear para a pessoa certa
responder quase em tempo real,

59
00:03:02,748 --> 00:03:05,776
em vez de ter alguém verificando
manualmente cada feedback.

60
00:03:07,436 --> 00:03:10,302
Você pode usar a Cloud Natural
Language API no navegador.

61
00:03:10,302 --> 00:03:13,360
Vou mostrar como funciona com uma
demonstração. Vamos ver.

62
00:03:15,020 --> 00:03:19,090
Se formos à página de produtos da Cloud
Natural Language API, veremos que

63
00:03:19,090 --> 00:03:23,640
é possível inserir texto aqui e ver o que
ela responde.

64
00:03:23,640 --> 00:03:25,247
Vou inserir meu próprio texto.

65
00:03:26,877 --> 00:03:29,544
é algo que posso encontrar
em uma resenha de restaurante.

66
00:03:29,544 --> 00:03:33,065
Vou dizer que gostei do sushi, mas que
o serviço foi ruim.

67
00:03:39,369 --> 00:03:42,519
Se eu trabalhasse nesse lugar,
provavelmente ia querer sinalizar

68
00:03:42,519 --> 00:03:44,465
a resenha e talvez acompanhar a pessoa.

69
00:03:44,465 --> 00:03:46,325
Mas não ia querer ler
todas as resenhas.

70
00:03:46,325 --> 00:03:50,105
Provável que só quisesse encontrar as
mais positivas e as mais negativas.

71
00:03:50,105 --> 00:03:51,955
Vamos ver o que recebemos da
API.

72
00:03:55,205 --> 00:03:59,345
Aqui podemos ver que ela extraiu
duas entidades da frase: "serviço" e

73
00:03:59,345 --> 00:04:03,670
"sushi", e pode dividir o sentimento
por entidade.

74
00:04:03,670 --> 00:04:05,240
Em vez de nos dar o sentimento da

75
00:04:05,240 --> 00:04:10,290
frase como um todo, podemos procurar pelas
entidades específicas na nossa frase.

76
00:04:10,290 --> 00:04:14,670
A nota que a Natural Language API retorna
é um valor que vai de -1 a 1,

77
00:04:14,670 --> 00:04:19,470
indicando o quanto esta entidade
específica é negativa ou positiva.

78
00:04:19,470 --> 00:04:24,600
Podemos ver aqui que o serviço recebeu
nota -0,9, quase totalmente negativa,

79
00:04:24,600 --> 00:04:28,670
enquanto o sushi recebeu nota 0,9,
quase totalmente positiva.

80
00:04:28,670 --> 00:04:31,518
A resenha de sentimento é muito
valiosa para nós, então

81
00:04:31,518 --> 00:04:34,708
se você olhar a guia de sentimento,
podemos ver também.

82
00:04:34,708 --> 00:04:38,386
Aqui podemos ver o sentimento da frase
em geral, que não é tão útil para

83
00:04:38,386 --> 00:04:42,640
nós neste caso, porque queremos dividi-la
por entidade.

84
00:04:42,640 --> 00:04:46,170
E também podemos examinar os detalhes de
sintaxe em nossa frase.

85
00:04:47,540 --> 00:04:52,520
Experimente com seu texto em
cloud.google.com/natural-language.