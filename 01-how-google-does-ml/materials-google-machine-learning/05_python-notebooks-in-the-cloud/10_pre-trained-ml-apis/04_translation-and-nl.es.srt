1
00:00:00,230 --> 00:00:03,420
Cloud Natural Language es una API
que les permite comprender textos

2
00:00:03,420 --> 00:00:05,590
mediante una única solicitud
a la API de REST.

3
00:00:05,590 --> 00:00:08,115
Veamos lo que pueden hacer con esta API.

4
00:00:08,115 --> 00:00:11,835
Primero, la API les permite
extraer entidades del texto.

5
00:00:11,835 --> 00:00:15,849
También, identifica la opinión general
expresada en una oración o un documento

6
00:00:15,849 --> 00:00:19,450
de modo que les dirá
si una oración es positiva o negativa.

7
00:00:19,740 --> 00:00:23,490
Con el análisis de la sintaxis pueden
obtener el análisis lingüístico del texto

8
00:00:23,490 --> 00:00:26,010
para extraer elementos
como categorías gramaticales.

9
00:00:26,010 --> 00:00:29,750
Finalmente, la API les permite
clasificar el contenido en categorías.

10
00:00:29,750 --> 00:00:33,020
Veamos el método
de análisis de sintaxis en más detalle.

11
00:00:33,020 --> 00:00:35,350
Para hacerlo,
usaremos esta oración de ejemplo

12
00:00:35,350 --> 00:00:38,560
"la API de Natural Language
nos ayuda a comprender textos".

13
00:00:38,560 --> 00:00:41,510
Creé una visualización
para mostrarles cómo se ve la respuesta

14
00:00:41,510 --> 00:00:42,890
JSON de la API.

15
00:00:42,890 --> 00:00:46,040
Primero, les proporciona
un árbol de análisis de dependencias

16
00:00:46,040 --> 00:00:49,620
y les dice de qué forma se relacionan
las palabras en una oración

17
00:00:49,630 --> 00:00:51,260
qué palabras dependen de otras.

18
00:00:51,870 --> 00:00:53,780
Luego,
obtenemos la etiqueta de análisis

19
00:00:53,780 --> 00:00:56,520
que nos indica la función
de cada palabra en una oración.

20
00:00:56,520 --> 00:01:00,350
Por ejemplo, "ayuda" es el verbo raíz
y "API" es el sujeto nominal.

21
00:01:01,010 --> 00:01:03,350
También obtenemos la categoría
gramatical

22
00:01:03,350 --> 00:01:07,340
que nos indicará si una palabra
es un adjetivo, sustantivo, verbo, etc.

23
00:01:08,450 --> 00:01:11,960
También obtenemos el lema,
que es la forma canónica de la palabra.

24
00:01:11,960 --> 00:01:16,240
En este ejemplo,
el lema de "ayuda" es "ayudar".

25
00:01:16,240 --> 00:01:19,140
Esto es útil si cuentan
la cantidad de veces que una palabra

26
00:01:19,140 --> 00:01:21,930
en particular se usa
para describir algo en su aplicación.

27
00:01:21,930 --> 00:01:25,820
Probablemente, no querrán contar
ayuda y ayudar como palabras diferentes

28
00:01:25,820 --> 00:01:29,320
por eso usamos la forma canónica
de la palabra o el lema para esa tarea.

29
00:01:29,320 --> 00:01:32,720
Finalmente, obtenemos detalles
morfológicos adicionales del texto

30
00:01:32,720 --> 00:01:37,870
que variarán según el idioma del texto
que la API de Natural Language analice.

31
00:01:37,870 --> 00:01:40,380
El próximo método es la clasificación
de contenido.

32
00:01:40,380 --> 00:01:44,380
Para mostrarles cómo funciona,
tengo una noticia y envié el título

33
00:01:44,380 --> 00:01:48,870
y la primera oración a la API
para su categorización.

34
00:01:48,870 --> 00:01:52,170
Aquí vemos
que muestra la categoría "béisbol".

35
00:01:52,280 --> 00:01:55,720
Es genial, considerando
que la palabra "béisbol" no se menciona

36
00:01:55,720 --> 00:01:59,910
en ninguna parte del texto,
y lo clasifica con un 99% de confianza.

37
00:02:00,410 --> 00:02:04,100
Este método de la API proporciona
más de 700 categorías posibles

38
00:02:04,100 --> 00:02:06,310
que pueden usar
para clasificar sus textos.

39
00:02:06,310 --> 00:02:10,321
Ahora, quiero hablarles sobre una empresa
que está usando varios métodos diferentes

40
00:02:10,321 --> 00:02:11,752
de la API en producción.

41
00:02:11,752 --> 00:02:15,160
La empresa es Wootric y es una plataforma
de comentarios de clientes.

42
00:02:15,160 --> 00:02:18,130
La manera en que ayuda
a sus clientes a recolectar comentarios

43
00:02:18,130 --> 00:02:20,040
es mediante este cuadro
superior derecho.

44
00:02:20,040 --> 00:02:22,820
Lo posicionan
en varias ubicaciones en la aplicación

45
00:02:22,820 --> 00:02:26,250
y piden a los usuarios una puntuación
numérica sobre su experiencia

46
00:02:26,250 --> 00:02:28,470
en esta parte específica de la aplicación.

47
00:02:28,470 --> 00:02:31,943
Los usuarios dan una puntuación
de 0 a 10

48
00:02:31,943 --> 00:02:33,940
que para Wootric
es muy fácil de analizar.

49
00:02:33,940 --> 00:02:37,430
Pero lo que es más difícil 
es entender los comentarios abiertos

50
00:02:37,430 --> 00:02:40,050
y allí es donde están usando
la API de Natural Language.

51
00:02:40,050 --> 00:02:43,770
Usan la función de análisis de opinión
para identificar si los comentarios

52
00:02:43,770 --> 00:02:47,380
abiertos de la persona
corresponden a su puntuación numérica.

53
00:02:47,380 --> 00:02:50,400
Usan el análisis de entidades
y sintaxis para extraer

54
00:02:50,400 --> 00:02:53,540
las entidades clave del texto
y usarlo para redirigir estos

55
00:02:53,540 --> 00:02:54,940
comentarios apropiadamente.

56
00:02:54,940 --> 00:02:59,326
Por ejemplo, si tienen un cliente
que está enfadado debido a la usabilidad

57
00:02:59,326 --> 00:03:02,868
pueden redirigirlo
a la persona correcta casi en tiempo real

58
00:03:02,868 --> 00:03:06,496
en lugar de que otra persona
revise manualmente cada comentario.

59
00:03:07,281 --> 00:03:09,407
Pueden probar la API 
de Cloud Natural Language

60
00:03:09,407 --> 00:03:10,817
directamente en el navegador.

61
00:03:10,817 --> 00:03:13,765
Les mostraré cómo funciona
mediante una demostración.

62
00:03:14,890 --> 00:03:18,570
Si vamos a la página del producto
de la API de Cloud Natural Language

63
00:03:18,570 --> 00:03:23,640
podemos escribir texto
y ver cómo responde la API.

64
00:03:23,640 --> 00:03:25,707
Escribiré un texto.

65
00:03:26,797 --> 00:03:29,934
Esto es algo que podría encontrar
en una reseña de un restaurante.

66
00:03:29,934 --> 00:03:33,215
Diré que me gustó el sushi,
pero que el servicio fue malo.

67
00:03:39,369 --> 00:03:42,339
Si trabajara en ese restaurante,
marcaría esa reseña

68
00:03:42,339 --> 00:03:44,465
y tal vez haría seguimiento
con esa persona.

69
00:03:44,465 --> 00:03:46,395
Pero no desearía leer
todas las reseñas.

70
00:03:46,395 --> 00:03:50,105
Probablemente, desearía
encontrar las más positivas y negativas.

71
00:03:50,105 --> 00:03:52,705
Veamos qué obtenemos
de la API de Natural Language.

72
00:03:55,205 --> 00:03:58,665
Podemos ver que extrajo
dos entidades de nuestra oración

73
00:03:58,665 --> 00:04:03,670
"servicio" y "sushi", y puede 
identificar una opinión por cada entidad.

74
00:04:03,670 --> 00:04:05,640
En lugar de darnos la opinión

75
00:04:05,640 --> 00:04:10,290
de la oración completa,
analiza entidades específicas en ella.

76
00:04:10,290 --> 00:04:15,080
La puntuación que la API asigna
es un valor desde -1 a 1

77
00:04:15,080 --> 00:04:19,470
que muestra el nivel de negatividad
o positividad de la entidad.

78
00:04:19,470 --> 00:04:23,170
Podemos ver que el servicio
obtuvo una puntuación de -0.9

79
00:04:23,170 --> 00:04:24,700
casi totalmente negativa

80
00:04:24,700 --> 00:04:28,670
mientras el sushi obtuvo una puntuación
de 0.9, casi totalmente positiva.

81
00:04:28,670 --> 00:04:31,518
El análisis de opinión
es muy valioso para nosotros.

82
00:04:31,518 --> 00:04:34,708
Si miran la pestaña de opinión,
podrán ver esto también.

83
00:04:34,708 --> 00:04:37,626
Aquí podemos ver la opinión
en la oración completa

84
00:04:37,626 --> 00:04:42,640
que no es tan útil, porque en este caso
queríamos dividirla por entidad.

85
00:04:42,640 --> 00:04:46,170
También podemos examinar
los detalles de la sintaxis de la oración.

86
00:04:47,720 --> 00:04:52,620
Pueden probar la API con sus textos
en: cloud.google.com/natural-language.