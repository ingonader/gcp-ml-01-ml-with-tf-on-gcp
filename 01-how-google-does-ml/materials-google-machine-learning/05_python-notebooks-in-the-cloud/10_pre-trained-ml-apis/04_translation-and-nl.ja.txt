Cloud Natural Language APIでは 1つのREST APIリクエストで
テキストを理解できます Natural Language APIで
何ができるでしょうか まずAPIでテキストから
エンティティを抽出できます 1つの文またはテキスト文書の
全体的な感情もわかり 文が肯定的か否定的かを教えてくれます 構文を分析して テキストの
言語学的な詳細を調べ たとえば品詞を抽出できます 最後にAPIではコンテンツを
さまざまなカテゴリに分類できます 構文分析を詳しく見てみましょう ここでは次の例文を使います 「The natural language API
helps us understand text」 APIのJSONレスポンスを
わかりやすく示すために この図にしました まず いわゆる依存解析ツリーが返ってきて 文中のさまざまな単語の相互関係 つまり どの単語が他の単語に
依存しているかわかります 次に解析ラベルが返され 文中の各語の役割がわかります たとえば「helps」は語幹動詞
「API」は名詞主語です 品詞も返されるので ある単語が形容詞 名詞 動詞の
どれかわかります さらに辞書見出語も得られます
つまり単語の標準形です この例では「helps」の
辞書見出語である「help」が返されます これはたとえば 文章の中で 特定の単語が何回使われているか
数えるのに役立ちます helpsとhelpを異なる単語として
数えたくありません ですから単語の標準形 つまり見出語を使います 最後に テキストの形態学的な詳細が得られます これはAPIに送るテキストの
言語によって変わります 次にコンテンツ分類を見てみましょう この機能を示すために
ここにニュース記事があります タイトルと最初の一文を
Natural Language APIに送ってみます 「野球」という分類が返ってきました 不思議なことに テキストの
どこにもbaseballという語がないのに それでも99%の信頼度で分類できます このAPIメソッドでは テキスト分類に
700以上のカテゴリを使用できます 次に 本番環境でNatural Language APIを
使っている企業をご紹介します Wootricは 顧客フィードバックプラットフォームです Wootricではフィードバックを集めるために 右上のこの欄を使います アプリ内のさまざまな場所にこれを配置して アプリの特定部分の
エクスペリエンスはどうだったか 数値で評価するようユーザーに求めます ユーザーは0～10の数字で評価し この数値評価をWootricで簡単に解釈できます もっと解釈が難しい
オープンエンド型フィードバックでは Natural Language APIを使用しています 感情分析を使って その人のオープンエンド
フィードバックと数値評価が 互いに一致するか計測します そしてエンティティと構文の分析を使って
主なエンティティを抽出し こうしてフィードバックを適切に転送します たとえば ある顧客が使い勝手に
強い不満を持っているとします この機能により ほぼリアルタイムで
適切な担当者に転送できます フィードバックの細部を人手で
確認する必要はありません Cloud Natural Language APIを
ブラウザで直接試せます この機能をデモで見てみましょう Cloud Natural Language APIの
プロダクトページに行くと ここにテキストを入力して
APIからのレスポンスを見ることができます テキストを入力してみます レストランの
レビューコメントのようなものです 「寿司は美味しかったけど
サービスが悪かった」 私がこの店で働いているなら
このレビューに注目して 担当者に連絡すべきでしょう でも すべてのレビューを読む気はないので 最も肯定的/否定的なレビューだけで十分です Natural Language APIから得られる
情報を見てみましょう この文から2つのエンティティが
抽出されました「サービス」「寿司」です エンティティごとに感情を分解できます この文の全体的な感情ではなく その中の特定のエンティティに対する
感情がわかります API から-1～1の範囲の数値が
スコアとして返ってきます これは特定のエンティティが
どれほど肯定的/否定的かを示します ここではサービスの点数が-0.9でした
ほぼ完全に否定的です 寿司の点数は0.9でした ほぼ完全に肯定的です この感情レビューは本当に優れています [Sentiment]タブでも感情をチェックできます ここで文全体の感情を見ることができますが 今は あまり役に立ちません
エンティティに分解したいからです 文の構文の詳細を調べることもできます cloud.google.com/natural-languageで
ご自分のテキストで試してみてください