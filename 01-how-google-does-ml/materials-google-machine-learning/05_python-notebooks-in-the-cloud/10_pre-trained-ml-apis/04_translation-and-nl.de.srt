1
00:00:00,440 --> 00:00:02,160
Cloud Natural Language ist eine API,

2
00:00:02,160 --> 00:00:05,590
mit der Sie Text mit nur einer
REST-API-Anfrage verstehen können.

3
00:00:05,590 --> 00:00:08,115
Sehen wir uns
die Funktionsweise dieser API an.

4
00:00:08,115 --> 00:00:11,835
Als Erstes extrahieren Sie
Entitäten aus Ihrem Text.

5
00:00:11,835 --> 00:00:14,039
Sie erhalten auch eine Sentimentanalyse

6
00:00:14,039 --> 00:00:15,569
eines Satzes oder Textdokuments.

7
00:00:15,569 --> 00:00:18,740
Sie erfahren, 
ob der Satz positiv oder negativ ist.

8
00:00:19,740 --> 00:00:23,490
Bei der Syntaxanalyse werden
linguistische Details zum Text angezeigt,

9
00:00:23,490 --> 00:00:25,790
zum Beispiel werden Wortarten extrahiert.

10
00:00:25,790 --> 00:00:29,790
Außerdem können Sie Inhalte
in diverse Kategorien einteilen.

11
00:00:29,790 --> 00:00:33,230
Sehen wir uns
die Syntaxanalyse im Detail an.

12
00:00:33,230 --> 00:00:35,350
Wir verwenden dafür
folgenden Beispielsatz:

13
00:00:35,350 --> 00:00:38,440
"The natural language API
helps us understand text."

14
00:00:38,440 --> 00:00:42,890
In dieser Visualisierung wird
die JSON-Antwort der API angezeigt.

15
00:00:42,890 --> 00:00:45,690
Zunächst wird ein Ableitungsbaum erstellt.

16
00:00:45,690 --> 00:00:47,500
Dieser zeigt die Beziehungen

17
00:00:47,500 --> 00:00:50,750
der Wörter im Satz an,
welche Wörter voneinander abhängen.

18
00:00:52,180 --> 00:00:53,810
Dann erhalten wir das Parse-Label,

19
00:00:53,810 --> 00:00:56,230
das die Rolle 
jedes Worts im Satz definiert.

20
00:00:56,230 --> 00:00:59,940
"helps" z. B. ist das Verb,
und "API" ist das Nominalsubjekt.

21
00:01:01,300 --> 00:01:02,920
Die Wortart wird auch angezeigt,

22
00:01:02,920 --> 00:01:07,190
also ob ein Wort ein Adjektiv,
ein Substantiv, ein Verb usw. ist.

23
00:01:08,450 --> 00:01:11,910
Wir erhalten das Lemma,
also die Grundform des Worts.

24
00:01:11,910 --> 00:01:16,240
In diesem Beispiel ist "help"
die Grundform von "helps".

25
00:01:16,240 --> 00:01:19,730
So lässt sich leichter zählen,
wie oft ein Wort genutzt wird,

26
00:01:19,730 --> 00:01:21,930
um ein Element in
der Anwendung zu beschreiben.

27
00:01:21,930 --> 00:01:25,010
Sie möchten
"helps" und "help" nicht getrennt zählen,

28
00:01:25,010 --> 00:01:28,360
also nutzen Sie
die Grundform des Worts dafür.

29
00:01:28,660 --> 00:01:32,320
Wir erhalten auch Angaben
zur Morphologie des Texts,

30
00:01:32,320 --> 00:01:33,530
je nach Sprache,

31
00:01:33,530 --> 00:01:37,870
in der der Text
an die API gesendet wurde.

32
00:01:37,870 --> 00:01:40,380
Nun betrachten wir
die Inhaltsklassifizierung.

33
00:01:40,380 --> 00:01:43,420
Diese Funktion zeige ich
anhand eines Zeitungsartikels.

34
00:01:43,420 --> 00:01:45,805
Ich habe 
die Überschrift und den ersten Satz

35
00:01:45,805 --> 00:01:48,875
zum Kategorisieren an die
Natural Language API gesendet.

36
00:01:48,875 --> 00:01:51,820
Wir sehen, dass die API
die Kategorie "Baseball" angibt.

37
00:01:51,820 --> 00:01:53,735
Das ist toll, wenn man bedenkt,

38
00:01:53,735 --> 00:01:56,275
dass das Wort "Baseball"
nirgendwo erwähnt wird.

39
00:01:56,275 --> 00:01:59,880
Dennoch liegt die Konfidenz bei 99 %.

40
00:02:00,410 --> 00:02:04,100
Dieses API-Verfahren
bietet mehr als 700 Kategorien

41
00:02:04,100 --> 00:02:06,420
für die Klassifizierung Ihres Texts.

42
00:02:06,420 --> 00:02:08,091
Kommen wir jetzt zu einer Firma,

43
00:02:08,091 --> 00:02:11,292
die diverse Methoden
dieser API in der Produktion nutzt.

44
00:02:11,292 --> 00:02:14,820
Wootric bietet Firmen
eine Plattform für Kundenfeedback.

45
00:02:15,240 --> 00:02:19,650
Firmen können Kundenfeedback
über das Feld rechts oben erfassen.

46
00:02:19,650 --> 00:02:21,220
Das Feld wird an mehreren Stellen

47
00:02:21,220 --> 00:02:22,690
in der Anwendung integriert.

48
00:02:22,690 --> 00:02:28,210
Nutzer können dann diesen Teil
der App anhand einer Skala bewerten.

49
00:02:28,210 --> 00:02:30,343
Die Bewertungsskala
reicht von null bis zehn.

50
00:02:30,343 --> 00:02:33,820
Diese Skala kann von Wootric
relativ einfach analysiert werden.

51
00:02:33,820 --> 00:02:37,430
Schwieriger ist die Analyse
des Textfelds für offenes Feedback.

52
00:02:37,430 --> 00:02:39,680
Hier nutzen sie die Natural Language API.

53
00:02:39,680 --> 00:02:42,640
Mit der Sentimentanalyse wird abgeschätzt,

54
00:02:42,640 --> 00:02:47,380
ob das offene Feedback
mit der Bewertungsskala übereinstimmt.

55
00:02:47,380 --> 00:02:49,820
Dann werden
mit Entitäten- und Syntaxanalyse

56
00:02:49,820 --> 00:02:52,280
Schlüsselentitäten
aus dem Text extrahiert,

57
00:02:52,280 --> 00:02:54,930
und das Feedback wird
entsprechend weitergeleitet.

58
00:02:54,940 --> 00:02:58,946
Wenn sich ein Kunde über
mangelnde Nutzerfreundlichkeit beschwert,

59
00:02:58,946 --> 00:03:02,718
kann man dies nahezu in Echtzeit
an die betreffende Person weiterleiten.

60
00:03:02,718 --> 00:03:06,686
Man muss nicht
jedes Feedback manuell prüfen.

61
00:03:07,436 --> 00:03:09,102
Sie können die Natural Language API

62
00:03:09,102 --> 00:03:10,302
direkt im Browser testen.

63
00:03:10,302 --> 00:03:13,400
Ich zeige Ihnen
an einem Beispiel, wie das funktioniert.

64
00:03:15,020 --> 00:03:18,190
Wir rufen die Produktseite
der Cloud Natural Language API auf.

65
00:03:18,610 --> 00:03:20,980
Hier können wir unseren Text eingeben.

66
00:03:20,980 --> 00:03:22,370
Dann prüfen wir die Antwort

67
00:03:22,370 --> 00:03:23,640
der Natural Language API.

68
00:03:23,640 --> 00:03:25,707
Ich gebe meinen eigenen Text ein.

69
00:03:27,317 --> 00:03:29,544
Dies könnte aus
einer Restaurantkritik stammen.

70
00:03:29,544 --> 00:03:33,065
Ich sage, das Sushi war gut,
aber der Service war schlecht.

71
00:03:39,369 --> 00:03:42,519
Als Mitarbeiter des Restaurants
könnte ich auf die Kritik reagieren

72
00:03:42,519 --> 00:03:44,465
und der Person vielleicht antworten.

73
00:03:44,465 --> 00:03:46,235
Aber statt alle Kritiken zu lesen,

74
00:03:46,235 --> 00:03:50,105
möchte ich lieber die finden,
die sehr positiv oder extrem negativ sind.

75
00:03:50,105 --> 00:03:52,285
Sehen wir uns jetzt
das Ergebnis der API an.

76
00:03:55,205 --> 00:03:58,730
Es wurden zwei Entitäten
aus unserem Satz extrahiert:

77
00:03:58,730 --> 00:04:00,270
Service und Sushi.

78
00:04:00,270 --> 00:04:02,340
Und es wurde das Sentiment

79
00:04:02,340 --> 00:04:03,670
pro Entität bestimmt.

80
00:04:03,670 --> 00:04:06,720
Wir erhalten also
kein Sentiment für den ganzen Satz,

81
00:04:06,720 --> 00:04:10,290
sondern für die
einzelnen Entitäten im Satz.

82
00:04:10,290 --> 00:04:12,840
Die Bewertung der Natural Language API

83
00:04:12,840 --> 00:04:15,100
liegt im Bereich zwischen -1 und 1.

84
00:04:15,100 --> 00:04:19,470
Dies zeigt an, wie negativ
oder positiv die spezielle Entität ist.

85
00:04:19,470 --> 00:04:24,600
Wir sehen, dass der Service mit -0,9
fast komplett negativ bewertet wurde.

86
00:04:24,600 --> 00:04:28,670
Sushi wurde mit 0,9 hingegen
fast komplett positiv bewertet.

87
00:04:28,670 --> 00:04:31,518
Diese Sentimentanalyse
ist sehr wertvoll für uns.

88
00:04:31,518 --> 00:04:34,708
Wir finden sie auch
auf dem Tab "Sentiment".

89
00:04:34,708 --> 00:04:36,186
Hier sieht man das Sentiment

90
00:04:36,186 --> 00:04:37,636
für den gesamten Satz.

91
00:04:37,636 --> 00:04:39,220
Dies hilft uns weniger,

92
00:04:39,220 --> 00:04:42,610
da wir in diesem Fall
eine Bewertung pro Entität wünschen.

93
00:04:42,640 --> 00:04:44,205
Wir können außerdem

94
00:04:44,205 --> 00:04:47,445
die Syntaxdetails
in unserem Satz untersuchen.

95
00:04:47,720 --> 00:04:52,620
Testen Sie Ihren eigenen Text unter
cloud.google.com/natural-language.