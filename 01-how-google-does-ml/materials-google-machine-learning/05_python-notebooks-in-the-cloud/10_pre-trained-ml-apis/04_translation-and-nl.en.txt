Cloud Natural Language is an API
that lets you understand text with a single REST API request. Let's see what you can do with
the natural language API. First, the API lets you extract
entities from your text. It can also give you the overall sentiment
of a sentence or a text document, so it will tell you whether the sentence
is positive or negative. With analyzing syntax you can get into
the linguistic details of your text to extract things like parts of speech. And finally, the API lets you classify
content into different categories. Let's take a look at the syntax
analysis method in more detail. To do this,
we'll use the example sentence, the natural language API
helps us understand text. I've created a visualization to show
you what the JSON response from the API looks like. First, it gives you back what's
called a dependency parse tree, and this tells you how the different
words in a sentence relate to each other, which words depend on other words. Then we get back the parse label, which tells us the role of
each word in a sentence. So for example, helps is the root verb and
API is the nominal subject. We also get back the part of speech, so this will tell us whether a word
is an adjective, a noun, a verb, etc. And we get the lemma, the lemma is
the canonical form of the word, so in this example, the lemma we get back
is help, which is the lemma for helps. And this is useful if you're counting
the number of times a particular word is used to describe
something in your application. You probably don't want to count helps and
help as two different things, you want to use the canonical form
of the word or the lemma to do that. And then finally, we get additional
morphology details on our text, this will vary based on the language that you send
your text for the natural language API in. The next method I want to look
at is content classification. And to show you how this works, I have
a news article and I've sent the title and the first sentence of that article to the
natural language API for categorization. And we can see here that it's able
to return the category baseball. Now this is pretty cool considering the
word baseball isn't mentioned anywhere in this text, and it's able to
classify this with 99% competence. This method of the API provides
over 700 possible categories that you can use to
classify your text into. Next, I want to talk about a company
that's using a few different natural language API methods in production. This company is called Wootric, and
they are a customer feedback platform. The way Wootric helps their
customers collect feedback is through this box on top right. So they place this in various places
throughout their application, and they ask users to provide a numbered score
of how their experience was with this particular part of the app. So they give a score from zero to ten, and
this numbered score is pretty easy for Wootric to make sense of. But what's much more difficult for them to
make sense of is this open ended feedback, and that's where they're using
the natural language API. So you're using the sentiment analysis
feature to gauge whether the person's open ended feedback align with
the numbered score that they provided. Then they're using entity and
syntax analysis to extract key entities from the text and use that
to route this feedback appropriately. So for example, if they encounter
a customer who is angry about usability, they can route that to the correct
person to respond in near real time, rather than having somebody manually
review each piece of feedback. You can try out the Cloud Natural
Language API directly in the browser, I'm going to show you how this works
with a demo, let's take a look. If we go to the product page for the Cloud
Natural Language API, we can see that we're able to enter text here and see
what the natural language API responds. I'm going to enter my own text, this is something that I might
find in a restaurant review. I'm going to say I liked the sushi but
the service was bad. Now if I worked at this restaurant,
I'd likely want to flag this review and maybe follow up with this person. But I wouldn't want to
read all of the reviews, I probably would just want to find the
most positive and most negative reviews. Let's see what we get back
from the natural language API. Here we can see it extracted two
entities from our sentence, service and sushi, and it's able to break
down the sentiment by entity. So rather than giving us the sentiment for the sentence as a whole, we can look at it
for the specific entities in our sentence. The score that the natural language
API returns is a value ranging from -1 to 1 indicating how negative or
positive this particular entity is. So we can see here that service received
a score of -0.9, almost fully negative, whereas sushi received a score of 0.9,
almost fully positive. This sentiment review is
really valuable to us, so if you look at the sentiment tab,
we can see this as well. Here we can see the sentiment for the
overall sentence, which isn't as useful to us in this case because in this case
we'd want to break it down by entity. And we can also examine the syntax
details in our sentence. You can try this out with your own text
at cloud.google.com/natural-language.