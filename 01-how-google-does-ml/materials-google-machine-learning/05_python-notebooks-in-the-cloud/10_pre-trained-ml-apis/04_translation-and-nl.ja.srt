1
00:00:00,000 --> 00:00:02,070
Cloud Natural Language APIでは

2
00:00:02,070 --> 00:00:03,815
1つのREST APIリクエストで
テキストを理解できます

3
00:00:05,560 --> 00:00:08,225
Natural Language APIで
何ができるでしょうか

4
00:00:08,225 --> 00:00:11,825
まずAPIでテキストから
エンティティを抽出できます

5
00:00:11,825 --> 00:00:15,949
1つの文またはテキスト文書の
全体的な感情もわかり

6
00:00:15,949 --> 00:00:19,210
文が肯定的か否定的かを教えてくれます

7
00:00:19,700 --> 00:00:23,480
構文を分析して テキストの
言語学的な詳細を調べ

8
00:00:23,480 --> 00:00:25,680
たとえば品詞を抽出できます

9
00:00:25,680 --> 00:00:29,750
最後にAPIではコンテンツを
さまざまなカテゴリに分類できます

10
00:00:29,750 --> 00:00:33,230
構文分析を詳しく見てみましょう

11
00:00:33,230 --> 00:00:35,350
ここでは次の例文を使います

12
00:00:35,350 --> 00:00:38,560
「The natural language API
helps us understand text」

13
00:00:38,560 --> 00:00:41,500
APIのJSONレスポンスを
わかりやすく示すために

14
00:00:41,500 --> 00:00:42,890
この図にしました

15
00:00:42,890 --> 00:00:45,760
まず いわゆる依存解析ツリーが返ってきて

16
00:00:45,760 --> 00:00:48,390
文中のさまざまな単語の相互関係 つまり

17
00:00:48,390 --> 00:00:51,480
どの単語が他の単語に
依存しているかわかります

18
00:00:52,190 --> 00:00:53,910
次に解析ラベルが返され

19
00:00:53,910 --> 00:00:56,260
文中の各語の役割がわかります

20
00:00:56,260 --> 00:01:00,480
たとえば「helps」は語幹動詞
「API」は名詞主語です

21
00:01:01,290 --> 00:01:02,990
品詞も返されるので

22
00:01:02,990 --> 00:01:07,860
ある単語が形容詞 名詞 動詞の
どれかわかります

23
00:01:08,400 --> 00:01:11,920
さらに辞書見出語も得られます
つまり単語の標準形です

24
00:01:11,920 --> 00:01:16,240
この例では「helps」の
辞書見出語である「help」が返されます

25
00:01:16,240 --> 00:01:18,250
これはたとえば 文章の中で

26
00:01:18,250 --> 00:01:21,900
特定の単語が何回使われているか
数えるのに役立ちます

27
00:01:21,900 --> 00:01:25,300
helpsとhelpを異なる単語として
数えたくありません

28
00:01:25,300 --> 00:01:28,750
ですから単語の標準形 つまり見出語を使います

29
00:01:28,750 --> 00:01:32,530
最後に テキストの形態学的な詳細が得られます

30
00:01:32,530 --> 00:01:36,800
これはAPIに送るテキストの
言語によって変わります

31
00:01:37,870 --> 00:01:40,350
次にコンテンツ分類を見てみましょう

32
00:01:40,350 --> 00:01:43,420
この機能を示すために
ここにニュース記事があります

33
00:01:43,420 --> 00:01:48,880
タイトルと最初の一文を
Natural Language APIに送ってみます

34
00:01:48,880 --> 00:01:52,230
「野球」という分類が返ってきました

35
00:01:52,230 --> 00:01:56,820
不思議なことに テキストの
どこにもbaseballという語がないのに

36
00:01:56,820 --> 00:02:00,430
それでも99%の信頼度で分類できます

37
00:02:00,430 --> 00:02:02,170
このAPIメソッドでは

38
00:02:02,170 --> 00:02:06,360
テキスト分類に
700以上のカテゴリを使用できます

39
00:02:06,360 --> 00:02:11,191
次に 本番環境でNatural Language APIを
使っている企業をご紹介します

40
00:02:11,191 --> 00:02:12,650
Wootricは

41
00:02:12,650 --> 00:02:15,240
顧客フィードバックプラットフォームです

42
00:02:15,240 --> 00:02:17,950
Wootricではフィードバックを集めるために

43
00:02:17,950 --> 00:02:19,750
右上のこの欄を使います

44
00:02:19,750 --> 00:02:22,650
アプリ内のさまざまな場所にこれを配置して

45
00:02:22,650 --> 00:02:25,990
アプリの特定部分の
エクスペリエンスはどうだったか

46
00:02:25,990 --> 00:02:28,410
数値で評価するようユーザーに求めます

47
00:02:28,410 --> 00:02:30,443
ユーザーは0～10の数字で評価し

48
00:02:30,443 --> 00:02:33,740
この数値評価をWootricで簡単に解釈できます

49
00:02:33,740 --> 00:02:37,320
もっと解釈が難しい
オープンエンド型フィードバックでは

50
00:02:37,320 --> 00:02:39,800
Natural Language APIを使用しています

51
00:02:39,800 --> 00:02:45,190
感情分析を使って その人のオープンエンド
フィードバックと数値評価が

52
00:02:45,190 --> 00:02:47,380
互いに一致するか計測します

53
00:02:47,380 --> 00:02:51,900
そしてエンティティと構文の分析を使って
主なエンティティを抽出し

54
00:02:51,900 --> 00:02:54,930
こうしてフィードバックを適切に転送します

55
00:02:54,930 --> 00:02:59,096
たとえば ある顧客が使い勝手に
強い不満を持っているとします

56
00:02:59,096 --> 00:03:02,948
この機能により ほぼリアルタイムで
適切な担当者に転送できます

57
00:03:02,948 --> 00:03:06,696
フィードバックの細部を人手で
確認する必要はありません

58
00:03:07,356 --> 00:03:10,812
Cloud Natural Language APIを
ブラウザで直接試せます

59
00:03:10,812 --> 00:03:13,990
この機能をデモで見てみましょう

60
00:03:15,050 --> 00:03:18,430
Cloud Natural Language APIの
プロダクトページに行くと

61
00:03:18,430 --> 00:03:23,540
ここにテキストを入力して
APIからのレスポンスを見ることができます

62
00:03:23,540 --> 00:03:26,157
テキストを入力してみます

63
00:03:27,067 --> 00:03:30,004
レストランの
レビューコメントのようなものです

64
00:03:30,004 --> 00:03:34,039
「寿司は美味しかったけど
サービスが悪かった」

65
00:03:39,219 --> 00:03:42,609
私がこの店で働いているなら
このレビューに注目して

66
00:03:42,609 --> 00:03:44,435
担当者に連絡すべきでしょう

67
00:03:44,435 --> 00:03:46,895
でも すべてのレビューを読む気はないので

68
00:03:46,895 --> 00:03:50,105
最も肯定的/否定的なレビューだけで十分です

69
00:03:50,105 --> 00:03:53,565
Natural Language APIから得られる
情報を見てみましょう

70
00:03:55,215 --> 00:04:00,565
この文から2つのエンティティが
抽出されました「サービス」「寿司」です

71
00:04:00,565 --> 00:04:03,670
エンティティごとに感情を分解できます

72
00:04:03,670 --> 00:04:06,110
この文の全体的な感情ではなく

73
00:04:06,110 --> 00:04:10,290
その中の特定のエンティティに対する
感情がわかります

74
00:04:10,290 --> 00:04:14,820
API から-1～1の範囲の数値が
スコアとして返ってきます

75
00:04:14,820 --> 00:04:19,470
これは特定のエンティティが
どれほど肯定的/否定的かを示します

76
00:04:19,470 --> 00:04:24,600
ここではサービスの点数が-0.9でした
ほぼ完全に否定的です

77
00:04:24,600 --> 00:04:28,670
寿司の点数は0.9でした ほぼ完全に肯定的です

78
00:04:28,670 --> 00:04:31,518
この感情レビューは本当に優れています

79
00:04:31,518 --> 00:04:34,708
[Sentiment]タブでも感情をチェックできます

80
00:04:34,708 --> 00:04:37,526
ここで文全体の感情を見ることができますが

81
00:04:37,526 --> 00:04:41,890
今は あまり役に立ちません
エンティティに分解したいからです

82
00:04:42,620 --> 00:04:46,550
文の構文の詳細を調べることもできます

83
00:04:47,670 --> 00:04:53,450
cloud.google.com/natural-languageで
ご自分のテキストで試してみてください