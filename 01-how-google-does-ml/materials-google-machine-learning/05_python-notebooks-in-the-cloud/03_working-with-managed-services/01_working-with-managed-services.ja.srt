1
00:00:00,000 --> 00:00:04,295
皆さんが慣れているテクノロジーを
Datalabでも使えます

2
00:00:04,295 --> 00:00:06,450
それで 今すぐ開発を始めて

3
00:00:06,450 --> 00:00:09,220
あとでスケーリングすることができます

4
00:00:09,220 --> 00:00:13,115
たとえば 演習でCSVファイルから
読み取ります

5
00:00:13,115 --> 00:00:16,555
次にpandaやApache Beamでそれを処理して

6
00:00:16,555 --> 00:00:19,580
TensorFlowでモデルを
トレーニングできます

7
00:00:19,580 --> 00:00:21,855
トレーニングでモデルを改善する前に

8
00:00:21,855 --> 00:00:24,045
すべての動作を確認すべきです

9
00:00:24,045 --> 00:00:28,045
最終的にすべてのデータで
このモデルをトレーニングするために

10
00:00:28,045 --> 00:00:30,425
スケーリングの準備ができたら

11
00:00:30,425 --> 00:00:33,445
Google Cloud Storageでデータを格納し

12
00:00:33,445 --> 00:00:38,015
短命クラスタ上のCloud Dataflowで
データを処理した後

13
00:00:38,015 --> 00:00:40,360
ディストリビュータートレーニングや

14
00:00:40,360 --> 00:00:44,250
ハイパーパラメータの最適化を
Cloud MLエンジンで実行できます

15
00:00:44,250 --> 00:00:46,655
こうした操作が可能になるのは

16
00:00:46,655 --> 00:00:52,315
Datalabを他のGCPプロダクトと
シームレスに統合できるからです

17
00:00:52,315 --> 00:00:54,755
今から数分後にラボを行います

18
00:00:54,755 --> 00:00:57,705
そこではBigQueryに簡単に接続できること

19
00:00:57,705 --> 00:01:02,415
何千台ものマシンで簡単にデータを
探索/分析できることを見ていきます

20
00:01:02,415 --> 00:01:04,915
またTensorFlowコードを書いて

21
00:01:04,915 --> 00:01:07,875
Google機械学習APIで接続できます

22
00:01:07,875 --> 00:01:10,065
認証はすごく簡単です

23
00:01:10,065 --> 00:01:14,965
クラウド上の巨大なジョブを
MLエンジンやDataflowで開始できます

24
00:01:14,965 --> 00:01:18,815
もちろん このすべてを
Python Notebookで行えます

25
00:01:18,815 --> 00:01:20,520
pandaで分析したり

26
00:01:20,520 --> 00:01:22,870
クエリ結果を可視化したりするには

27
00:01:22,870 --> 00:01:25,690
seaborn または plotly を使用します

28
00:01:26,600 --> 00:01:30,450
ですからCloud Datalabを始めるのは
とても簡単です

29
00:01:30,450 --> 00:01:34,560
Cloud Shellで「datalab create」と入力します

30
00:01:34,560 --> 00:01:37,400
これらの意味がわかっていれば簡単です

31
00:01:37,400 --> 00:01:39,780
Cloud Shell、
コンピューティング ゾーン、

32
00:01:39,780 --> 00:01:41,620
マシンの種類などです

33
00:01:41,620 --> 00:01:43,450
少し補足しましょう

34
00:01:43,450 --> 00:01:46,730
Compute Engineの説明をする必要があります

35
00:01:46,730 --> 00:01:49,060
Compute Engineを使用するときは

36
00:01:49,060 --> 00:01:51,340
インフラストラクチャを借ります

37
00:01:51,340 --> 00:01:54,115
永遠に所有するわけではありません

38
00:01:54,625 --> 00:01:59,500
でも マシンがなくなれば作業も消えます

39
00:02:00,270 --> 00:02:04,130
それでNotebookソースコードをGitに
保存する必要があります

40
00:02:04,130 --> 00:02:08,505
簡単ですね では その分析結果はどうですか

41
00:02:08,505 --> 00:02:10,320
データやアナリシスなどは

42
00:02:10,320 --> 00:02:12,615
チェックインできませんね

43
00:02:12,615 --> 00:02:16,510
そのためCloud Storageについても
説明する必要があります