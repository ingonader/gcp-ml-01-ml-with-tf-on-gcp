Neste laboratório, veremos como invocar APIs de aprendizado de máquina de
dentro do Datalab. Vamos lá. Desta vez, em vez de fazer este
bloco de notas desde o início, começaremos de um bloco de notas existente
em nosso repositório do GitHub. Primeiro precisamos verificá-lo. Vamos fazer isso. E para fazer isso, é preciso
clonar o repositório. Abriremos o Datalab, e executaremos o comando bash de
dentro do Datalab. A ideia aqui é que possamos criar
um novo bloco de notas e dar a ele o nome que quisermos. Vamos chamá-lo de "checkout". Até aqui, basicamente vimos o código do
Python em execução no Datalab, mas ao inserir %bash, isso
faz o Datalab executar tudo na célula usando bash. Isso é como todo o resto no Jupyter. Farei basicamente um clone do Git
do nosso repositório. Vamos fazer isso. Neste ponto, posso fazer "bangle S", essa é outra maneira de executar
o bash. Você vai perceber que há uma pasta chamada
"training data analyst". Podemos carregar esse bloco de notas e
começar a executá-lo. Aqui está "training data analyst". Dessa vez você irá em
"courses", "machine learning", "deepdive" e abrirá as APIs de ML.
Lá está o bloco de notas do IPython, e lá está nosso bloco de notas. A primeira coisa a se fazer é ativar APIs
e serviços. Assim podemos executar a Vision API, a Translate API, a Speech API etc. Então descemos até aqui e digitamos "vision". Aqui está a Vision API. Ela está ativada. Vamos fazer o mesmo para a Translate
e a Speech. Há a Google Translation API que também
já está ativada. E a Natural Language API. Lá está, também está ativada. E a Speech API, vamos só garantir
que esteja ativada. Também está ativada. Ótimo. Todas as APIs estão ativadas. Vamos avançar e pegar as credenciais. Vamos descer para "APIs e serviços", e pegar as credenciais. Já temos a chave de API. Então, eu a usei. Ou podemos ainda criar credenciais com uma chave de API, e criar uma chave nova, copiar e pronto. Aqui está nossa chave de API. Aqui está. Agora estamos prontos para entrar nas
APIs de ML. No nosso bloco de notas, onde diz
"API key", substituirei pela nova chave de API que
temos e a executarei. Posso tanto clicar no botão "Executar" quanto digitar Shift + Enter. Vamos avançar e instalar o cliente do Python. Tendo feito isso, vamos avançar e executar a
Translate API. Perceba que há entradas. É tão fácil assim? Você está vendo a tradução em francês
porque pedimos para ser assim. Vamos mudar para espanhol, que é "Español", e executar. Agora, o que temos é em espanhol. Como isso funciona? Especificamos as entradas como uma
matriz de strings e pedimos ao serviço para traduzir
do inglês para qualquer idioma que quisermos
passando nessas entradas. E o que tivemos como retorno foram as
saídas, a string traduzida. De modo similar, o que você fará é
invocar a Vision API. E para isso, precisamos de uma imagem. E nesse caso, é a imagem de uma
sinalização de rua. Eu não falo chinês, então não sei 
exatamente o que diz. Vamos ver o que diz. Vamos colocar isso
no Cloud Storage. Isso é público, então não temos
que alterar nada aqui. Podemos avançar e ler, podemos pedir para que a Vision API
leia essa imagem e nos diga qual é o texto nela. Podemos executá-la. Neste ponto, temos como retorno
a saída do JSON. Novamente, o que estamos fazendo aqui é
invocar a versão 1 da Vision API, passando o URI da imagem do GCS. GCS significa Google Cloud Storage. Temos essa imagem no Cloud Storage. Também poderíamos passar uma
imagem como parte da solicitação, mas tê-la no
Cloud Storage é mais rápido, por não termos que fazer upload dos dados
dessa imagem com a solicitação. E estamos pedindo que se faça
detecção de texto, e o que retorna é todo o texto
nessa imagem, com o idioma ZH, que é o chinês, e um polígono delimitador de cada um
dos pedaços do texto. Poderíamos, claro, pegar o primeiro
pedaço dele, pegar a anotação do texto, pegar o idioma, o local que dissemos que
era ZH, e imprimir o que temos, e o que temos é o idioma estrangeiro
para ZH, e o texto estrangeiro que é tudo isto. Agora podemos executar isto. Claro, o resultado já está aqui, então posso clicar nesta célula,
limpá-la e agora executar novamente. E você pode se certificar de que está
executando o que é seu, e vemos que o texto em chinês agora está
traduzido para inglês. Outra coisa que podemos fazer é a 
Language API. Aqui, temos um conjunto de citações, e o que queremos fazer é olhar para
o sentimento associado a elas. Novamente, como antes, vamos limpar a célula e executar. Nesse caso estamos imprimindo a polaridade
e a magnitude, tudo associado a cada um desses códigos. A polaridade é positiva, se é um sentimento positivo, se é negativo, se é um
sentimento negativo. E faz sentido. "Para ter sucesso, é preciso ter uma perseverança tremenda." É algo muito positivo. Mas, se você disser, por exemplo: "Quando alguém que você ama morre." Bem, é algo bem negativo. Então a polaridade é negativa. E a magnitude é um indicador da
frequência com que uma linguagem com palavras muito fortes
ocorre no texto. O pedaço final que estamos mostrando aqui
é a Speech API. E como antes, temos um arquivo de áudio
carregado no Cloud Storage e estamos pedindo para que o resultado dessa fala
seja convertido em texto. Vamos executar e receber a resposta do JSON. E o JSON responde com alto nível de
confiança que a fala no arquivo de áudio é "Quantos anos tem a Brooklyn Bridge?" Então, o que fizemos neste laboratório
foi usar o Datalab para usar APIs do Python a fim de invocar
modelos de aprendizado de máquina. Então lembre-se de que esses não são
modelos que precisamos criar. São modelos de aprendizado de máquina que
podemos usar. Podemos incorporar esses modelos
em nossos próprios aplicativos. Isto é algo que você gostaria
de reconhecer, que nem todo ML que você precisar fazer terá
de ser feito do começo. Se você quiser reconhecer texto e imagens, use a Vision API.