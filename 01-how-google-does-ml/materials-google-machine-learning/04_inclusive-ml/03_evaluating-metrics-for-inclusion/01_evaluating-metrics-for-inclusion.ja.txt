さて 機械学習システムはミスを犯します 重要な点は どんなエラーか また MLモデルの出力がユーザーエクスペリエンスに
どう影響するか 理解することです このモジュールでは
包括性を評価する方法を見ていきます これをMLモデルの開発とテストに使用できます 包括性を理解したり データ内のサブグループに包括性を
導入する方法を理解するうえで 重要な1つの点は 混同行列（confusion matrix）です データセット全体でモデルを
評価することに慣れているとしても サブグループでモデルを
評価することも重要です 単にデータセット全体で
モデルの性能を考えるだけでなく それを細かく分けて 改善すべきサブグループに焦点を合わせます たとえば 顔の検出に取り組んでいるとします ここで構築するMLモデルは基本的に 写真の中に人の顔があるかどうかを判別します 必ずしも簡単ではありません サブグループは 男 女 大人 子供 髪がある人 ない人などです 目標は すべてのサブグループで
モデルの性能を調べて 改善点を見つけることです MLで性能を評価する一般的な方法は 混同行列を使うことです 他のさまざまな方法が
他のタイプの問題に適していますが このモジュールの目的として 混同行列に焦点を合わせてこの点を説明します 混同行列を使って包括性を調べるのです まず最初に 混同行列を作成します 性能の測定対象となる
すべてのサブグループについて 混同行列を作成します 混同行列では複数のラベルを比較します 実地データが反映される場合も
させない場合もあるでしょう 実地データにアクセスできるとは
限らないからです それでも ラベルをモデル予測と比較します では 陽性と陰性について考えましょう 正しいと見なされるラベルを 陽性ラベルといいます 間違っていると見なされるラベルを 陰性ラベルといます 機械学習では 何かが存在すること
つまり「陽性」を予測したり 存在しないこと
つまり「陰性」を予測したりします MLで推測される判断を確認するために
混同行列でこれを比較します まず真陽性（TP）は ある物が存在するとラベルが示し
モデルも存在を予測する場合です 顔の検出の場合 真陽性（TP）とは 画像に顔があると
モデルが正しく予測した場合です ある物が存在するとラベルが示し モデルは存在を予測しない場合 偽陰性（FN）です この顔検出サンプルで言えば モデルは「画像に顔がある」と予測しないのに ラベルによると 実際に顔が存在する場合です ラベルが存在を示さず
モデルも存在を予測しない場合 真陰性（TN）です この表にある顔検出サンプルの 「TN」では基本的に 「画像に顔がある」とモデルが
予測しないのは 正しいです ラベルでも顔が存在しないからです 最後に偽陽性（FP）です ラベルは「顔がない」と示しているのに MLモデルは「顔がある」と予測する場合です この場合おそらく 写真に何かの彫刻像が写っていて モデルはそこに顔があると
間違って認識したと考えられます 実際のところ
偽陰性FNと偽陽性FPは注意すべきです 繰り返しますが 偽陰性FNとは 予測しないのが間違っている場合 つまり 含めるべきものが
除外されている場合です 偽陽性FPは 予測したのが間違いだった つまり 実際にラベルにない除外すべきものが 含まれてしまうことです FPはよくタイプ I エラーと呼ばれ FNはタイプ II エラーです ラベルの一致をこの4つに
分類することの利点は ここを出発点にして様々な指標を計算でき それを使って
モデルの包括性を判断できることです