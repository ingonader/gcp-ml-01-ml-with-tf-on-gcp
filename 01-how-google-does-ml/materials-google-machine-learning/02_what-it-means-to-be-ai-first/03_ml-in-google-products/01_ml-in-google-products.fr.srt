1
00:00:00,000 --> 00:00:01,785
Dans les diapositives précédentes,

2
00:00:01,785 --> 00:00:05,040
j'ai représenté le modèle mathématique
sous une forme spécifique.

3
00:00:05,390 --> 00:00:09,105
Ce modèle comporte plusieurs couches,
qui se suivent l'une après l'autre.

4
00:00:09,105 --> 00:00:12,075
Les données d'entrée traversent
une première couche,

5
00:00:12,075 --> 00:00:13,570
puis une deuxième,

6
00:00:13,570 --> 00:00:15,545
puis une troisième, et ainsi de suite.

7
00:00:15,545 --> 00:00:20,180
Chacune de ces couches
est une simple fonction mathématique.

8
00:00:20,470 --> 00:00:23,780
Le modèle se compose donc
d'une fonction d'une fonction,

9
00:00:23,780 --> 00:00:26,590
qui est la fonction
d'une autre fonction, etc.

10
00:00:27,000 --> 00:00:31,440
Le diagramme présente un réseau neuronal,
qui est un modèle mathématique.

11
00:00:31,780 --> 00:00:34,970
Le ML utilise
d'autres modèles mathématiques,

12
00:00:34,970 --> 00:00:37,450
comme les méthodes linéaires,
les arbres de décision,

13
00:00:37,460 --> 00:00:40,695
les fonctions de base radiale,
les ensembles d'arbres,

14
00:00:40,695 --> 00:00:44,560
ou les fonctions de base radiale
suivies de méthodes linéaires, etc.

15
00:00:44,990 --> 00:00:47,045
Concentrons-nous sur
les réseaux neuronaux.

16
00:00:47,485 --> 00:00:52,220
En général, les modèles de réseau neuronal
ne contiennent pas autant de couches.

17
00:00:52,710 --> 00:00:56,020
À leurs débuts, dans les années 1970,

18
00:00:56,020 --> 00:00:59,020
les réseaux neuronaux n'avaient
qu'une seule couche cachée.

19
00:00:59,360 --> 00:01:03,285
Première raison à cela :
la puissance de calcul.

20
00:01:03,635 --> 00:01:05,785
L'entraînement
de réseaux neuronaux profonds,

21
00:01:05,785 --> 00:01:09,680
qui possèdent de nombreuses couches,
nécessite une grande puissance de calcul.

22
00:01:09,870 --> 00:01:14,110
Deuxième raison :
la disponibilité des données.

23
00:01:14,350 --> 00:01:16,455
Plus il y a de couches,

24
00:01:16,455 --> 00:01:18,595
plus il y a de poids à ajuster

25
00:01:18,595 --> 00:01:21,008
et plus il faut de données.

26
00:01:21,548 --> 00:01:26,280
Troisième raison : la nécessité d'utiliser
des astuces de calcul.

27
00:01:26,640 --> 00:01:28,940
Si l'on se contente d'ajouter des couches,

28
00:01:28,940 --> 00:01:30,755
on rencontre plusieurs problèmes :

29
00:01:30,755 --> 00:01:33,300
l'entraînement des réseaux
prend plus de temps,

30
00:01:33,300 --> 00:01:36,840
et certaines couches se réduisent à zéro
ou deviennent trop grandes

31
00:01:36,840 --> 00:01:39,350
et affichent une valeur NaN,
qui n'est pas un nombre.

32
00:01:39,610 --> 00:01:43,920
Les chercheurs ont donc dû développer
des astuces et des techniques de calcul

33
00:01:43,920 --> 00:01:46,510
pour faire fonctionner
les réseaux neuronaux profonds.

34
00:01:48,100 --> 00:01:52,320
Au cours des dernières années,
les réseaux neuronaux ont démontré

35
00:01:52,320 --> 00:01:56,550
leur efficacité pour de nombreuses tâches,

36
00:01:56,550 --> 00:02:00,915
qui semblaient impossibles à traiter
avec le ML auparavant.

37
00:02:01,295 --> 00:02:04,310
Ils ont permis
d'apporter de meilleures solutions

38
00:02:04,310 --> 00:02:08,229
à des problèmes complexes
tels que la traduction,

39
00:02:08,229 --> 00:02:12,055
la classification d'images,
la reconnaissance vocale, etc.

40
00:02:12,205 --> 00:02:16,370
Ils sont aussi très efficaces
pour les problèmes de données structurées,

41
00:02:16,370 --> 00:02:19,260
que ce soit via
des méthodes de ML traditionnelles comme

42
00:02:19,260 --> 00:02:22,615
les machines à vecteur de support,
ou les arbres "baggés" ou "boostés".

43
00:02:23,045 --> 00:02:24,760
Prenez l'exemple de Google.

44
00:02:24,910 --> 00:02:28,480
Notre utilisation du deep learning
s'est très rapidement développée.

45
00:02:28,710 --> 00:02:31,670
Il y a quatre ans,
nous l'utilisions très peu.

46
00:02:31,670 --> 00:02:35,255
Mais aujourd'hui, nous utilisons
plus de 4 000 modèles de deep learning.

47
00:02:35,735 --> 00:02:37,805
Dans ce cours spécialisé,

48
00:02:37,805 --> 00:02:40,970
nous aborderons principalement
les réseaux neuronaux.

49
00:02:41,230 --> 00:02:44,000
Nous commencerons
par les problèmes de données structurées,

50
00:02:44,120 --> 00:02:47,140
puis nous apprendrons à créer
un pipeline de bout en bout.

51
00:02:47,240 --> 00:02:48,785
Nous nous en servirons

52
00:02:48,785 --> 00:02:50,830
pour traiter les problèmes d'image,

53
00:02:50,830 --> 00:02:53,685
les problèmes de séquence
et les systèmes de recommandation.

54
00:02:54,105 --> 00:02:58,735
Regardez à nouveau ce graphique :
plus de 4 000 modèles existants.

55
00:02:59,175 --> 00:03:01,757
Pourquoi en utilisons-nous autant ?

56
00:03:05,347 --> 00:03:09,755
En fait, Google utilise le ML
pour presque tous ses produits.

57
00:03:10,175 --> 00:03:13,955
Que ce soit pour YouTube,
Google Play, Chrome, Gmail ou Hangouts,

58
00:03:13,955 --> 00:03:16,160
nous utilisons toujours le ML.

59
00:03:16,610 --> 00:03:20,605
Et nous n'utilisons pas seulement
un modèle de ML par produit.

60
00:03:21,125 --> 00:03:23,820
Nous en utilisons une bonne douzaine.

61
00:03:25,240 --> 00:03:30,355
Par expérience,
je sais que cela peut paraître étonnant.

62
00:03:30,935 --> 00:03:32,790
Imaginons une problématique concrète.

63
00:03:33,120 --> 00:03:37,130
"Comment prévoir la rupture de stock
d'un article de magasin ?", par exemple.

64
00:03:37,450 --> 00:03:41,520
Vous pensez peut-être
qu'il suffit de créer un seul modèle de ML.

65
00:03:43,040 --> 00:03:47,595
Mais en pratique, si vous souhaitez
trouver une solution à ce problème,

66
00:03:48,455 --> 00:03:52,410
vous devrez créer
de nombreux modèles de ML.

67
00:03:52,890 --> 00:03:56,180
Vous devrez décomposer le problème
en plusieurs sous-problèmes,

68
00:03:56,180 --> 00:03:58,665
en fonction de
vos connaissances sur l'entreprise.

69
00:03:59,525 --> 00:04:01,910
Par exemple, vous pouvez
créer un premier modèle

70
00:04:02,260 --> 00:04:07,275
pour prédire la demande de l'article
dans le magasin.

71
00:04:07,805 --> 00:04:11,640
Vous pouvez créer un deuxième modèle
pour prédire le niveau de stock

72
00:04:11,640 --> 00:04:14,800
dans l'entrepôt de votre fournisseur
et dans les magasins alentour.

73
00:04:15,320 --> 00:04:18,705
Vous pouvez aussi en créer un troisième
pour prédire le temps nécessaire

74
00:04:18,705 --> 00:04:20,300
pour vous réapprovisionner.

75
00:04:20,300 --> 00:04:25,605
Cela peut vous aider à décider
à quel fournisseur faire appel et quand.

76
00:04:26,125 --> 00:04:30,470
Ces modèles peuvent d'ailleurs
se révéler encore plus complexes.

77
00:04:30,840 --> 00:04:33,490
Un modèle pour prédire la demande de lait

78
00:04:33,490 --> 00:04:38,763
sera complètement différent de celui
pour la demande de nouilles instantanées.

79
00:04:39,503 --> 00:04:42,280
Celui pour le réapprovisionnement
en matériel électronique

80
00:04:42,280 --> 00:04:46,625
sera totalement différent de celui
pour le réapprovisionnement en meubles.

81
00:04:47,405 --> 00:04:49,670
Il n'y a pas un unique modèle de ML,

82
00:04:49,670 --> 00:04:52,660
mais une douzaine de modèles par produit.

83
00:04:53,360 --> 00:04:56,175
Dans ce cours,
vous apprendrez à entraîner et à déployer

84
00:04:56,175 --> 00:04:59,410
un unique modèle, ainsi qu'à
effectuer des prédictions avec celui-ci.

85
00:04:59,870 --> 00:05:03,860
En pratique, n'oubliez pas que
vous devrez créer plusieurs modèles

86
00:05:03,860 --> 00:05:05,180
pour résoudre un problème.

87
00:05:05,730 --> 00:05:11,395
Évitez donc de penser
qu'il faut créer un unique modèle

88
00:05:11,395 --> 00:05:13,980
pour résoudre un unique problème.