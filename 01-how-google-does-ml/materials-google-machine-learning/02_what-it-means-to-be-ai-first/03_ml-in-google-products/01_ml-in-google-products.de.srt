1
00:00:00,000 --> 00:00:01,250
Vorhin

2
00:00:01,300 --> 00:00:05,160
 habe ich das mathematische Modell
in einer bestimmten Form gezeichnet.

3
00:00:05,540 --> 00:00:08,945
Das Modell besteht aus vielen Ebenen,
die hintereinander angeordnet sind.

4
00:00:09,175 --> 00:00:12,075
Die Eingabe durchläuft die erste Ebene,

5
00:00:12,075 --> 00:00:13,570
dann die zweite,

6
00:00:13,570 --> 00:00:15,675
dann die dritte usw.

7
00:00:15,855 --> 00:00:20,200
Jede einzelne Ebene ist
eine einfache mathematische Funktion.

8
00:00:20,600 --> 00:00:24,540
Das gesamte Modell besteht aus
einer Funktion, dann noch einer,

9
00:00:24,540 --> 00:00:26,610
dann noch einer usw.

10
00:00:26,820 --> 00:00:31,370
Das mathematische Modell in diesem
Diagramm ist ein neuronales Netzwerk.

11
00:00:31,980 --> 00:00:35,070
Es gibt noch mehr geläufige
mathematische ML-Modelle:

12
00:00:35,370 --> 00:00:39,060
lineare Methoden,
Entscheidungsbäume, Radialbasisfunktionen,

13
00:00:39,060 --> 00:00:40,945
eine Kombination von Bäumen,

14
00:00:40,945 --> 00:00:44,600
Radialbasisfunktionen
gefolgt von linearen Methoden usw.

15
00:00:45,070 --> 00:00:47,105
Hier geht es aber um neuronale Netzwerke.

16
00:00:47,485 --> 00:00:52,260
Ursprünglich hatten neuronale
Netzwerkmodelle weniger Ebenen.

17
00:00:52,840 --> 00:00:56,390
Neuronale Netzwerke
stammen aus den 1970ern

18
00:00:56,560 --> 00:00:58,980
und haben traditionell
nur eine verborgene Ebene.

19
00:00:59,390 --> 00:01:03,475
Ein Grund dafür war die zu
geringe Rechenleistung, denn das Training

20
00:01:03,755 --> 00:01:05,835
neuronaler Deep-Learning-Netzwerke

21
00:01:05,835 --> 00:01:09,690
mit vielen Ebenen
erfordert eine hohe Rechenleistung.

22
00:01:10,040 --> 00:01:14,210
Der zweite Grund
war die Datenverfügbarkeit.

23
00:01:14,350 --> 00:01:16,455
Wenn weitere Ebenen hinzugefügt werden,

24
00:01:16,455 --> 00:01:18,655
müssen immer mehr
Gewichtungen angepasst werden.

25
00:01:18,745 --> 00:01:21,188
Und dafür benötigen wir mehr Daten.

26
00:01:21,758 --> 00:01:26,320
Der dritte Grund waren Rechentricks.

27
00:01:26,690 --> 00:01:29,310
Wenn einfach weitere
Ebenen hinzugefügt werden,

28
00:01:29,310 --> 00:01:30,375
entstehen Probleme.

29
00:01:30,675 --> 00:01:33,170
Das Training solcher
Netzwerke dauert sehr lange.

30
00:01:33,560 --> 00:01:36,720
Dabei werden einige
Ebenen auf null gesetzt

31
00:01:36,840 --> 00:01:39,520
oder verschwinden einfach.

32
00:01:39,670 --> 00:01:43,990
Wissenschaftler mussten zahlreiche
Tricks und Techniken entwickeln,

33
00:01:43,990 --> 00:01:46,790
damit diese Netzwerke funktionierten.

34
00:01:48,240 --> 00:01:52,320
In den letzten Jahren hat
sich gezeigt, dass neuronale Netzwerke

35
00:01:52,320 --> 00:01:56,380
für eine Reihe von
Aufgaben optimal geeignet sind,

36
00:01:56,490 --> 00:02:00,825
sogar für solche, die mit
maschinellem Lernen als unlösbar galten.

37
00:02:01,345 --> 00:02:06,450
Sie ermöglichen erhebliche
Verbesserungen bei schwierigen Aufgaben

38
00:02:06,450 --> 00:02:09,819
wie
Sprachübersetzungen, Bildklassifizierung,

39
00:02:09,819 --> 00:02:12,205
Sprachverständnis usw.

40
00:02:12,445 --> 00:02:16,500
Bei Problemen mit unstrukturierten Daten
funktionieren Sie genauso gut oder besser

41
00:02:16,500 --> 00:02:18,620
als traditionelle ML-Methoden

42
00:02:18,620 --> 00:02:22,555
wie supportgestützte Geräte
oder gepackte Entscheidungsbäume.

43
00:02:23,085 --> 00:02:24,800
Das sehen Sie bei Google.

44
00:02:25,050 --> 00:02:28,740
Die Nutzung von Deep Learning
ist bei Google rasant angestiegen.

45
00:02:28,860 --> 00:02:31,770
Vor vier Jahren gab es diese Modelle kaum.

46
00:02:31,830 --> 00:02:35,335
Heute gibt es innerhalb
von Google mehr als 4.000 davon.

47
00:02:35,775 --> 00:02:37,885
In diesem Kurs

48
00:02:38,025 --> 00:02:41,040
verwenden wir fast
nur neuronale Netzwerke.

49
00:02:41,380 --> 00:02:43,990
Wir beginnen mit
Problemen unstrukturierter Daten

50
00:02:44,220 --> 00:02:47,340
und sobald wir wissen, wie wir
eine End-to-End-Pipeline entwickeln,

51
00:02:47,340 --> 00:02:48,975
nutzen wir dieses Wissen,

52
00:02:48,975 --> 00:02:51,000
um Probleme mit Bildern,

53
00:02:51,000 --> 00:02:53,455
Sequenzen
und Empfehlungssystemen zu lösen.

54
00:02:54,105 --> 00:02:58,745
Dieses Diagramm zeigt
mehr als 4.000 Modelle.

55
00:02:59,495 --> 00:03:01,957
Wie kann es so viele ML-Modelle geben?

56
00:03:05,437 --> 00:03:10,035
ML ist Teil von
fast jedem Google-Produkt:

57
00:03:10,135 --> 00:03:14,185
YouTube, Play, Chrome, Gmail und Hangouts

58
00:03:14,185 --> 00:03:16,310
verwenden alle maschinelles Lernen.

59
00:03:16,590 --> 00:03:20,725
Es gibt nicht nur ein
ML-Modell bei YouTube.

60
00:03:21,155 --> 00:03:24,020
Für jedes Produkt gibt es Dutzende.

61
00:03:25,340 --> 00:03:30,485
Meiner Erfahrung nach ist
das etwas gewöhnungsbedürftig.

62
00:03:31,055 --> 00:03:32,880
Sie möchten vielleicht vorhersagen,

63
00:03:33,180 --> 00:03:37,110
ob ein Artikel bald noch auf Lager ist.

64
00:03:37,650 --> 00:03:41,690
Sie nehmen an, dass Sie ein
einzelnes ML-Modell entwickeln müssen.

65
00:03:43,150 --> 00:03:47,945
In der Praxis sieht das anders aus.
Um zu wissen, ob ein Artikel auf Lager ist,

66
00:03:48,445 --> 00:03:52,540
müssen Sie mehrere ML-Modelle
entwickeln, um das Problem zu lösen.

67
00:03:52,930 --> 00:03:56,290
Sie müssen das Problem
in kleinere Probleme unterteilen

68
00:03:56,720 --> 00:03:58,795
und dafür Ihren Geschäftssinn einsetzen.

69
00:03:59,615 --> 00:04:03,350
Zum Beispiel sagt Ihr erstes Modell voraus,

70
00:04:03,350 --> 00:04:07,465
wie groß die Nachfrage im Laden ist.

71
00:04:07,865 --> 00:04:11,950
Ihr zweites Modell ist
eine Vorhersage des Artikelbestands

72
00:04:11,950 --> 00:04:15,050
beim Lieferanten
oder in Läden in der Nähe.

73
00:04:15,440 --> 00:04:17,485
Eventuell brauchen Sie ein drittes Modell,

74
00:04:17,485 --> 00:04:20,420
um vorherzusagen,
wie lang die Lieferzeit ist.

75
00:04:20,520 --> 00:04:25,775
Damit entscheiden Sie, wann und
und bei welchem Lieferanten Sie bestellen.

76
00:04:26,195 --> 00:04:30,570
Diese Modelle können sehr komplex sein.

77
00:04:31,040 --> 00:04:33,610
Das Modell für eine
Vorhersage der Nachfrage nach Milch

78
00:04:33,700 --> 00:04:38,683
ist anders als das Modell
für eine Nachfrage nach Nudeln.

79
00:04:39,733 --> 00:04:42,230
Das Modell für die
Wiederauffüllung von Elektronik

80
00:04:42,550 --> 00:04:46,635
unterscheidet sich vom Modell
für die Wiederauffüllung von Möbeln.

81
00:04:47,555 --> 00:04:49,670
Es gibt nicht nur ein ML-Modell,

82
00:04:49,780 --> 00:04:52,820
sondern Dutzende pro Produkt.

83
00:04:53,510 --> 00:04:57,995
In diesem Kurs zeige ich Ihnen
Training, Bereitstellung und Vorhersage

84
00:04:58,325 --> 00:04:59,650
mit einem einzelnen Modell.

85
00:04:59,890 --> 00:05:03,940
In der Praxis müssen Sie jedoch
mehrere ML-Modelle entwickeln,

86
00:05:03,940 --> 00:05:05,270
um ein Problem zu lösen.

87
00:05:05,930 --> 00:05:11,635
Mit einem einzelnen Modell

88
00:05:11,635 --> 00:05:14,130
können Sie kein komplexes Problem lösen.