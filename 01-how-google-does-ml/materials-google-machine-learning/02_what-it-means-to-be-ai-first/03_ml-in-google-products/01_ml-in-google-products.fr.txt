Dans les diapositives précédentes, j'ai représenté le modèle mathématique
sous une forme spécifique. Ce modèle comporte plusieurs couches,
qui se suivent l'une après l'autre. Les données d'entrée traversent
une première couche, puis une deuxième, puis une troisième, et ainsi de suite. Chacune de ces couches
est une simple fonction mathématique. Le modèle se compose donc
d'une fonction d'une fonction, qui est la fonction
d'une autre fonction, etc. Le diagramme présente un réseau neuronal,
qui est un modèle mathématique. Le ML utilise
d'autres modèles mathématiques, comme les méthodes linéaires,
les arbres de décision, les fonctions de base radiale,
les ensembles d'arbres, ou les fonctions de base radiale
suivies de méthodes linéaires, etc. Concentrons-nous sur
les réseaux neuronaux. En général, les modèles de réseau neuronal
ne contiennent pas autant de couches. À leurs débuts, dans les années 1970, les réseaux neuronaux n'avaient
qu'une seule couche cachée. Première raison à cela :
la puissance de calcul. L'entraînement
de réseaux neuronaux profonds, qui possèdent de nombreuses couches,
nécessite une grande puissance de calcul. Deuxième raison :
la disponibilité des données. Plus il y a de couches, plus il y a de poids à ajuster et plus il faut de données. Troisième raison : la nécessité d'utiliser
des astuces de calcul. Si l'on se contente d'ajouter des couches, on rencontre plusieurs problèmes : l'entraînement des réseaux
prend plus de temps, et certaines couches se réduisent à zéro
ou deviennent trop grandes et affichent une valeur NaN,
qui n'est pas un nombre. Les chercheurs ont donc dû développer
des astuces et des techniques de calcul pour faire fonctionner
les réseaux neuronaux profonds. Au cours des dernières années,
les réseaux neuronaux ont démontré leur efficacité pour de nombreuses tâches, qui semblaient impossibles à traiter
avec le ML auparavant. Ils ont permis
d'apporter de meilleures solutions à des problèmes complexes
tels que la traduction, la classification d'images,
la reconnaissance vocale, etc. Ils sont aussi très efficaces
pour les problèmes de données structurées, que ce soit via
des méthodes de ML traditionnelles comme les machines à vecteur de support,
ou les arbres "baggés" ou "boostés". Prenez l'exemple de Google. Notre utilisation du deep learning
s'est très rapidement développée. Il y a quatre ans,
nous l'utilisions très peu. Mais aujourd'hui, nous utilisons
plus de 4 000 modèles de deep learning. Dans ce cours spécialisé, nous aborderons principalement
les réseaux neuronaux. Nous commencerons
par les problèmes de données structurées, puis nous apprendrons à créer
un pipeline de bout en bout. Nous nous en servirons pour traiter les problèmes d'image, les problèmes de séquence
et les systèmes de recommandation. Regardez à nouveau ce graphique :
plus de 4 000 modèles existants. Pourquoi en utilisons-nous autant ? En fait, Google utilise le ML
pour presque tous ses produits. Que ce soit pour YouTube,
Google Play, Chrome, Gmail ou Hangouts, nous utilisons toujours le ML. Et nous n'utilisons pas seulement
un modèle de ML par produit. Nous en utilisons une bonne douzaine. Par expérience,
je sais que cela peut paraître étonnant. Imaginons une problématique concrète. "Comment prévoir la rupture de stock
d'un article de magasin ?", par exemple. Vous pensez peut-être
qu'il suffit de créer un seul modèle de ML. Mais en pratique, si vous souhaitez
trouver une solution à ce problème, vous devrez créer
de nombreux modèles de ML. Vous devrez décomposer le problème
en plusieurs sous-problèmes, en fonction de
vos connaissances sur l'entreprise. Par exemple, vous pouvez
créer un premier modèle pour prédire la demande de l'article
dans le magasin. Vous pouvez créer un deuxième modèle
pour prédire le niveau de stock dans l'entrepôt de votre fournisseur
et dans les magasins alentour. Vous pouvez aussi en créer un troisième
pour prédire le temps nécessaire pour vous réapprovisionner. Cela peut vous aider à décider
à quel fournisseur faire appel et quand. Ces modèles peuvent d'ailleurs
se révéler encore plus complexes. Un modèle pour prédire la demande de lait sera complètement différent de celui
pour la demande de nouilles instantanées. Celui pour le réapprovisionnement
en matériel électronique sera totalement différent de celui
pour le réapprovisionnement en meubles. Il n'y a pas un unique modèle de ML, mais une douzaine de modèles par produit. Dans ce cours,
vous apprendrez à entraîner et à déployer un unique modèle, ainsi qu'à
effectuer des prédictions avec celui-ci. En pratique, n'oubliez pas que
vous devrez créer plusieurs modèles pour résoudre un problème. Évitez donc de penser
qu'il faut créer un unique modèle pour résoudre un unique problème.