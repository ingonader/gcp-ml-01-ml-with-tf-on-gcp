1
00:00:00,000 --> 00:00:01,845
In the previous slides,

2
00:00:01,845 --> 00:00:05,220
I drew the mathematical model in a specific form.

3
00:00:05,220 --> 00:00:09,105
The model consists of many layers arranged to one after the other.

4
00:00:09,105 --> 00:00:12,075
The input passes through the first layer,

5
00:00:12,075 --> 00:00:13,570
and then the second,

6
00:00:13,570 --> 00:00:15,855
and then the third, et cetera,

7
00:00:15,855 --> 00:00:20,600
with each of the layers themselves being a simple mathematical function.

8
00:00:20,600 --> 00:00:23,970
So, the entire model consists of a function,

9
00:00:23,970 --> 00:00:26,610
of a function, of a function, you get the idea.

10
00:00:26,610 --> 00:00:31,980
The diagram depicts a mathematical model called a neural network.

11
00:00:31,980 --> 00:00:35,370
There are other common mathematical models used in machine learning,

12
00:00:35,370 --> 00:00:37,470
linear methods, decision trees,

13
00:00:37,470 --> 00:00:40,695
radial basis functions, ensembles of trees,

14
00:00:40,695 --> 00:00:44,910
radial basis functions, followed by linear methods, the list goes on.

15
00:00:44,910 --> 00:00:47,485
But we're talking about neural networks.

16
00:00:47,485 --> 00:00:52,560
Traditionally, neural network models didn't have this many layers.

17
00:00:52,560 --> 00:00:56,560
Neural networks date back to the 1970s,

18
00:00:56,560 --> 00:00:59,240
but they used to have only one hidden layer.

19
00:00:59,240 --> 00:01:03,585
The reason had to do with number one, computational power,

20
00:01:03,585 --> 00:01:05,835
training deep neural networks,

21
00:01:05,835 --> 00:01:10,040
neural networks with lots of layers takes a lot of computing power.

22
00:01:10,040 --> 00:01:14,350
Second reason, they had only one hidden layer, availability of data.

23
00:01:14,350 --> 00:01:16,455
As you add more layers,

24
00:01:16,455 --> 00:01:18,745
there are more and more weights to adjust,

25
00:01:18,745 --> 00:01:21,548
so you need lots of more data.

26
00:01:21,548 --> 00:01:26,680
And the third reason why you had only one hidden layer, computational tricks.

27
00:01:26,680 --> 00:01:29,130
It turns out that if you just add layers,

28
00:01:29,130 --> 00:01:30,675
you will run into some issues,

29
00:01:30,675 --> 00:01:33,450
the neural networks will take a long time to train,

30
00:01:33,450 --> 00:01:36,840
some of the layers will become all zero or they'll blow up,

31
00:01:36,840 --> 00:01:39,610
and become all NAM or not a number.

32
00:01:39,610 --> 00:01:43,350
So, the research community had to develop a number of tricks and

33
00:01:43,350 --> 00:01:48,240
techniques to get deep neural networks to work.

34
00:01:48,240 --> 00:01:52,320
So, in the last few years neural networks have proven themselves to

35
00:01:52,320 --> 00:01:56,550
be the best or near best in a wide variety of tasks,

36
00:01:56,550 --> 00:02:01,065
even tasks that used to be thought to be unsolvable with machine learning.

37
00:02:01,065 --> 00:02:04,920
Neural networks have enable dramatic improvements in

38
00:02:04,920 --> 00:02:08,480
really hard problems like language translation,

39
00:02:08,480 --> 00:02:12,205
image classification, speech understanding, et cetera.

40
00:02:12,205 --> 00:02:16,370
And they work just as well or better unstructured data problems,

41
00:02:16,370 --> 00:02:19,260
that's traditional machine learning methods such as

42
00:02:19,260 --> 00:02:22,905
support factor machines are boosted or bagged decision trees,

43
00:02:22,905 --> 00:02:25,050
and you can see this at Google.

44
00:02:25,050 --> 00:02:28,860
The use of deep learning at Google has accelerated rapidly.

45
00:02:28,860 --> 00:02:31,830
We had pretty much no deep learning models four years ago,

46
00:02:31,830 --> 00:02:35,775
and now we have more than 4,000 deep learning models within Google.

47
00:02:35,775 --> 00:02:38,025
So, in this specialization,

48
00:02:38,025 --> 00:02:41,380
we will use neural networks almost exclusively.

49
00:02:41,380 --> 00:02:44,140
We will start off unstructured data problems,

50
00:02:44,140 --> 00:02:47,340
and once we know how to build an end-to-end pipeline,

51
00:02:47,340 --> 00:02:48,975
we will take that knowledge,

52
00:02:48,975 --> 00:02:51,000
and show you how to do image problems,

53
00:02:51,000 --> 00:02:54,105
and sequence problems, and recommendation systems.

54
00:02:54,105 --> 00:02:59,175
But look again at this graph, 4,000-plus models.

55
00:02:59,175 --> 00:03:04,177
How can there be so many ML models?

56
00:03:04,177 --> 00:03:09,925
Well, ML is part of pretty much every Google product out there,

57
00:03:09,925 --> 00:03:14,185
whether it's YouTube or Play or Chrome or Gmail or Hangouts,

58
00:03:14,185 --> 00:03:16,410
they all use Machine Learning.

59
00:03:16,410 --> 00:03:21,155
It's not that there is just one ML model at YouTube.

60
00:03:21,155 --> 00:03:25,170
There are dozens of ML models per product.

61
00:03:25,170 --> 00:03:30,755
In my experience, this is something that takes some getting used to.

62
00:03:30,755 --> 00:03:33,980
You might look at a business problem, say,

63
00:03:33,980 --> 00:03:37,430
how to forecast rather an item will go out of stock

64
00:03:37,430 --> 00:03:42,370
and think of it as a single Machine Learning model that you have to build.

65
00:03:42,370 --> 00:03:48,205
But in practice, to forecast whether an item will go out of stock,

66
00:03:48,205 --> 00:03:52,930
you will have to build many Machine Learning models to solve the problem.

67
00:03:52,930 --> 00:03:55,150
You may have to break this problem down into

68
00:03:55,150 --> 00:03:59,145
smaller problems based on your knowledge of the business.

69
00:03:59,145 --> 00:04:03,350
For example, your first model might be to predict

70
00:04:03,350 --> 00:04:07,625
the demand for the product at the store location,

71
00:04:07,625 --> 00:04:11,060
and your second model might predict the inventory of

72
00:04:11,060 --> 00:04:15,330
this item at your supplier's warehouse and at nearby stores.

73
00:04:15,330 --> 00:04:17,865
You might need a third model to predict how long it's

74
00:04:17,865 --> 00:04:20,420
going to take them to stock your product,

75
00:04:20,420 --> 00:04:25,975
and use this to predict which supplier you will ask to refill the shelf, and when.

76
00:04:25,975 --> 00:04:31,040
And of course, all these models themselves might be more complex.

77
00:04:31,040 --> 00:04:34,760
The model to predict the demand from milk is going to be very

78
00:04:34,760 --> 00:04:39,363
different from the market to predict the demand for dry noodles.

79
00:04:39,363 --> 00:04:43,230
And the model for restocking electronics is very

80
00:04:43,230 --> 00:04:47,555
different from the model for restocking furniture.

81
00:04:47,555 --> 00:04:49,860
There is not one ML model.

82
00:04:49,860 --> 00:04:53,510
There are dozens of ML models per product.

83
00:04:53,510 --> 00:04:55,255
This being a teaching course,

84
00:04:55,255 --> 00:04:57,295
we will show you how to train, deploy,

85
00:04:57,295 --> 00:04:59,970
and predict with a single model.

86
00:04:59,970 --> 00:05:02,370
In practice though, you'll be building

87
00:05:02,370 --> 00:05:05,750
many machine learning models to solve the use case.

88
00:05:05,750 --> 00:05:09,135
Avoid the trap of thinking of building

89
00:05:09,135 --> 00:05:14,130
a monolithic one model solves a whole problem solutions.