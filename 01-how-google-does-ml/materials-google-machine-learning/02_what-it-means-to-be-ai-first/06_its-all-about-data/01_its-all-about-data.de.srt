1
00:00:00,200 --> 00:00:03,815
Wie können wir jetzt also
neue Probleme anders angehen?

2
00:00:04,485 --> 00:00:09,205
Vor ein paar Jahren erkannten wir
eine Häufung bestimmter Anfragen.

3
00:00:09,545 --> 00:00:13,665
Japanische Spielzeuge in San
Francisco, frischer Hummer in Kissimmee,

4
00:00:13,825 --> 00:00:16,045
vegane Donuts in der Nähe.

5
00:00:16,295 --> 00:00:19,185
Das sind konkrete, lokale Suchanfragen.

6
00:00:19,375 --> 00:00:24,455
Leute suchen nicht nach Websites,
sondern nach Geschäften auf einer Karte.

7
00:00:25,410 --> 00:00:30,730
Wir könnten dafür Regeln erstellen,
aber das würde schnell unübersichtlich.

8
00:00:31,160 --> 00:00:35,345
Sehen wir uns
stattdessen unseren ML-Ansatz an.

9
00:00:35,765 --> 00:00:41,200
Als Erstes müssen wir die Daten
so erfassen, dass wir ML nutzen können.

10
00:00:43,670 --> 00:00:45,090
Hier ein Beispiel:

11
00:00:45,190 --> 00:00:47,840
die Suchanfrage "Kaffee in der Nähe".

12
00:00:47,940 --> 00:00:52,080
Die Idee hinter ML ist,
mehrere Beispiele zu nehmen

13
00:00:52,130 --> 00:00:55,435
und dieses Wissen
in Vorhersagen zu verwandeln.

14
00:00:55,915 --> 00:00:58,500
Wenn Sie nach Kaffee in der Nähe suchen –

15
00:00:59,720 --> 00:01:02,310
Welche Beispiele werden erfasst,

16
00:01:03,010 --> 00:01:04,820
aus denen Wissen wird?

17
00:01:05,210 --> 00:01:07,275
Was ist die Vorhersage?

18
00:01:08,025 --> 00:01:10,495
Die Vorhersage ist ziemlich einfach.

19
00:01:10,575 --> 00:01:12,125
Es gibt zwei Optionen:

20
00:01:12,565 --> 00:01:16,200
Der Imbiss "Bill's Diner" verkauft
Kaffee und ist drei Minuten entfernt.

21
00:01:16,320 --> 00:01:19,850
Zwei Minuten weiter weg
gibt es aber ein besseres Café.

22
00:01:20,060 --> 00:01:25,815
Wir nehmen an, dass Sie eher
das Café als den Imbiss aufsuchen würden.

23
00:01:26,160 --> 00:01:30,555
Ist das Café allerdings
auf der anderen Seite der Brücke,

24
00:01:30,945 --> 00:01:34,040
schicken wir Sie
wahrscheinlich doch zu dem Imbiss.

25
00:01:34,560 --> 00:01:38,290
Dauert ein Kaffee
im Imbiss aber zehn Minuten

26
00:01:38,330 --> 00:01:42,380
oder ist er nicht "To Go" und
muss man dort etwas verzehren,

27
00:01:42,470 --> 00:01:45,650
laufen Sie vielleicht lieber 15 Minuten.

28
00:01:46,360 --> 00:01:47,880
Was ist zu weit?

29
00:01:48,360 --> 00:01:52,860
Wie wichtig sind Ihnen
die Bewertung des Restaurants

30
00:01:52,920 --> 00:01:54,750
und die Wartezeit?

31
00:01:55,140 --> 00:01:58,620
Statt zu raten
und unzählige Regeln zu erstellen,

32
00:01:59,030 --> 00:02:01,600
fragen wir lieber die Nutzer.

33
00:02:02,870 --> 00:02:05,910
Wir sehen uns einige
Daten an und wägen ab:

34
00:02:06,350 --> 00:02:08,649
Entfernung gegen Qualität des Kaffees,

35
00:02:09,019 --> 00:02:12,460
Wartezeit gegen
Qualität des Kaffees usw.

36
00:02:13,050 --> 00:02:15,840
Befassen wir uns
erst einmal nur mit der Entfernung.

37
00:02:16,520 --> 00:02:18,185
Woher kommen diese Daten?

38
00:02:18,485 --> 00:02:22,105
Als KI-fokussiertes
Unternehmen könnten wir Heuristik nutzen,

39
00:02:22,175 --> 00:02:26,520
in dem Wissen,
dass wir die Erkenntnisse wieder verwerfen,

40
00:02:27,080 --> 00:02:30,635
sobald wir genügend Daten
zu Nutzerpräferenzen haben.

41
00:02:31,095 --> 00:02:33,740
Wir brauchen vor allem Beispiele.

42
00:02:34,370 --> 00:02:37,790
Denn Beispiele sind Labels.

43
00:02:38,010 --> 00:02:41,690
Die Eingabe ist die Entfernung zum Café

44
00:02:42,390 --> 00:02:47,720
und das Label ist
"Gefällt das Ergebnis dem Nutzer?"

45
00:02:48,670 --> 00:02:51,870
Wir präsentieren dem Nutzer
ein Café in einem Kilometer Entfernung

46
00:02:51,910 --> 00:02:55,699
und er gibt an, für guten
Kaffee gern so weit zu laufen.

47
00:02:56,349 --> 00:02:58,298
Dann fragen wir einen anderen Nutzer,

48
00:02:59,488 --> 00:03:01,398
ob er drei Kilometer laufen würde,

49
00:03:01,438 --> 00:03:03,720
aber er mag gar keinen Gourmet-Kaffee.

50
00:03:04,300 --> 00:03:06,940
Wir sammeln also verschiedene Beispiele,

51
00:03:07,180 --> 00:03:11,080
bis wir erkennen, dass niemand
so weit bis zu einem Café laufen will.

52
00:03:11,560 --> 00:03:14,127
Und dann passen wir unser Modell an.

53
00:03:16,187 --> 00:03:19,445
Es geht also darum, geeignete
Daten zu erfassen und ein Gleichgewicht

54
00:03:19,485 --> 00:03:25,370
zwischen gutem Lernen
und dem Vertrauen in Beispiele zu finden.