Reimagine what data can help you do. I'm going to be using Google Maps
to illustrate several key points. Take this map for example. Every morning I glance at my phone, and
it tells me the way to get to work. There are three possible routes. And today,
the highlighted route is the fastest. Sometimes I do go to Google Seattle, crossing the floating bridge
across Lake Washington. And Maps tells me, helpfully,
that the bridge is closed today. So is this machine learning? You could think of this as
being just a set of rules. Sure, Google has to collect a lot of
data to make this use case possible. Where the roads are for one,
the traffic on each road, bridge closures. But the algorithm itself,
routing algorithms between point A and point B subject to a set of constraints,
that is just the A* algorithm. The A* algorithm is started
undergraduate computer science classes. So it's not that complex
once you have the data. This is the kind of thing you can do for
whole countries at a time. Get data on the road network,
provide routing directions. Traffic and bridge closures are a little
more difficult in that you have to work with a bunch of smaller
government entities. But it's still not such
a huge data problem. The logic, once you have the data,
seems to be quite tractable. But now take the case in the middle,
still Maps. I was in Japan, making my way from
my hotel to the Google office. I'm in a subway station called Roppongi,
and Maps tells me that I'm on floor
number two of the subway station. How does it know? Whatever the data sources it uses,
wi-fi points, barometric pressure, typical walking speed, it's pretty obvious
that this cannot be a simple set of rules. Plus the relevant data
to train the model and the relevant data to keep
the model remaining fresh. Once you have the data, you're now going to use machine learning
to sidestep having to write the logic. Maps here is anticipating that
you might want to know if you are in a multi-story building. What else can Maps anticipate? Take the map on the right, still in Japan. I glance at my phone,
in between meetings, and notice that I was getting
a recommendation. Maps is now connecting a past history,
that I like art, that I like museums, and that I am in Japan,
to now recommend things to me. This is even more of a data problem. The machine learning is what allows
the original limited how to get from point A to point B, how to take that to
now become a virtual assistant. Personalization of the Maps service is
possible only with machine learning. So machine learning is about
scaling beyond handwritten rules. But then you start being able to do
things that you could never achieve if you were writing handwritten rules. So think back to your business. Your business analysts are essentially
looking at the bulk of your business. That's akin to the use case on the left, the stuff that everybody
in the county needs. One set of rules for everyone. You might be thinking of machine learning
as a way to do the things in the middle. Of being able to take the data
that you happen to have, and training a machine learning model. But think of machine learning as a way to
get to the kinds of things on the right. Of being able to personalize your
services for each one of your customers. And notice a question at the bottom
of the card on the right, asking the user,
is this card useful right now? Asking for
user feedback to keep improving the model. What's needed though,
in this transformation from the left, which is quite generic, to the right,
which is quite personalized? What's needed? Data and lots of it. The rules and
models are actually quite simple. So if machine learning is a rocket engine,
data is the fuel. As we get into complex models and various
ways of tuning a model to get better and better performance, it can be very
easy to lose sight of a key point. Data wins every time. So given the choice between more data and
more complex models, spend your energy collecting more data. And by that I mean collecting not just
more quantity, also more variety. For example, imagine that your
data consists of these fractals. If you're zoomed way in you won’t see
the patterns, you don’t have enough data. So you'd end up sticking
to very complex rules. But as you get more and more data,
hopefully you fill out the domain and the overall pattern starts
to become more evident. So ML strategy is first and
foremost a data strategy.