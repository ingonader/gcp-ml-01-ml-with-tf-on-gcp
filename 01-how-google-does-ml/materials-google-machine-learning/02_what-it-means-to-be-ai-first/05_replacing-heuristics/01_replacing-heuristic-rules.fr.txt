Nous avons vu que le machine learning
permet d'obtenir des informations de prédiction
répétées à partir de données. Nous avons aussi parlé
des deux phases du ML : l'entraînement, qui consiste à
apprendre à l'algorithme à utiliser des exemples étiquetés, et la phase de prédiction, ou d'inférence, qui consiste à utiliser un modèle entraîné
pour créer de nouvelles inférences ou de nouvelles données. Nous avons ensuite analysé
quelques exemple de ML en action : Photos, Traduction, Smart Reply, tous des produits Google. Alors, comment atteindre
un tel niveau d'innovation en matière de machine learning
dans votre entreprise ? Lorsqu'il est question de savoir quels
types de problèmes le ML permet de résoudre, nos dirigeants sont unanimes. Voici Eric Schmidt, PDG de Google. Il évoque ici la nouvelle transformation
opérée au sein de Google, axée prioritairement sur l'IA. "Le machine learning,
voilà la nouvelle transformation", explique-t-il. "Le paradigme de programmation évolue. Il ne s'agit plus
de programmer des ordinateurs, mais de faire en sorte qu'ils apprennent
pour ensuite faire ce que nous voulons." Cela peut paraître étrange. Lorsque l'on parle de ML, la plupart des gens pense
aux prédictions à partir de données. Pourtant, Eric Schmidt ne parle pas
un seul instant des données. Il parle du ML comme d'une alternative
à la programmation. Selon lui, le ML
est une question de logique, et pas seulement de données.
Que veut-il dire par là ? Prenons la recherche Google. Il s'agit bien sûr
de notre application phare. Si vous tapez "Giants", recherchez-vous des informations
sur les Giants de San Francisco ou sur les Giants de New York ? Comment le savoir ? Voici comment fonctionnait
la recherche Google il y a quelques années. Le codebase du moteur de recherche
comportait de nombreuses règles qui permettaient de savoir
à quelle équipe s'intéressait l'utilisateur. Si un utilisateur vivant
dans la Baie de San Francisco recherchait "Giants", les résultats portaient
sur les Giants de San Francisco. Si l'utilisateur habitait
dans la région de New York, ils portaient sur les Giants
de New York. S'il habitait
dans une autre région, les résultats portaient
sur les géants. Et ce n'est qu'un exemple de recherche. Appliquez cette méthode
à toutes les recherches effectuées par les utilisateurs, et cela vous donne une idée
de la complexité du codebase. Ce dernier est devenu très lourd,
car le code et les règles rédigés manuellement
sont très difficiles à entretenir. Alors pourquoi ne pas essayer
le machine learning ? Le ML s'adapte beaucoup plus facilement,
car il est automatisé. En proposant des résultats
aux utilisateurs, nous pouvions savoir
quels liens ils consultaient. Nous avons donc décidé
de développer un modèle de ML capable d'effectuer le classement
des résultats de recherche. Voilà l'idée maîtresse
à l'origine de RankBrain, un puissant réseau de neurones
dédié au classement des résultats. Ce réseau est beaucoup plus performant
que les signaux manuels. Nous avons pu remplacer
de nombreuses règles manuelles par le machine learning. Et ce réseau de neurones
a fini par améliorer considérablement la qualité des recherches. De plus, le système
s'améliore en continu en fonction des préférences
de l'utilisateur. L'objectif du machine learning est de remplacer
les règles heuristiques. Dans quelles situations le ML
permet-il de résoudre des problèmes ? Partout où vous rédigez encore
manuellement des règles. Le ML ne concerne pas seulement
l'analyse prédictive. La recherche Google n'est pas
une application d'analyse prédictive, pourtant nous y intégrons
tout de même le ML. Le machine learning
vise à remplacer les règles. Voilà la réponse la plus complète
à la question suivante : quels types de problèmes le ML
permet-il de résoudre ? Voilà le fond de notre pensée
lorsque nous axons notre stratégie prioritairement sur l'IA. Nous voyons le ML comme
un moyen d'optimiser l'évolution, l'automatisation et la personnalisation. Pensez à toutes les règles heuristiques
que vous codez aujourd'hui. Même si vous parvenez à collecter
les bonnes données, le machine learning pourrait faire
tout ce travail à votre place. Cela transforme la manière
dont vous analysez les problèmes. Vous ne devez plus coder des règles, mais entraîner des modèles en vous basant
sur des données. Vous n'avez plus à corriger de bugs
en ajoutant vos propres règles, il vous suffit d'entraîner en continu
votre modèle au fur et à mesure que vous collectez des données. Et au lieu d'appliquer des
règles spécifiques à certaines entrées, vous déployez des modèles
à grande échelle pour pouvoir effectuer des prédictions.