1
00:00:00,720 --> 00:00:03,610
Nous avons vu que le machine learning
permet d'obtenir

2
00:00:03,610 --> 00:00:07,285
des informations de prédiction
répétées à partir de données.

3
00:00:07,285 --> 00:00:10,545
Nous avons aussi parlé
des deux phases du ML :

4
00:00:10,545 --> 00:00:14,095
l'entraînement, qui consiste à
apprendre à l'algorithme

5
00:00:14,095 --> 00:00:15,735
à utiliser des exemples étiquetés,

6
00:00:15,735 --> 00:00:18,910
et la phase de prédiction, ou d'inférence,

7
00:00:18,910 --> 00:00:21,525
qui consiste à utiliser un modèle entraîné
pour créer de nouvelles inférences

8
00:00:21,525 --> 00:00:22,735
ou de nouvelles données.

9
00:00:23,335 --> 00:00:26,370
Nous avons ensuite analysé
quelques exemple de ML en action :

10
00:00:26,370 --> 00:00:29,370
Photos, Traduction, Smart Reply,

11
00:00:29,370 --> 00:00:31,100
tous des produits Google.

12
00:00:31,615 --> 00:00:34,205
Alors, comment atteindre
un tel niveau d'innovation

13
00:00:34,205 --> 00:00:36,875
en matière de machine learning
dans votre entreprise ?

14
00:00:37,902 --> 00:00:44,532
Lorsqu'il est question de savoir quels
types de problèmes le ML permet de résoudre,

15
00:00:44,532 --> 00:00:47,725
nos dirigeants sont unanimes.

16
00:00:48,635 --> 00:00:52,805
Voici Eric Schmidt, PDG de Google.

17
00:00:52,805 --> 00:00:56,815
Il évoque ici la nouvelle transformation
opérée au sein de Google,

18
00:00:56,815 --> 00:01:00,370
axée prioritairement sur l'IA.

19
00:01:00,650 --> 00:01:03,865
"Le machine learning,
voilà la nouvelle transformation",

20
00:01:03,865 --> 00:01:04,890
explique-t-il.

21
00:01:05,470 --> 00:01:08,030
"Le paradigme de programmation évolue.

22
00:01:08,180 --> 00:01:10,420
Il ne s'agit plus
de programmer des ordinateurs,

23
00:01:10,420 --> 00:01:14,225
mais de faire en sorte qu'ils apprennent
pour ensuite faire ce que nous voulons."

24
00:01:16,075 --> 00:01:18,640
Cela peut paraître étrange.

25
00:01:19,460 --> 00:01:21,425
Lorsque l'on parle de ML,

26
00:01:21,425 --> 00:01:25,310
la plupart des gens pense
aux prédictions à partir de données.

27
00:01:26,070 --> 00:01:30,660
Pourtant, Eric Schmidt ne parle pas
un seul instant des données.

28
00:01:31,830 --> 00:01:36,730
Il parle du ML comme d'une alternative
à la programmation.

29
00:01:38,300 --> 00:01:42,770
Selon lui, le ML
est une question de logique,

30
00:01:42,770 --> 00:01:46,565
et pas seulement de données.
Que veut-il dire par là ?

31
00:01:47,485 --> 00:01:48,910
Prenons la recherche Google.

32
00:01:49,260 --> 00:01:52,540
Il s'agit bien sûr
de notre application phare.

33
00:01:53,340 --> 00:01:55,215
Si vous tapez "Giants",

34
00:01:55,215 --> 00:01:58,380
recherchez-vous des informations
sur les Giants de San Francisco

35
00:01:58,380 --> 00:01:59,970
ou sur les Giants de New York ?

36
00:02:01,080 --> 00:02:02,950
Comment le savoir ?

37
00:02:05,860 --> 00:02:08,000
Voici comment fonctionnait
la recherche Google

38
00:02:08,020 --> 00:02:09,135
il y a quelques années.

39
00:02:10,015 --> 00:02:14,075
Le codebase du moteur de recherche
comportait de nombreuses règles

40
00:02:14,075 --> 00:02:16,345
qui permettaient de savoir
à quelle équipe

41
00:02:16,345 --> 00:02:17,760
s'intéressait l'utilisateur.

42
00:02:18,080 --> 00:02:20,625
Si un utilisateur vivant
dans la Baie de San Francisco

43
00:02:20,625 --> 00:02:22,030
recherchait "Giants",

44
00:02:22,030 --> 00:02:24,655
les résultats portaient
sur les Giants de San Francisco.

45
00:02:24,865 --> 00:02:27,385
Si l'utilisateur habitait
dans la région de New York,

46
00:02:27,385 --> 00:02:29,770
ils portaient sur les Giants
de New York.

47
00:02:30,240 --> 00:02:32,050
S'il habitait
dans une autre région,

48
00:02:32,050 --> 00:02:34,140
les résultats portaient
sur les géants.

49
00:02:35,250 --> 00:02:37,160
Et ce n'est qu'un exemple de recherche.

50
00:02:37,860 --> 00:02:40,270
Appliquez cette méthode
à toutes les recherches

51
00:02:40,270 --> 00:02:41,820
effectuées par les utilisateurs,

52
00:02:42,280 --> 00:02:45,930
et cela vous donne une idée
de la complexité du codebase.

53
00:02:46,450 --> 00:02:50,490
Ce dernier est devenu très lourd,
car le code et les règles

54
00:02:50,490 --> 00:02:54,930
rédigés manuellement
sont très difficiles à entretenir.

55
00:02:55,690 --> 00:02:58,170
Alors pourquoi ne pas essayer
le machine learning ?

56
00:02:58,340 --> 00:03:02,650
Le ML s'adapte beaucoup plus facilement,
car il est automatisé.

57
00:03:03,820 --> 00:03:05,900
En proposant des résultats
aux utilisateurs,

58
00:03:05,900 --> 00:03:08,300
nous pouvions savoir
quels liens ils consultaient.

59
00:03:08,300 --> 00:03:10,860
Nous avons donc décidé
de développer un modèle de ML

60
00:03:10,860 --> 00:03:13,770
capable d'effectuer le classement
des résultats de recherche.

61
00:03:17,680 --> 00:03:20,930
Voilà l'idée maîtresse
à l'origine de RankBrain,

62
00:03:20,930 --> 00:03:23,990
un puissant réseau de neurones
dédié au classement des résultats.

63
00:03:24,280 --> 00:03:27,260
Ce réseau est beaucoup plus performant
que les signaux manuels.

64
00:03:27,420 --> 00:03:30,185
Nous avons pu remplacer
de nombreuses règles manuelles

65
00:03:30,185 --> 00:03:31,465
par le machine learning.

66
00:03:31,475 --> 00:03:35,060
Et ce réseau de neurones
a fini par améliorer considérablement

67
00:03:35,060 --> 00:03:36,940
la qualité des recherches.

68
00:03:36,940 --> 00:03:40,830
De plus, le système
s'améliore en continu

69
00:03:40,830 --> 00:03:43,560
en fonction des préférences
de l'utilisateur.

70
00:03:44,280 --> 00:03:46,365
L'objectif du machine learning

71
00:03:46,365 --> 00:03:49,435
est de remplacer
les règles heuristiques.

72
00:03:52,295 --> 00:03:55,850
Dans quelles situations le ML
permet-il de résoudre des problèmes ?

73
00:03:57,050 --> 00:04:00,715
Partout où vous rédigez encore
manuellement des règles.

74
00:04:01,785 --> 00:04:04,330
Le ML ne concerne pas seulement
l'analyse prédictive.

75
00:04:05,160 --> 00:04:08,780
La recherche Google n'est pas
une application d'analyse prédictive,

76
00:04:08,780 --> 00:04:11,045
pourtant nous y intégrons
tout de même le ML.

77
00:04:11,655 --> 00:04:18,270
Le machine learning
vise à remplacer les règles.

78
00:04:19,000 --> 00:04:22,510
Voilà la réponse la plus complète
à la question suivante :

79
00:04:22,610 --> 00:04:25,755
quels types de problèmes le ML
permet-il de résoudre ?

80
00:04:26,445 --> 00:04:29,460
Voilà le fond de notre pensée
lorsque nous axons notre stratégie

81
00:04:29,460 --> 00:04:30,710
prioritairement sur l'IA.

82
00:04:30,790 --> 00:04:33,795
Nous voyons le ML comme
un moyen d'optimiser l'évolution,

83
00:04:33,795 --> 00:04:36,095
l'automatisation et la personnalisation.

84
00:04:36,925 --> 00:04:40,065
Pensez à toutes les règles heuristiques
que vous codez aujourd'hui.

85
00:04:40,425 --> 00:04:43,175
Même si vous parvenez à collecter
les bonnes données,

86
00:04:43,175 --> 00:04:46,285
le machine learning pourrait faire
tout ce travail à votre place.

87
00:04:47,965 --> 00:04:51,970
Cela transforme la manière
dont vous analysez les problèmes.

88
00:04:52,760 --> 00:04:55,085
Vous ne devez plus coder des règles,

89
00:04:55,085 --> 00:04:57,815
mais entraîner des modèles en vous basant
sur des données.

90
00:04:59,005 --> 00:05:02,805
Vous n'avez plus à corriger de bugs
en ajoutant vos propres règles,

91
00:05:02,805 --> 00:05:06,070
il vous suffit d'entraîner en continu
votre modèle au fur et à mesure

92
00:05:06,070 --> 00:05:07,690
que vous collectez des données.

93
00:05:07,690 --> 00:05:12,969
Et au lieu d'appliquer des
règles spécifiques à certaines entrées,

94
00:05:12,969 --> 00:05:17,619
vous déployez des modèles
à grande échelle

95
00:05:17,619 --> 00:05:19,779
pour pouvoir effectuer des prédictions.