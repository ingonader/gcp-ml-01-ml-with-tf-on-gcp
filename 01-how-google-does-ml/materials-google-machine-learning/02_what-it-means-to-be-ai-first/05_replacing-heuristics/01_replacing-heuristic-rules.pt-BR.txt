Analisamos o aprendizado de máquina
e dissemos que era uma maneira de conseguir insights previstos
repetidos dos dados. Depois, falamos sobre os dois estágios
do ML, uma fase de treinamento em que você ensina o algoritmo
usando exemplos rotulados, e um estágio de previsão ou inferência em que você usa um modelo treinado
para fazer inferências e novos dados. Em seguida, analisamos alguns exemplos
de aprendizado de máquina em ação: Fotos, Tradutor, Resposta inteligente, todos produtos do Google. Então, como você chega nesse ponto em que sua empresa está inovando
assim no aprendizado de máquina? Nossos executivos
tiveram uma resposta única para os tipos de problema que
o aprendizado de máquina pode resolver. Este é Eric Schmidt, presidente executivo
do conselho do Google. Ele fala sobre
a nova transformação no Google, que está se tornando
uma empresa que prioriza a IA. "O aprendizado de máquina", diz Eric, "é a próxima transformação. O paradigma da programação está mudando. Não se trata de programar um computador. Você ensina o computador a aprender algo
e depois ele faz o que você quer." Isso soa estranho. Quando você fala sobre ML
para a maioria das pessoas, elas pensam em previsões de dados, mas veja que Eric
não fala nada sobre dados. Ele fala do aprendizado de máquina como
uma forma de substituir a programação. O ML, de acordo com Eric, tem a ver com lógica, não só com dados.
O que ele quer dizer? Considere a Pesquisa, que é, claramente,
o principal aplicativo do Google. Se você digita "Giants", devemos mostrar o San Francisco Giants ou
o New York Giants? Como você faria? Há alguns anos, era assim que
a pesquisa do Google funcionava. Havia um monte de regras que faziam parte
da base de código do mecanismo de pesquisa para decidir qual equipe esportiva
exibir a um usuário. Se a consulta é sobre o Giants e os usuários estão na área da baía, mostramos resultados sobre
o San Francisco Giants. Se o usuário está na área de Nova York, mostramos resultados sobre
o New York Giants. Se eles estão em qualquer outro lugar, mostramos resultados sobre pessoas altas, e isso é apenas para uma consulta. Multiplique isso pela grande variedade
de consultas que as pessoas fazem, e você pode imaginar como
toda a base de código se torna complexa. A base de código está ficando pesada
porque código manuscrito e regras codificadas manualmente
são muito difíceis de manter. Então, por que não tentar
o aprendizado de máquina? O aprendizado de máquina é
mais escalonável porque é automatizado. Sabemos em quais links as pessoas clicam
quando mostramos os resultados a elas. Que tal treinar um modelo de aprendizado
de máquina para fazer o ranking de busca? Essa foi a ideia por trás do RankBrain, uma rede neural profunda
para o ranking de busca. Ele superou muitos sinais
criados por humanos. Substituímos muitas regras codificadas
manualmente pelo aprendizado de máquina. E a rede neural acabou melhorando muito
a qualidade de pesquisa. E o sistema pode melhorar continuamente
com base no que os usuários preferem. Substituir regras heurísticas pelo ML é o grande objetivo aqui. Então, que tipos de problema
você pode resolver com o ML? Resposta: tudo para o qual
você estiver escrevendo regras hoje. Não se trata apenas de análise preditiva. A Pesquisa Google não é
um aplicativo de análise preditiva, mas usamos o aprendizado de máquina nele. Dizer que o aprendizado de máquina
é uma maneira de substituir regras é uma resposta muito mais ampla para os tipos de problema que o
aprendizado de máquina pode resolver. É isso que queremos dizer ao falar que
o Google é uma empresa que prioriza a IA. O aprendizado de máquina
é uma maneira de escalonar, automatizar, personalizar. Pense em todas as regras heurísticas
que você está codificando hoje. Desde que você consiga
coletar os dados corretos, você pode fazer isso
usando o aprendizado de máquina. A forma como você pensa sobre problemas
muda quando você faz isso. Você não pensa em codificar regras, pensa em modelos de treinamento
baseados em dados. Você não pensa em corrigir relatórios
de bugs adicionando suas regras. Você pensa em treinar continuamente
o modelo à medida que coleta dados novos. E, em vez de pensar em aplicar
regras específicas a entradas específicas, você pensa em implantar
modelos em escala para fazer previsões.