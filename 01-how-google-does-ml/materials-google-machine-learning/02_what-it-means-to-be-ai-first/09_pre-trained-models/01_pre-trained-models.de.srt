1
00:00:00,370 --> 00:00:04,530
Aucnet erstellte ein eigenes
Bildmodell auf der Google Cloud Platform.

2
00:00:04,590 --> 00:00:07,890
Sie verwendeten TensorFlow,
hier zu sehen auf der linken Seite.

3
00:00:08,010 --> 00:00:10,820
Oft müssen Sie dies
aber gar nicht mehr machen.

4
00:00:11,210 --> 00:00:12,950
Es gibt heute verschiedene Domänen,

5
00:00:13,240 --> 00:00:17,190
auf denen Google ML-Dienste anbietet,
die mit unseren Daten trainiert wurden.

6
00:00:17,470 --> 00:00:18,380
Ein Beispiel:

7
00:00:18,380 --> 00:00:22,040
Zur Transkription von Sprachtexten
können Sie eine Sprach-API verwenden.

8
00:00:22,160 --> 00:00:24,580
Sie müssen nicht mehr
selbst Audiodaten erfassen,

9
00:00:24,660 --> 00:00:26,770
Programme trainieren
und Prognosen erstellen.

10
00:00:26,830 --> 00:00:28,890
Es gibt zahlreiche vortrainierte Modelle.

11
00:00:29,210 --> 00:00:32,865
Diese vortrainierten Modelle sind ideal,

12
00:00:32,865 --> 00:00:36,075
um die Nutzereingabe
durch ML-Prozesse zu ersetzen.

13
00:00:36,565 --> 00:00:39,510
Hier ein Beispiel
für ein vortrainiertes Modell.

14
00:00:39,630 --> 00:00:43,845
Ocado ist der weltweit
größte Online-Supermarkt.

15
00:00:44,005 --> 00:00:45,623
Firmensitz ist in Großbritannien.

16
00:00:45,743 --> 00:00:49,020
In der Vergangenheit
schickten Kunden eine E-Mail,

17
00:00:49,050 --> 00:00:55,820
die dann gelesen und an die
zutreffende Abteilung gesendet wurde.

18
00:00:56,070 --> 00:00:57,660
Dort wurde sie erneut gelesen.

19
00:00:58,200 --> 00:00:59,595
Das ist nicht massentauglich.

20
00:01:00,045 --> 00:01:02,850
Also integrierte Ocado
die natürliche Sprachverarbeitung.

21
00:01:03,300 --> 00:01:06,930
Damit konnten sie
die Art der E-Mail erfassen,

22
00:01:07,350 --> 00:01:12,305
auch Entitäten, also den Textinhalt,
und sogar die Syntax der E-Mail.

23
00:01:12,815 --> 00:01:18,355
Mit diesem Verfahren kann
Ocado den E-Mail-Text analysieren,

24
00:01:18,895 --> 00:01:24,800
die E-Mails markieren
und an den Kundendienst weiterleiten.

25
00:01:25,060 --> 00:01:28,510
Dort können dann Priorität
und Kontext leichter erfasst werden.

26
00:01:28,650 --> 00:01:34,480
Aber viele Kunden möchten sich heute
nicht mehr durch eine Website klicken.

27
00:01:34,800 --> 00:01:36,600
Sie möchten auch keine E-Mail senden.

28
00:01:36,920 --> 00:01:39,880
Sie möchten mit Ihnen
reden und interagieren,

29
00:01:40,140 --> 00:01:43,375
um Fragen und Probleme zu klären.

30
00:01:43,835 --> 00:01:46,710
Manuelle Antworten sind
bei hohen Nutzerzahlen nicht möglich.

31
00:01:46,940 --> 00:01:48,930
Daher prognostizieren Marktforscher,

32
00:01:48,930 --> 00:01:55,735
dass zukünftig mehr in Sprachassistenten
als in mobile Apps investiert wird.

33
00:01:57,055 --> 00:02:01,970
Wird also erst der Sprachtext
mittels Sprach-API transkribiert

34
00:02:02,120 --> 00:02:04,255
und dann versucht,
den Inhalt zu erfassen?

35
00:02:04,680 --> 00:02:10,015
Nein. Ich zeige Ihnen hier ein
Sprachassistenten-Tool namens Dialogflow.

36
00:02:10,105 --> 00:02:12,175
Sehen wir uns den Bildschirm an.

37
00:02:12,465 --> 00:02:15,640
Der Assistent sagt:
"Was kann ich für Sie tun?"

38
00:02:15,820 --> 00:02:18,215
Der Kunde antwortet:

39
00:02:18,215 --> 00:02:20,355
"Ich möchte eine Pizza
mit Schinken und Käse."

40
00:02:20,505 --> 00:02:25,230
Auf dieser Basis erstellt Dialogflow
eine JSON-Nachricht mit dem Inhalt,

41
00:02:25,230 --> 00:02:27,415
dass der Kunde
eine Pizza bestellen möchte.

42
00:02:27,605 --> 00:02:32,495
Schinken und Käse
werden als Belag hinzugefügt.

43
00:02:33,355 --> 00:02:35,190
Dann fragt der Assistent:

44
00:02:35,190 --> 00:02:36,490
"Welche Größe möchten Sie?"

45
00:02:36,490 --> 00:02:38,660
Das ist eine weitere Anforderung.

46
00:02:38,980 --> 00:02:45,805
Entsprechend wird "Groß"
hinzugefügt und "normaler Pizzaboden".

47
00:02:45,885 --> 00:02:47,725
Dann sagt der Kunde:
"Und noch Oliven!"

48
00:02:47,755 --> 00:02:50,795
Also wird als Belag "Oliven" hinzugefügt.

49
00:02:50,895 --> 00:02:53,930
Diese Sprachschnittstelle
bietet viele Gesprächsoptionen,

50
00:02:53,930 --> 00:02:59,800
auf deren Basis
eine JSON-Nachricht erstellt wird.

51
00:02:59,910 --> 00:03:06,180
Diese stark strukturierte Nachricht
wird in den Rest der Anwendung integriert.

52
00:03:06,420 --> 00:03:08,221
Diese funktioniert genau wie zuvor,

53
00:03:08,321 --> 00:03:14,900
nur dass sich der Nutzer nicht
mehr durch ein Online-Formular klickt,

54
00:03:15,110 --> 00:03:17,860
sondern Daten
über eine Sprachschnittstelle eingibt.