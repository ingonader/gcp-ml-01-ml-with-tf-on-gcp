1
00:00:00,000 --> 00:00:03,270
Então, como você começa
no aprendizado de máquina?

2
00:00:03,270 --> 00:00:07,814
Em nossa experiência, vimos que
a jornada típica do cliente,

3
00:00:07,814 --> 00:00:10,875
a que tem mais probabilidade
de ter sucesso,

4
00:00:10,875 --> 00:00:16,620
é selecionar o caso de uso no qual
você faz a análise manual de dados hoje.

5
00:00:16,620 --> 00:00:18,490
A Global Fishing Watch fez isso,

6
00:00:18,490 --> 00:00:22,660
uma organização sem fins lucrativos
que tenta identificar a caça ilegal.

7
00:00:22,660 --> 00:00:24,390
Eles analisavam manualmente

8
00:00:24,390 --> 00:00:27,750
viagens de pesca, e depois
escalonavam o processamento usando

9
00:00:27,750 --> 00:00:33,585
aprendizado de máquina até analisar
22 milhões de pontos de dados diariamente.

10
00:00:33,585 --> 00:00:36,224
Então, há várias razões para passar

11
00:00:36,224 --> 00:00:40,400
pela análise manual de dados
para desenvolver o aprendizado de máquina.

12
00:00:40,400 --> 00:00:43,910
Primeiro: se estiver fazendo
análise manual de dados,

13
00:00:43,910 --> 00:00:47,600
você provavelmente já tem os dados,
e essa é a parte difícil.

14
00:00:47,600 --> 00:00:50,840
A coleta de dados geralmente
é a parte mais longa e difícil de

15
00:00:50,840 --> 00:00:54,605
um projeto de aprendizado de máquina
e a que tem mais chances de fracasso.

16
00:00:54,605 --> 00:00:57,110
Então, se você já tem os dados,

17
00:00:57,110 --> 00:00:59,480
suas chances de sucesso aumentaram.

18
00:00:59,480 --> 00:01:04,190
Então, essa é uma das razões para
passar pela análise manual de dados.

19
00:01:04,190 --> 00:01:08,150
Segundo: mesmo se você
não tiver os dados hoje,

20
00:01:08,150 --> 00:01:13,205
seu projeto de ML envolve primeiro
coletar e classificar os dados.

21
00:01:13,205 --> 00:01:16,755
Classificar significa
encontrar rótulos para os dados.

22
00:01:16,755 --> 00:01:20,375
Você precisa passar
por um estágio de análise manual.

23
00:01:20,375 --> 00:01:23,710
Porque se você não consegue
analisar os dados

24
00:01:23,710 --> 00:01:27,595
para ter material suficiente
para tomar decisões,

25
00:01:27,595 --> 00:01:30,145
não faz sentido
desenvolver o aprendizado de máquina.

26
00:01:30,145 --> 00:01:35,790
A análise manual ajuda você a falhar
rapidamente, tentar novas ideias.

27
00:01:35,790 --> 00:01:38,500
Portanto, não pule esta etapa de análise.

28
00:01:38,500 --> 00:01:44,485
A etapa de análise geralmente informa
se os dados geram insights.

29
00:01:44,485 --> 00:01:49,968
A terceira razão para passar pela análise
manual de dados e não ignorá-la é que,

30
00:01:49,968 --> 00:01:52,377
para criar um bom
modelo de aprendizado de máquina,

31
00:01:52,377 --> 00:01:54,040
você precisa conhecer seus dados.

32
00:01:54,040 --> 00:01:56,350
E já que esse é o primeiro passo,

33
00:01:56,350 --> 00:02:00,550
por que você não passa pelo
processo de análise manual de dados?

34
00:02:00,550 --> 00:02:03,015
Não pule direto para o ML.

35
00:02:03,015 --> 00:02:05,725
Falaremos mais sobre isso
no próximo módulo.

36
00:02:05,725 --> 00:02:12,195
E a quarta razão é que o ML é uma jornada
em direção à automação e ao escalonamento.

37
00:02:12,195 --> 00:02:16,685
Você está automatizando a análise manual
porque quer escaloná-la.

38
00:02:16,685 --> 00:02:19,105
Talvez como a Global Fishing Watch,

39
00:02:19,105 --> 00:02:23,440
você está analisando manualmente
uma pequena fração de viagens de pesca

40
00:02:23,440 --> 00:02:28,180
e quer automatizar isso para
poder analisar mais viagens.

41
00:02:28,180 --> 00:02:35,925
Mas infelizmente, se você não puder
fazer análises, não poderá fazer ML.

42
00:02:35,925 --> 00:02:38,730
Ao falamos sobre
aprendizado de máquina para engenheiros,

43
00:02:38,730 --> 00:02:41,305
eles continuam pensando em treinamento.

44
00:02:41,305 --> 00:02:46,235
Mas a verdadeira utilidade do aprendizado
de máquina vem durante as previsões.

45
00:02:46,235 --> 00:02:48,590
É quando você está extraindo valor dele.

46
00:02:48,590 --> 00:02:53,295
Uma coisa importante é que os modelos
precisam trabalhar com dados de streaming.

47
00:02:53,295 --> 00:02:56,965
Você precisa criar uma
sofisticação de dados de streaming.

48
00:02:56,965 --> 00:02:59,340
Se você está pensando
que poderia fazer coisas

49
00:02:59,340 --> 00:03:02,960
semanalmente como
processamento em lote, adivinhe.

50
00:03:02,960 --> 00:03:08,485
Seu negócio só está ficando mais rápido.

51
00:03:08,485 --> 00:03:11,390
Um motivo comum da falha em
produtos de aprendizado de máquina

52
00:03:11,390 --> 00:03:15,015
é algo chamado desvio de treinamento.

53
00:03:15,015 --> 00:03:17,910
Aqui você tinha um certo sistema
para processamento

54
00:03:17,910 --> 00:03:20,895
de dados históricos para que pudesse
treinar neles.

55
00:03:20,895 --> 00:03:23,305
Talvez fosse
um sistema de processamento em lote

56
00:03:23,310 --> 00:03:25,390
escrito por uma equipe de
ciência de dados.

57
00:03:25,395 --> 00:03:28,380
E então você tem um sistema diferente que

58
00:03:28,380 --> 00:03:31,840
precisa usar o modelo de aprendizado
de máquina durante a previsão.

59
00:03:31,840 --> 00:03:35,760
O sistema que atende
essas previsões provavelmente

60
00:03:35,760 --> 00:03:40,575
está escrevendo algo que a equipe de
engenharia de produção escreve e mantém.

61
00:03:40,575 --> 00:03:45,360
Talvez seja escrito em Java usando
bibliotecas da Web.

62
00:03:45,360 --> 00:03:46,965
O problema é que,

63
00:03:46,965 --> 00:03:51,060
a menos que o modelo veja exatamente
os mesmos dados sendo fornecidos

64
00:03:51,060 --> 00:03:55,150
como estava acostumado a ver
durante o treinamento,

65
00:03:55,150 --> 00:03:58,930
as previsões do modelo não serão precisas.

66
00:03:58,930 --> 00:04:04,250
Então esse é um problema chamado de
desvio de treinamento.

67
00:04:04,250 --> 00:04:08,870
O problema é que o resultado do
processamento de stream e

68
00:04:08,870 --> 00:04:14,230
do processamento em lote
precisa ser o mesmo.

69
00:04:14,230 --> 00:04:17,860
Então, uma maneira de reduzir
as chances desse problema,

70
00:04:17,860 --> 00:04:21,017
uma maneira de reduzir as chances
de um desvio de treinamento

71
00:04:21,017 --> 00:04:24,950
é pegar o mesmo código
que foi usado para processar

72
00:04:24,950 --> 00:04:30,125
dados históricos durante o treinamento
e reutilizá-los durante as previsões.

73
00:04:30,125 --> 00:04:31,840
Mas para que isso aconteça,

74
00:04:31,840 --> 00:04:36,805
seus canais de dados
precisam processar o stream e o fluxo.

75
00:04:36,805 --> 00:04:39,330
Esta é uma visão essencial
por trás do fluxo de dados.

76
00:04:39,330 --> 00:04:42,978
Uma maneira de criar
canais de dados em Python,

77
00:04:42,978 --> 00:04:46,125
Java ou até mesmo visualmente
com a marca Cloud Data.

78
00:04:46,125 --> 00:04:48,750
O código aberto é o Apache Beam.

79
00:04:48,750 --> 00:04:51,195
Em que "B" significa lote

80
00:04:51,195 --> 00:04:53,935
e "eam" significa stream.

81
00:04:53,935 --> 00:04:57,465
Então, um único sistema
para fazer lote e stream.

82
00:04:57,465 --> 00:05:01,731
Porque no aprendizado de máquina,
isso é útil.

83
00:05:01,731 --> 00:05:07,850
Eles usam o mesmo sistema
no treinamento e na previsão.

84
00:05:07,850 --> 00:05:11,090
As métricas de desempenho
importantes para você

85
00:05:11,090 --> 00:05:14,755
também mudam
entre treinamento e previsões.

86
00:05:14,755 --> 00:05:19,005
Durante o treinamento, o aspecto
de desempenho mais importante

87
00:05:19,005 --> 00:05:22,175
é o escalonamento para muitos dados.

88
00:05:22,180 --> 00:05:24,745
Treinamento de distribuidores,
se assim preferir.

89
00:05:24,745 --> 00:05:26,965
No entanto, durante a previsão,

90
00:05:26,970 --> 00:05:33,120
o principal aspecto de desempenho
é a velocidade de resposta, QPS alta.

91
00:05:33,120 --> 00:05:36,650
Portanto, este é um insight essencial
por trás do TensorFlow.

92
00:05:36,650 --> 00:05:40,890
Há muitas bibliotecas de
aprendizado de máquina para treinamento.

93
00:05:40,890 --> 00:05:46,000
Nem todas são igualmente capazes
de operacionalizar.