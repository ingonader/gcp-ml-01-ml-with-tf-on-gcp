1
00:00:00,000 --> 00:00:03,270
Wie gelingt der Einstieg
in das maschinelle Lernen?

2
00:00:03,270 --> 00:00:07,814
Unserer Erfahrung nach
wird folgender Weg oft genutzt

3
00:00:07,814 --> 00:00:10,875
und bietet Kunden
die höchsten Erfolgschancen:

4
00:00:10,875 --> 00:00:16,650
Man wählt einen Anwendungsfall
mit bislang manueller Datenanalyse.

5
00:00:16,650 --> 00:00:18,580
So war es auch
bei Global Fishing Watch,

6
00:00:18,580 --> 00:00:22,740
einer Organisation, die
gegen Fischwilderei kämpft.

7
00:00:22,740 --> 00:00:25,390
Sie werteten
Fangfahrten früher manuell aus.

8
00:00:25,390 --> 00:00:28,510
Dann skalierten sie ihre
Prozesse mit maschinellem Lernen

9
00:00:28,510 --> 00:00:32,465
und konnten dadurch 22 Mio.
Datenpunkte pro Tag analysieren.

10
00:00:33,585 --> 00:00:35,304
Es gibt also mehrere Gründe dafür,

11
00:00:35,304 --> 00:00:40,400
die manuelle Datenanalyse
vor das maschinelle Lernen zu stellen.

12
00:00:40,400 --> 00:00:45,920
Erstens liegen bei der manuellen
Datenanalyse die Daten meist schon vor.

13
00:00:45,920 --> 00:00:47,600
Das ist oft der schwierigste Teil.

14
00:00:47,600 --> 00:00:50,840
Die Datenerfassung
ist der Teil eines ML-Projekts,

15
00:00:50,840 --> 00:00:54,605
der oft am aufwendigsten ist
und am häufigsten misslingt.

16
00:00:54,605 --> 00:00:57,110
Wenn die Daten also schon vorliegen,

17
00:00:57,110 --> 00:00:59,480
sind Ihre Erfolgschancen schon höher.

18
00:00:59,480 --> 00:01:04,190
Dies spricht also dafür, zunächst eine
manuelle Datenanalyse zu durchlaufen.

19
00:01:04,190 --> 00:01:08,150
Zweitens, selbst wenn Sie
noch keine Daten besitzen,

20
00:01:08,150 --> 00:01:13,205
müssen Sie für Ihr ML-Projekt
zunächst Daten sammeln und bewerten,

21
00:01:13,205 --> 00:01:16,755
das heißt, den Daten ein Label zuweisen.

22
00:01:17,375 --> 00:01:20,375
Deshalb sollte man anfangs
eine manuelle Analyse durchlaufen.

23
00:01:20,375 --> 00:01:23,710
Wenn Sie Ihre Daten
nicht analysieren können,

24
00:01:23,710 --> 00:01:27,595
um belastbare Aussagen
für die Entscheidungsfindung zu erhalten,

25
00:01:27,595 --> 00:01:30,145
ergibt das maschinelle Lernen keinen Sinn.

26
00:01:30,145 --> 00:01:33,705
Die manuelle Analyse
lässt Sie schnell scheitern,

27
00:01:33,705 --> 00:01:35,792
damit Sie neue Ansätze probieren können.

28
00:01:35,792 --> 00:01:38,500
Darum sollten Sie
diesen Schritt nicht überspringen.

29
00:01:38,500 --> 00:01:44,485
Der Analyseschritt zeigt häufig,
ob die Daten neue Erkenntnisse enthalten.

30
00:01:44,485 --> 00:01:46,743
Drittens spricht Folgendes dafür,

31
00:01:46,743 --> 00:01:49,973
die manuelle
Datenanalyse nicht zu überspringen:

32
00:01:49,973 --> 00:01:52,377
Um ein gutes
ML-Modell zu entwickeln,

33
00:01:52,377 --> 00:01:54,040
müssen Sie Ihre Daten kennen.

34
00:01:54,040 --> 00:01:56,350
Da dies der erste Schritt ist,

35
00:01:56,350 --> 00:02:00,550
warum hierbei nicht eine
manuelle Datenanalyse durchlaufen?

36
00:02:00,550 --> 00:02:03,015
Springen Sie nicht sofort
zum maschinellen Lernen.

37
00:02:03,015 --> 00:02:05,725
Dieses Thema besprechen
wir detailliert im nächsten Modul.

38
00:02:05,725 --> 00:02:12,195
Viertens führt das maschinelle Lernen
zu Automatisierung und Massenverarbeitung.

39
00:02:12,195 --> 00:02:16,565
Sie automatisieren die manuelle
Analyse, um große Mengen zu verarbeiten.

40
00:02:16,685 --> 00:02:19,105
Vielleicht geht es Ihnen
wie Global Fishing Watch:

41
00:02:19,105 --> 00:02:22,560
Sie analysieren eine geringe
Anzahl an Fangfahrten manuell

42
00:02:22,560 --> 00:02:28,140
und möchten dies automatisieren,
um deutlich mehr analysieren zu können.

43
00:02:29,770 --> 00:02:35,925
Leider ist maschinelles Lernen
ohne Analysetools nicht möglich.

44
00:02:35,925 --> 00:02:41,300
Engineers verstehen unter
maschinellem Lernen meist nur Training.

45
00:02:41,305 --> 00:02:46,235
Dabei liegt der wahre
Nutzen von ML in den Vorhersagen.

46
00:02:46,235 --> 00:02:48,590
Dies ist der eigentliche
Wert für den Anwender.

47
00:02:48,590 --> 00:02:53,295
Darum müssen Ihre Modelle
Streamingdaten verarbeiten können.

48
00:02:53,295 --> 00:02:56,965
Sie müssen Ihre Prozesse
für Daten in Echtzeit ausbauen.

49
00:02:56,965 --> 00:02:58,220
Falls Sie glauben,

50
00:02:58,220 --> 00:03:02,010
Sie können Prozesse einmal pro
Woche per Batch-Verarbeitung erledigen,

51
00:03:02,010 --> 00:03:06,215
werden Sie feststellen,
dass Ihr Unternehmen nur schneller wird.

52
00:03:08,545 --> 00:03:11,810
Ein Hauptgrund für den
Misserfolg von ML-Projekten liegt darin,

53
00:03:11,810 --> 00:03:15,015
dass Verzerrungseffekte auftreten können.

54
00:03:15,015 --> 00:03:18,880
Man hat ein bestimmtes System
zum Verarbeiten der Verlaufsdaten,

55
00:03:18,880 --> 00:03:21,060
die dann zum Training verwendet werden.

56
00:03:21,070 --> 00:03:25,255
Vielleicht ein Batchverarbeitungssystem,
das von Data Scientists geschrieben wurde.

57
00:03:25,810 --> 00:03:28,170
Dann gibt es ein zweites System,

58
00:03:28,170 --> 00:03:31,700
das für die Prognose auf das Modell
für maschinelles Lernen zugreifen muss.

59
00:03:31,840 --> 00:03:34,790
Das System,
das diese Vorhersagen liefert,

60
00:03:34,790 --> 00:03:40,575
wird meist von Produktionstechnikern
entwickelt und von ihnen gewartet.

61
00:03:40,575 --> 00:03:45,360
Es wurde vielleicht in Java
geschrieben und verwendet Webframeworks.

62
00:03:45,360 --> 00:03:46,965
Es entsteht folgendes Problem:

63
00:03:46,965 --> 00:03:55,140
Wenn bei Prognose und Training nicht
exakt dieselben Daten genutzt werden,

64
00:03:55,690 --> 00:03:58,020
werden die
Vorhersagen im Modell verfälscht.

65
00:03:58,690 --> 00:04:04,250
Es entsteht eine Verzerrung
zwischen Training und Vorhersage.

66
00:04:04,250 --> 00:04:12,380
Die Ergebnisse von Stream-Verarbeitung und
Batch-Verarbeitung müssen identisch sein.

67
00:04:14,230 --> 00:04:17,440
Um dieses Problem zu vermeiden

68
00:04:17,440 --> 00:04:21,017
und das Risiko
für Verzerrungseffekte zu senken,

69
00:04:21,017 --> 00:04:23,680
verwendet man denselben Code,

70
00:04:23,680 --> 00:04:27,370
der schon beim Training
mit den Verlaufsdaten eingesetzt wurde,

71
00:04:27,370 --> 00:04:30,090
erneut während der Vorhersagen.

72
00:04:30,125 --> 00:04:31,840
Damit dies geschehen kann,

73
00:04:31,840 --> 00:04:36,975
müssen Ihre Datenpipelines eine Batch-
und Echtzeitverarbeitung ermöglichen.

74
00:04:36,975 --> 00:04:39,330
Dies ist ein Hauptvorteil von Dataflow.

75
00:04:39,330 --> 00:04:42,978
Datenpipelines können in Python,

76
00:04:42,978 --> 00:04:45,925
Java oder auch visuell
mit Cloud Data erstellt werden.

77
00:04:46,485 --> 00:04:48,720
Die Open-Source-Software ist Apache Beam.

78
00:04:49,220 --> 00:04:53,775
"B" steht für "Batch"
und "eam" steht für "Stream".

79
00:04:53,935 --> 00:04:57,465
Dieses System erlaubt also
Batch- und Streamingprozesse.

80
00:04:57,465 --> 00:05:01,731
Dies ist hilfreich
beim maschinellen Lernen.

81
00:05:01,731 --> 00:05:07,460
Dasselbe System wird für Datenerfassung,
Training und Vorhersage verwendet.

82
00:05:09,030 --> 00:05:11,990
Die gewünschten Leistungsmesswerte

83
00:05:11,990 --> 00:05:15,085
wechseln ebenfalls
zwischen Training und Vorhersage.

84
00:05:15,085 --> 00:05:22,180
Beim Training geht es vor allem
um Skalierbarkeit auf hohe Datenmengen.

85
00:05:22,180 --> 00:05:24,745
Sozusagen ein Distributor-Training.

86
00:05:24,745 --> 00:05:31,065
Bei der Vorhersage geht es
hingegen vor allem um schnelle Antworten

87
00:05:31,065 --> 00:05:32,930
und viele Abfragen pro Sekunde.

88
00:05:32,930 --> 00:05:36,650
Dies ist der Hauptvorteil von TensorFlow.

89
00:05:36,650 --> 00:05:40,890
Beim maschinellen Lernen gibt es
viele Frameworks für Trainingsaufgaben.

90
00:05:40,890 --> 00:05:46,000
Aber nur wenige ermöglichen
auch eine Operationalisierung.