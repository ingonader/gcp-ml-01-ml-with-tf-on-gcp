この講義では
「MLサプライズ」についてお話しします ML つまり機械学習とは タスクを達成するために コンピュータ自身が
コンピュータプログラムを書くプロセスです プログラムを書くコンピュータは
一連の例を見るだけで 最適なプログラムを判断します 通常のソフトウェア
エンジニアリングと比較しましょう 一般的な手法では 人間が問題を分析し コードを書き このコードがプログラムになって 入力を出力に変換します 例えば計算機では
2つの数を取り込んで足し算します 3 ＋ 4 = 7 です 機械学習ではどうでしょうか 機械学習では ソフトエンジニアの代わりを
別のコンピュータが努めます このコンピュータは
膨大な量の例を調べて 入力と 期待される出力との
ペアを観察し 最適な「プログラム」を判断します もちろん これは技術的に言って 数学的・学術的に完璧な
MLの定義ではありませんが 要旨はつかめるでしょう 今日のコースの目的は ビジネスにおけるMLについて
概要を理解していただくことです 「ブロッコリーサプライズ」の話をします 話が脱線していると思いますか？
あとで分かります 私が大学院生だったころ 近所に
新しいアイスクリーム店ができました 友人と一緒に見に行きました 店に入るとまったく普通に見えました よくあるメニューです ミント チョコレート ピーチ... でも最後に
ブロッコリー サプライズがありました 私は新しいもの好きです ぜひ試してみたいので 味見したいと言いました 店員にスプーンを借りました 緑色の粒が混ざっています 甘くてクリーミーで濃厚な味です バニラに似ています... 私は戸惑いました ブロッコリーの味がしません 私は店員に 何がサプライズなのかと聞きました 答えは「ブロッコリーがないのが
サプライズです」 これを頭に留めて 皆さんに「MLサプライズ」についてお話しします 棒グラフを 2つお見せします グラフでは 組織の中で 完全にエンドツーエンドの
MLシステムを構築するとき それぞれのタスクに
どのくらい労力を注ぐかが示されています たとえば KPIの定義や データの収集、インフラの構築 MLアルゴリズム自体の最適化などです 組織にある 他の既存のシステムと
統合させる必要もあります 社内の新しいML担当者や
社外パートナーの皆様と 気軽に会話を重ねるうちにわかったことですが MLアルゴリズムの最適化だけに
焦点を当てる人が多いです 論文に書かれた 最新の素晴らしい機能を ぜひ取り入れるべきだと考えます ハイパーパラメーターを適切に調整したり 畳み込み層の数を適切したりと MLの技術的な詳細を多数取り入れます でも 巨大なシステムの構築で
成功してきたGoogle担当者を観察し 彼らと話してみると ちょっと違います 実際のところ 多くの人の考えとは異なり MLアルゴリズムの最適化にかかる労力は かなり小さいのです 一方で 最初に適切なデータを
収集することの難しさを 過小評価している人が大勢います データ収集にもっと注意を向けるべきです さらにインフラストラクチャの構築も重要です つまり 何回も繰り返し
自動でスムーズにモデルを訓練して そのモデルをスケーラブルに エンドユーザーに提供できる
ようにすることです 実際 このような中核的で
ほとんどソフトウェア的なタスクは 効果的なMLシステムを構築するときの 時間や労力の使い方に大きな影響を与えます 最後に MLには別の利点もあります ユーザーや運用のあらゆる面が
細かく計測されるので KPIの定義に費やす時間が少しだけ減り おそらく組織の労力も減るでしょう なぜなら もはや理論ではないからです 前のスライドのように 市場調査で誰かの直感には頼りません ユーザーについて知る必要のある
すべての情報を計測して そこから得られた洞察で とりあえずのKPIではなく 最終的な適切なKPIがわかります たとえば顧客の生涯価値や現在の正味価値です MLがあまり重要でないのは
「サプライズ」ですが では なぜMLを学ぶのでしょう？ MLの素晴らしい点は MLを模索していく過程で
多くの価値を生まれることです すべての問題ではなくても
多くの問題が解決します 解決しない問題でさえも
模索の過程で価値が得られるのです