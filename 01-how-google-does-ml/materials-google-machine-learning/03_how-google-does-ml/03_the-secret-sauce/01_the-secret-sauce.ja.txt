この講義では
「秘伝のソース」についてお話しします Googleは皆さんに秘伝のソースを
共有しますが これはコードでも 単なるアルゴリズムでもありません Googleが蓄積してきたノウハウです これは おそらく世界のどの企業よりも
大きな価値を生み出すMLシステムを 何年にもわたり管理するなかで
蓄積したものです では この組織的ノウハウの共有で まずMLスキルの話をするのはなぜでしょうか 皆さんが優れたMLストラテジストになるには 「泥まみれ」になっていただく必要があります つまり実際に幾つかのシステムを構築しながら 学習していく必要があります 良い面もあります ここで見ていく技術的MLスキルのほとんどは ソフトウェアやデータ処理のスキルです すでによくご存知かもしれません 技術的スキルを見ていくと同時に Googleの持つ経験を活用して よくある落とし穴を避けることもできます 「よくある落とし穴」とは何でしょう クリックベイトのようなものです MLを始める企業がよく陥る
落とし穴トップ10リストをご覧ください これは 私が何年もの間
新任のML担当者たちと対話して 大まかにまとめたリストです 新任者たちはよくこう言います 「新しくて素晴らしいMLで
すごい結果を出したいです」 その後 よくある落とし穴に陥るかもしれません これはGoogleでも
パートナー企業でも見られます はじめに 最もよくある落とし穴は
ソフトウェアを書くよりも 独自のMLアルゴリズムをトレーニングする方が
早いと考えることです 通常 これは間違いです なぜなら 単なるアルゴリズムを超える
優れたMLシステムを作るには アルゴリズムに加え
たとえばソフトウェア スタックなど 多くのものが必要です 堅牢性、スケーラビリティ、十分な可用時間を
確保する必要があるからです ソフトウェアでもこれが必要ですが アルゴリズムを使おうとすると データ収集とトレーニングに関して
複雑さが加わり 全体が少し複雑になります それで通常は ソフトウェアだけを使って
簡単なことから始めるのをおすすめします 次の落とし穴は 私のお気に入りです 「MLを始めたいがデータをまだ集めていない」 すぐに停止してください
データが必要です 十分なデータが集まってない
またはアクセスできない時点で MLについて話しても無意味です 実はデータがあるかもしれませんね 何年も記録し 別の部署が管理しているシステムに
あるかもしれません でも実際に見たことはありません 私は自信を持って言います 自分で見たことがないデータは準備不足です それだけでなく 定期的にそのデータを確認して レポート作成や新たな発見をする人が
組織にいないなら つまり そのデータがすでに
価値を生み出していないなら データの保守に努力が
払われていない可能性が高く データが次第に廃れていきます これまで対話したクライアントの中で クリーンデータを集める労力を
過小評価しない人には 会ったことがありません 「思ったより簡単だった」と言う人はいません 多くの苦労や障害に直面するでしょう 次の落とし穴は ループの中に人間を配置し忘れることです MLシステムが機能し始めて 組織のコアタスクまたは
コアビジネスを実行するようになると そのシステムはとても重要になります そして組織はシステムを扱うときに
リスクを回避しようとします なぜなら そのシステムは「大黒柱」だからです それで リスクの軽減が特に重要となります 多くの方法がありますが そのひとつは
人間をループの中に置き データを確認させることです MLがうまく機能しない場合や
トレーニングの入力管理を人が行います これについては後で詳しくお話ししますが 私の知る限りGoogleでは
どの本稼働MLシステムにも 必ずループの中に人がいます これはどうでしょうか ある製品を立ち上げました 他の機能ではなく
MLアルゴリズムが最初の価値提案です これは問題です 第一に MLを提供しても
ユーザーたちは気に留めないでしょう 単に新しくてかっこいい機能や 推奨機能の性能などに注目します さらに 最初の価値提案がMLだけの
製品を立ち上げると 処理すべき新しいデータを生成して 適切な学習を行うために
大量のユーザーが必要です 次に 優れたMLエンドシステムを作っても 間違ったものを最適化するかもしれません たとえばGoogle検索で
ユーザーのクリック頻度を尺度として ユーザー エンゲージメントを計測し 最適化するとします 「当社の製品に注目してほしい」
「ユーザーを引き付けたい」という思いからです でも クリック頻度で最適化すると
どうなるでしょう MLアルゴリズムは「悪い」コンテンツを
提示するかもしれません ユーザーが ついつい何度も
クリックするようなコンテンツです それで 完璧でなくとも 十分に適切なもので
最適化することは重要です そして 悪い刺激に常に注意すべきです MLアルゴリズムが実際にうまく機能しているか 測定し忘れるとどうなるでしょうか アルゴリズムを実装し 稼働させて
ユーザーに提供します でも 機能がどれほど改善したか分かりません 顧客のエンゲージメントや
生涯価値が上がったか 分かりません これは かなり深刻です もし成功の度合いを示せないならば 「次の製品でこれを使ってみたい」と
上司に提案できないでしょう さらに この落とし穴に陥る
クライアントもいます 他の人の訓練済みMLアルゴリズムが 使いやすく付加価値も高いのを見て 自分でも同じように構築できると
勘違いするのです Google Cloud にはいわゆる
ML APIがあります たとえば Visionに画像を送ると 定義済みラベルで画像が分類されます 素晴らしい機能で
とても使いやすいです インフラストラクチャや データのトレーニング、収集を
心配しなくてもすみます 本当に使いやすいですが 自分で構築するとなると
話は違います 特に 事前準備されていない
MLアルゴリズムを自分で作る場合は かなりの労力が必要です たとえば 本稼働MLアルゴリズムを
一度だけトレーニングして 「僕のラップトップで このデータセットで
うまく機能したから ほぼ完成だ」 そう考えるとしたら間違いです おそらく完成率は10%でしょう コア ビジネスプロセスとなる
MLアルゴリズムを作るには 何回も繰り返し
再トレーニングすべきですし そのプロセスを簡単かつスムーズにすることに
労力を注ぐべきです さて 最後の落とし穴です これにより
MLアルゴリズムの最適化をめぐる 戸惑いが解消するかもしれません それは「自社製の認識機能を
設計したい」という考えです たとえば画像、音声、
NLP分類による自然言語処理などです これは奇妙な落とし穴です 現実よりずっと簡単に見える
という点で奇妙なのです また 認識機能は
何十年もの学術的研究により 高度に調整されたアルゴリズムを
そのまま使える場合がほとんどです これらは既成 あるいは定義済みですから わざわざ高いコストをかけて 自分で設計を試みる必要はありません 落とし穴は以上のとおりですが 良い面もあります ほとんどの価値が道の途中で生まれることです MLに向かって進んでも
到達しないかもしれません それでも 取り組んだものはすべて
大きく向上します もし到達できたなら 完成したMLは
ほとんど すべてのものを改善します こう考えてみてください あなたの企業にとって
MLの構築や使用が難しいなら 業界の他社にとっても困難でしょう でも ひとたびML対応の製品や
社内プロセスができれば ユーザーや消費者は優れた
エクスペリエンスを享受します それを複製したり 競合するものを作るのは
極めて困難です なぜなら MLには美しい
フィードバックループがあるからです MLは稼働しながら
より多くのデータを集めて学習を続けます ここで「価値は道の途中で得られる」
という点を掘り下げてみましょう 完成したMLでエンドツーエンドに自動化された 万能ソリューションを直ちに実現したい
気持ちはわかります 誰でも そうした飛躍を望みますが 多くの場合 優れた製品や
組織の成果にはつながりません Googleでも パートナー企業でも
それを見てきました それで 今すべきことは もっと現実的な道を見つけ 道の途中で見つかる素晴らしいものを
見直すことなのです