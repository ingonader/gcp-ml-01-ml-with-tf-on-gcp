すでにご説明したとおり
多くの方法で特徴を表現して 特徴エンジニアリングを
行うことができます スケーリング、特徴クロス 作成、埋め込みなどです これは機械学習モデル内の
どこに位置するのでしょうか？ モデルの構成を思い出してください データを読み書きする入力関数や 読み込みのプレースホルダとして
機能する特徴列や 特徴クロスの受け渡しを
作成するEstimatorがあり さらにtrain_spec、eval_spec
exporterなどをセットアップし 最後にtrainと
evaluateを呼び出します 特徴エンジニアリングはこの中の
どこに当てはまりますか？ 特徴エンジニアリングには
3つの場所が考えられます 読み込むときに即座に
データ内で実行する つまり 入力関数で行うことも 特徴列を作成することもできます 別の方法は 独立したステップとして
トレーニング前に実施することです その後 入力関数は
事前処理された特徴を読み込みます 別個の事前処理ステップとして行う場合は データフロー内でそれを処理すると スケーラブルかつ分散的に実施できます Pythonのデータフローでも
これを実施できますが データフローがパイプラインに含まれる
場合にのみ行ってください 言い換えるとストリーム予測ジョブの
バッチを実行し こうして同じ事前処理ステップを
入力に適用できます 3つ目の選択肢は
事前処理をデータフロー内で実施し 事前処理済みの特徴を作成することです ただしTensorFlowで
同じ変換を行う必要があることを 予測グラフに指示します そのためには
TensorFlow変換を使います 前のセクションで見たように いくつかの事前処理ではTensorFlowで
新しい特徴列を作成できます 次に列をバケット化して新しい列を作成し 事前処理を行い この特徴列をEstimatorに送ります ここでは床面積の特徴列を 4つの間隔に分けます 最初の間隔は
500平方フィート未満の住宅です 2つ目は500～1,000平方フィート 3つ目は1,000～
2,500平方フィートの住宅 最後は2,500平方フィートを超える住宅です バケット化した列を
元の特徴列のリストに追加します そして両方が2つの形式の面積が
線形回帰で認識されます つまり実数値の列と バケット化したカテゴリ列です もちろん必要に応じて 数値列をバケット化列に置き換えると カテゴリ形式の面積だけが
線形回帰で認識されます ここではそれを行い featcols [0]を
バケット化バージョンに置き換えます これはもう1つの特徴クロスの例ですが 今度は埋め込みの内部でも行います 住宅の緯度と経度に基づき 離散化の間隔を定義できます ここでは等間隔のN個のバケットを使用します 境界の算出に使った1つの方法は
approx quantizeでBigQueryのSQL関数です これで容器ごとに同数の
トレーニングサンプルを入れることができます どんな方法で境界が得られた場合も たとえばこの例の latbucketsと
lonbucketsが得られたら その後 住宅の緯度と経度を
b_latとb_lonの中に格納できます そして すでにご説明したとおり 2つのカテゴリ列b_latとb_lonに
特徴クロスを適用できます ここでは特徴クロスを適用して nbucketsの2乗の
ハッシュバケットにします すると各ハッシュバケットに入る
特徴クロス数は平均して1つだけになります これは私の経験則ですが 前のレッスンでご説明したとおり 1/2の平方根から2倍までの間です 最後にデータをnbucketsに
4次元で埋め込みました 事前処理をTensorFlowに
直接埋め込むメリットは これらの操作が
モデルグラフの一部になり トレーニングと本番で同じ方法で
これらが実施されることです これは現実世界でどんな意味がありますか？ まず緯度を離散化します さまざまな実数値を単に
区分けしているだけなので ほぼ同じ緯度にある複数の住宅は
すべて同じ値になります これは過剰適合に
少し役立つもしれませんが 緯度を離散化するだけなので
それ程でもありません 次に経度を離散化します 経度の値を区分化すると過剰適合に
少し役立つかもしれませんが 経度を離散化しても
やはり大したことはありません でも2つの離散化した値に特徴クロスを
適用するとどうなるでしょう？ 実質的に地図を
複数のグリッドセルに分割し それぞれの家が1つのグリッドセルにだけ
属するようになります こうするとトレーニング中に 各グリッドセル内の住宅の平均価格を
記憶させることができます 明らかにグリッドの間隔を細かくすれば
予測がより詳細になりますが 一般化も難しくなります
なぜなら 適切に見積もるのに十分な数の住宅が グリッドセル内で売られていない
可能性があるからです 予測中に1つの住宅を指定すると どのグリッドセルに属するかわかるので そのグリッドセルの
記憶済み値を引き出せます 埋め込みでは
互いに類似するグリッドセル たとえばオーシャンフロントにある
すべてのグリッドセルに 類似する値を持たせることができます