In der vorherigen Lektion
haben wir besprochen, wie Merkmale
in TensorFlow vorverarbeitet werden. Wie ging das? Mit Merkmalspalten. Sehen wir uns jetzt an,
wie wir Merkmale in Tensorflow erstellen. Die Eingabefunktion
gibt Merkmale und Labels zurück. Was für einen Datentyp haben Merkmale? Es ist ein Python-Wörterbuch. Nehmen wir an, die Entfernung vom öffentlichen Nahverkehr
hat großen Einfluss auf Wohnungspreise. Wir möchten daher
ein neues Merkmal hinzufügen, das die Entfernung der Wohnung
von der nächsten U-Bahn-Station darstellt. Nehmen wir an, im Dataset
ist der Ort der U-Bahn-Station enthalten, der dann auch Teil der Merkmale ist. In unserer Methode berechnen wir dann die euklidische Entfernung
zwischen Wohnung und U-Bahn-Station und fügen sie dem Wörterbuch hinzu. Wohin kommt die Methode "add_engineered"? Rufen Sie die Methode "add_engineered"
aus allen Eingabefunktionen auf. Wie viele Eingabefunktionen sind das? Im Allgemeinen haben wir drei: die Eingabefunktionen für Training,
für Bewertung und für Bereitstellung. Die Methode "add_engineered"
muss aus allen drei aufgerufen werden. In der Trainingseingabefunktion
ersetze ich "return features, label" durch eine Zusammenfassung der Merkmale
über einen Aufruf von "add_engineered". So gelangen meine Zusatzmerkmale
in das Python-Wörterbuch. Die Bewertungseingabefunktion
ähnelt der Trainingseingabefunktion. Fassen Sie die Aufrufe
mit "add_engineered" zusammen. In der Bereitstellungseingabefunktion geben Sie einen "ServingInputRecveiver"
zurück, der zwei Parameter verlangt. Der erste Parameter sind die Merkmale. Der zweite Parameter
ist der Platzhalter für Merkmale aus JSON. Die Platzhalter bleiben unverändert,
Sie empfangen dieselben Rohdaten. Fassen Sie aber
wie bei der Trainingseingabefunktion die Merkmale durch einen Aufruf
von "add_engineered" zusammen. So gelangen dieselben Zusatzmerkmale,
die beim Training erstellt wurden, auch hier in das Python-Wörterbuch.