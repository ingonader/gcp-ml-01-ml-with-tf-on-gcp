1
00:00:00,890 --> 00:00:02,520
前のレッスンでは

2
00:00:02,520 --> 00:00:07,061
TensorFlowで特徴の事前処理を
行う方法を説明しました

3
00:00:07,061 --> 00:00:09,490
どんな方法で？

4
00:00:09,490 --> 00:00:12,080
特徴カラムを使いました

5
00:00:12,080 --> 00:00:18,284
今回はTensorFlowで
特徴を作成する方法を見ていきます

6
00:00:18,284 --> 00:00:23,720
すでに見たとおりinput関数は
featuresとlabelsを返します

7
00:00:23,730 --> 00:00:27,996
featuresのデータ型は何ですか？

8
00:00:27,996 --> 00:00:31,414
Pythonディクショナリです

9
00:00:31,414 --> 00:00:38,165
たとえば公共交通機関からの距離は
家の価格の重要な予測因子だとすると

10
00:00:38,165 --> 00:00:40,775
新しい特徴を追加して

11
00:00:40,775 --> 00:00:45,685
住宅と最寄りの地下鉄の駅との距離を
表します

12
00:00:47,065 --> 00:00:51,465
地下鉄の駅の場所が
データセットに含まれるなら

13
00:00:51,465 --> 00:00:54,030
特徴にも含まれるでしょう

14
00:00:54,030 --> 00:01:00,080
そしてメソッドで住宅と駅との
ユークリッド距離を計算して

15
00:01:00,080 --> 00:01:03,790
それをディクショナリに追加します

16
00:01:03,820 --> 00:01:08,772
ではadd_engineeredメソッドの
場所はどこですか？

17
00:01:08,794 --> 00:01:11,022
すべてのinput関数から

18
00:01:11,022 --> 00:01:14,930
add_engineeredメソッドを
呼び出します

19
00:01:14,930 --> 00:01:17,810
input関数はいくつありますか？

20
00:01:17,810 --> 00:01:22,620
一般的には3つ
つまりtraining_input

21
00:01:22,620 --> 00:01:25,502
evaluation_input
serving_input関数です

22
00:01:25,502 --> 00:01:30,380
add_engineeredメソッドを
この3つから呼び出す必要があります

23
00:01:30,400 --> 00:01:33,645
training_input関数では

24
00:01:33,645 --> 00:01:36,890
(features), labelを
返す代わりに

25
00:01:36,890 --> 00:01:42,560
add_engineered呼び出しで
特徴をラップします

26
00:01:42,560 --> 00:01:44,024
この方法により

27
00:01:44,024 --> 00:01:48,634
追加的に作成した特徴が
Pythonディクショナリに入ります

28
00:01:48,680 --> 00:01:52,750
evaluation_input関数は
training_input関数と似ていて

29
00:01:52,750 --> 00:01:57,030
呼び出しをadd_engineeredで
ラップします

30
00:01:57,030 --> 00:01:59,279
serving_input関数では

31
00:01:59,279 --> 00:02:04,320
2つのパラメータを受け入れる
ServingInputReceiverを返します

32
00:02:04,320 --> 00:02:07,239
最初のパラメータは(features)

33
00:02:07,239 --> 00:02:12,220
2番目のパラメータは
JSONで受け取るデータのプレースホルダです

34
00:02:12,220 --> 00:02:15,790
プレースホルダは変化せず
同じ生データを受け取ります

35
00:02:15,790 --> 00:02:18,470
ただしtraining_input関数と同じように

36
00:02:18,470 --> 00:02:22,550
add_engineered呼び出しで
(features)をラップします

37
00:02:22,550 --> 00:02:27,870
この方法でトレーニング中に
作成したのと同じ追加の特徴が

38
00:02:27,870 --> 00:02:31,090
Pythonディクショナリにも入ります