1
00:00:00,000 --> 00:00:01,010
Aqui estamos nós.

2
00:00:01,010 --> 00:00:05,610
Estamos de modo intensivo no Playground,
e o conjunto de dados que temos

3
00:00:05,610 --> 00:00:09,060
parece ter pontos azuis no

4
00:00:09,060 --> 00:00:12,660
canto inferior esquerdo
e no canto superior direito,

5
00:00:12,660 --> 00:00:18,315
parece ter pontos laranja no canto
superior esquerdo e no inferior direito.

6
00:00:18,315 --> 00:00:22,605
Digamos que temos duas
entradas brutas x1 e x2.

7
00:00:22,605 --> 00:00:27,720
O que você quer é, basicamente,
usar o x1 e o x2 para treinar o modelo.

8
00:00:27,720 --> 00:00:30,570
Então, vamos seguir em frente e
treinar o modelo, que toma

9
00:00:30,570 --> 00:00:33,725
x1 e x2 como entrada neste
conjunto de dados específico.

10
00:00:33,725 --> 00:00:35,080
E como você pode ver,

11
00:00:35,080 --> 00:00:36,690
ele pode continuar treinando,

12
00:00:36,690 --> 00:00:40,620
mas a imagem de fundo não
muda muito, certo?

13
00:00:40,620 --> 00:00:45,060
É tudo desbotado porque x1 e
x2 e modelo linear,

14
00:00:45,060 --> 00:00:50,505
isso não funciona realmente em termos de
uma boa capacidade de aprendizado.

15
00:00:50,505 --> 00:00:52,605
Então o modelo não aprende muito.

16
00:00:52,605 --> 00:00:56,745
Vamos parar isso e vamos
ver isso de novo.

17
00:00:56,745 --> 00:00:59,090
Acontece que

18
00:00:59,090 --> 00:01:03,495
é uma combinação de x1 e x2
que realmente importa.

19
00:01:03,495 --> 00:01:09,900
Se x1 é negativo e x2 é negativo, é azul.

20
00:01:09,900 --> 00:01:14,790
Se x1 é positivo e x2 é positivo, é azul.

21
00:01:14,790 --> 00:01:18,795
Se o x1 e o x2 tiverem
sinais diferentes,

22
00:01:18,795 --> 00:01:21,000
então parece ser laranja.

23
00:01:21,000 --> 00:01:23,430
E o que isso lembra?

24
00:01:23,430 --> 00:01:26,790
Isso é um cruzamento de
atributos entre x1 e x2.

25
00:01:26,790 --> 00:01:31,965
Vamos adicionar o cruzamento
de atributos x1 e x2 como outra entrada.

26
00:01:31,965 --> 00:01:37,365
Vamos em frente e treinar,
e podemos ver quase imediatamente

27
00:01:37,365 --> 00:01:43,230
que temos um modelo muito
bom que separa o azul do amarelo,

28
00:01:43,230 --> 00:01:45,870
e o fundo para os pontos azuis
tende a ser azul,

29
00:01:45,870 --> 00:01:48,975
e o fundo dos pontos amarelos
tende a ser amarelo.

30
00:01:48,975 --> 00:01:53,790
E há, claro, o ruído onde você
tem erro de classificação,

31
00:01:53,790 --> 00:01:57,675
mas isso é esperado,
porque é um conjunto de dados ruidosos.

32
00:01:57,675 --> 00:02:00,345
A ideia principal é,

33
00:02:00,345 --> 00:02:04,260
tomando essa percepção humana,
essa percepção de que

34
00:02:04,260 --> 00:02:07,980
é uma combinação de x1 e x2 que
realmente nos permitirá

35
00:02:07,980 --> 00:02:12,575
classificar melhor neste
conjunto de dados,

36
00:02:12,575 --> 00:02:14,340
podemos adicionar x1 e x2.

37
00:02:14,340 --> 00:02:16,145
Que não é realmente uma nova entrada.

38
00:02:16,145 --> 00:02:19,260
É basicamente uma engenharia de atributos

39
00:02:19,260 --> 00:02:22,530
que realizamos nas entradas
originais em x1 e x2,

40
00:02:22,530 --> 00:02:27,510
e isso nos permite separar bem
o azul e o amarelo.

41
00:02:27,510 --> 00:02:31,800
Vamos ver agora um caso diferente.

42
00:02:31,800 --> 00:02:37,005
Neste caso, você basicamente tem
os pontos azuis no centro

43
00:02:37,005 --> 00:02:41,055
e os pontos amarelos em direção às bordas.

44
00:02:41,055 --> 00:02:45,660
E novamente, se eu apenas usar
x1 e x2 e eu treiná-lo,

45
00:02:45,660 --> 00:02:48,270
a imagem de fundo é toda
desbotada porque

46
00:02:48,270 --> 00:02:51,345
não há muito que possa ser
aprendido para este modelo.

47
00:02:51,345 --> 00:02:53,430
Então podemos dizer,

48
00:02:53,430 --> 00:02:57,230
bem, nós deveríamos olhar qual
tipo de engenharia futura é possível,

49
00:02:57,230 --> 00:02:58,870
então deixe-me parar isso.

50
00:02:58,870 --> 00:03:03,270
Que tipo de engenharia futura é possível
para basicamente fazer a separação?

51
00:03:03,270 --> 00:03:06,690
E novamente a intuição aqui é que,

52
00:03:06,690 --> 00:03:10,845
se x1 e x2 são pequenos, é azul.

53
00:03:10,845 --> 00:03:13,200
Se x1 e x2 são grandes,

54
00:03:13,200 --> 00:03:15,420
tende a ser amarelo.

55
00:03:15,420 --> 00:03:17,760
Mas não é que x1 e x2 são grandes.

56
00:03:17,760 --> 00:03:19,830
Se você olhar para um ponto aqui,

57
00:03:19,830 --> 00:03:23,940
x1 é muito pequeno, mas x2 é grande.

58
00:03:23,940 --> 00:03:26,610
Outra maneira de pensar sobre isso é,

59
00:03:26,610 --> 00:03:30,660
se você tem que pensar nisso
como o centro da imagem,

60
00:03:30,660 --> 00:03:34,080
os pontos que estão próximos do
centro tendem a ser azuis.

61
00:03:34,080 --> 00:03:37,410
Os que estão distantes
do centro tendem a ser amarelos.

62
00:03:37,410 --> 00:03:40,350
E o que isso lembra?

63
00:03:40,350 --> 00:03:43,340
Pontos perto e longe.
Isso é uma distância.

64
00:03:43,340 --> 00:03:45,600
E qual é a equação de uma distância?

65
00:03:45,600 --> 00:03:48,300
Raiz quadrada de x ao quadrado
mais y ao quadrado.

66
00:03:48,300 --> 00:03:52,230
Você não precisa de uma raiz quadrada,
porque o que estamos fazendo aqui é

67
00:03:52,230 --> 00:03:55,140
usar atributos de entrada
em uma rede neural,

68
00:03:55,140 --> 00:03:57,765
então precisamos de x ao quadrado
e y ao quadrado.

69
00:03:57,765 --> 00:04:02,345
Vamos em frente e tomar x1 ao quadrado e
x2 ao quadrado como entradas.

70
00:04:02,345 --> 00:04:04,575
E agora vamos treinar,

71
00:04:04,575 --> 00:04:07,215
e vemos que, quase imediatamente,

72
00:04:07,215 --> 00:04:14,940
você tem uma boa separação entre os
pontos azuis e os pontos laranja.

73
00:04:14,940 --> 00:04:16,445
Vamos parar isso.

74
00:04:16,445 --> 00:04:19,320
Vamos olhar para os dois.

75
00:04:19,320 --> 00:04:25,665
Em ambos, o limite de separação
é um limite linear.

76
00:04:25,665 --> 00:04:28,140
Neste caso, é bem óbvio.

77
00:04:28,140 --> 00:04:29,745
Não é um limite linear.

78
00:04:29,745 --> 00:04:32,550
Mesmo usando um modelo linear aqui,

79
00:04:32,550 --> 00:04:34,740
não há camadas ocultas,

80
00:04:34,740 --> 00:04:36,525
não há rede neural.

81
00:04:36,525 --> 00:04:40,290
É essencialmente uma combinação
linear das entradas.

82
00:04:40,290 --> 00:04:43,850
Somos capazes de conseguir
um limite não linear.

83
00:04:43,850 --> 00:04:45,655
Isso é algo para se dar conta.

84
00:04:45,655 --> 00:04:48,210
Se você tiver cruzamentos de atributos,

85
00:04:48,210 --> 00:04:50,855
mesmo que você esteja usando
um modelo linear,

86
00:04:50,855 --> 00:04:54,085
porque o cruzamento de atributos
não é linear,

87
00:04:54,085 --> 00:04:56,415
você de fato tem um modelo não linear.

88
00:04:56,415 --> 00:05:00,000
Então cruzamentos de atributos, uma das
razões pelas quais eles funcionam

89
00:05:00,000 --> 00:05:05,625
é que eles trazem o poder da
não linearidade para esse problema.

90
00:05:05,625 --> 00:05:09,090
Eles os trazem para lidar com
esse problema, enquanto

91
00:05:09,090 --> 00:05:12,850
não temos que pagar o
preço da não linearidade.

92
00:05:12,850 --> 00:05:16,110
Não precisamos nos preocupar
com os modelos serem

93
00:05:16,110 --> 00:05:19,335
muito profundos e com muitos
problemas de treinamento etc.

94
00:05:19,335 --> 00:05:20,550
Há um modelo linear.

95
00:05:20,550 --> 00:05:23,310
E o ponto positivo de um
modelo linear é que

96
00:05:23,310 --> 00:05:26,565
a superfície da área é convexa.

97
00:05:26,565 --> 00:05:29,775
O que significa que você tem
um mínimo global único,

98
00:05:29,775 --> 00:05:32,570
é relativamente fácil de encontrar
e você pode fazer isso.

99
00:05:32,570 --> 00:05:36,115
Então você tem as vantagens de
um modelo linear,

100
00:05:36,115 --> 00:05:38,430
mas o poder da não linearidade.

101
00:05:38,430 --> 00:05:43,005
E isso é algo legal sobre o
cruzamento de atributo.

102
00:05:43,005 --> 00:05:45,240
Mesmo no outro caso,

103
00:05:45,240 --> 00:05:48,810
este também é um limite não linear
porque são duas linhas, certo?

104
00:05:48,810 --> 00:05:50,010
Não é uma única linha,

105
00:05:50,010 --> 00:05:53,070
mas não é tão óbvio para
ver como é

106
00:05:53,070 --> 00:05:56,395
neste caso, onde é uma elipse, o que
não é, obviamente, uma linha.

107
00:05:56,395 --> 00:05:59,775
Algo para lembrar é que,

108
00:05:59,775 --> 00:06:05,720
mesmo quando temos o poder das redes
neurais e queremos usá-las, você pode

109
00:06:05,720 --> 00:06:10,455
considerar a inclusão de cruzamentos
de atributos como parte do toolkit

110
00:06:10,455 --> 00:06:17,890
pois eles permitem ter um modelo simples,
mas ainda conseguir não linearidade.