1
00:00:00,000 --> 00:00:01,010
Et voilà.

2
00:00:01,010 --> 00:00:05,610
Nous somme dans TensorFlow Playground
et l'ensemble de données que nous avons

3
00:00:05,610 --> 00:00:09,060
semble contenir essentiellement
des points bleus

4
00:00:09,060 --> 00:00:12,660
en bas à gauche et en haut à droite,

5
00:00:12,660 --> 00:00:18,315
et des points orange en haut à gauche
et en bas à droite.

6
00:00:18,315 --> 00:00:22,605
Nous avons
les valeurs d'entrée brutes x1 et x2,

7
00:00:22,605 --> 00:00:27,720
et nous voulons les utiliser
pour entraîner le modèle.

8
00:00:27,720 --> 00:00:29,720
Entraînons le modèle

9
00:00:29,720 --> 00:00:33,415
qui prend x1 et x2 en entrée
dans cet ensemble de données.

10
00:00:33,415 --> 00:00:34,730
Comme vous pouvez le voir,

11
00:00:34,730 --> 00:00:36,700
le modèle peut poursuivre l'entraînement,

12
00:00:36,700 --> 00:00:40,620
mais l'image de fond
ne change pas beaucoup.

13
00:00:40,620 --> 00:00:45,060
Les couleurs sont pâles,
car x1 et x2, et le modèle linéaire,

14
00:00:45,060 --> 00:00:50,505
ne fonctionnent pas très bien
en termes de capacités d'apprentissage.

15
00:00:50,505 --> 00:00:52,605
Le modèle n'apprend donc pas beaucoup.

16
00:00:52,605 --> 00:00:56,745
Arrêtons ceci et reprenons.

17
00:00:56,745 --> 00:00:58,140
En réalité,

18
00:00:58,140 --> 00:01:03,495
c'est une combinaison de x1 et x2
qui est importante.

19
00:01:03,495 --> 00:01:09,900
Si x1 et x2 sont négatifs,
nous avons du bleu.

20
00:01:09,900 --> 00:01:14,790
Si x1 et x2 sont positifs,
nous avons du bleu.

21
00:01:14,790 --> 00:01:18,795
Et si x1 et x2 ont des signes différents,

22
00:01:18,795 --> 00:01:21,000
nous avons apparemment de l'orange.

23
00:01:21,000 --> 00:01:23,430
Qu'est-ce que ça vous rappelle ?

24
00:01:23,430 --> 00:01:26,790
C'est un croisement
de caractéristiques entre x1 et x2.

25
00:01:26,790 --> 00:01:31,965
Ajoutons donc le croisement
des caractéristiques x1 et x2 en entrée.

26
00:01:31,965 --> 00:01:37,365
Procédons maintenant à l'entraînement.
Nous voyons presque immédiatement

27
00:01:37,365 --> 00:01:43,230
que nous avons un bon modèle
qui sépare le bleu et l'orange.

28
00:01:43,230 --> 00:01:45,870
Le fond des points bleus
a tendance à être bleu

29
00:01:45,870 --> 00:01:48,975
et celui des points orange à être orange.

30
00:01:48,975 --> 00:01:53,790
Il y a bien sûr du bruit au niveau
des erreurs de classification,

31
00:01:53,790 --> 00:01:57,675
ce qui est normal, car l'ensemble
de données est complexe.

32
00:01:57,675 --> 00:02:00,345
L'idée principale est donc que,

33
00:02:00,345 --> 00:02:04,260
grâce à l'utilisation
d'un renseignement humain,

34
00:02:04,260 --> 00:02:07,590
selon lequel une combinaison de x1 et x2

35
00:02:07,590 --> 00:02:12,575
nous permettra
de mieux classifier l'ensemble de données,

36
00:02:12,575 --> 00:02:14,340
nous avons pu ajouter x1x2.

37
00:02:14,340 --> 00:02:16,725
Ce n'est pas vraiment une nouvelle
valeur d'entrée.

38
00:02:16,725 --> 00:02:19,260
C'est une extraction de caractéristiques

39
00:02:19,260 --> 00:02:22,530
que nous avons effectuée sur les données
d'entrée d'origine x1 et x2.

40
00:02:22,530 --> 00:02:27,510
Elle nous permet de séparer
plutôt bien les points bleus et orange.

41
00:02:27,510 --> 00:02:31,800
Prenons un nouvel exemple.

42
00:02:31,800 --> 00:02:37,005
Ici, les points bleus sont au centre

43
00:02:37,005 --> 00:02:41,055
et les points orange sur les bords.

44
00:02:41,055 --> 00:02:45,660
À nouveau, si je n'utilise que x1 et x2,
et que je procède à l'entraînement,

45
00:02:45,660 --> 00:02:47,970
l'image de fond est pâle,

46
00:02:47,970 --> 00:02:51,345
car ce modèle n'apprend pas bien.

47
00:02:51,345 --> 00:02:53,430
Nous devrions donc voir

48
00:02:53,430 --> 00:02:57,230
quel type d'extraction
de caractéristiques utiliser.

49
00:02:57,230 --> 00:02:58,870
J'arrête donc ceci.

50
00:02:58,870 --> 00:03:03,270
Quel type d'extraction de caractéristiques
peut servir à effectuer cette séparation ?

51
00:03:03,270 --> 00:03:06,690
Notre intuition nous dit à nouveau

52
00:03:06,690 --> 00:03:10,845
que, si x1 et x2 sont tous les deux
petits, nous avons du bleu

53
00:03:10,845 --> 00:03:13,200
et que, si x1 et x2 sont grands,

54
00:03:13,200 --> 00:03:15,420
nous avons de l'orange.

55
00:03:15,420 --> 00:03:17,760
En réalité, ce n'est pas ça.

56
00:03:17,760 --> 00:03:19,830
Si vous regardez ce point ici,

57
00:03:19,830 --> 00:03:23,940
x1 est très petit, mais x2 est grand.

58
00:03:23,940 --> 00:03:26,610
Une autre manière d'envisager le problème

59
00:03:26,610 --> 00:03:30,660
est de considérer ceci
comme le centre de l'image.

60
00:03:30,660 --> 00:03:34,080
Les points qui en sont proches
ont tendance à être bleus

61
00:03:34,080 --> 00:03:37,410
et les points qui en sont éloignés
à être orange.

62
00:03:37,410 --> 00:03:40,350
Qu'est-ce que ça vous rappelle ?

63
00:03:40,350 --> 00:03:43,340
Des points proches et éloignés :
il s'agit d'une distance.

64
00:03:43,340 --> 00:03:45,600
Quelle est l'équation de la distance ?

65
00:03:45,600 --> 00:03:48,300
√(x² + y²).

66
00:03:48,300 --> 00:03:51,650
Nous n'avons pas besoin de racine carrée,
car nous nous contentons ici

67
00:03:51,650 --> 00:03:55,140
d'utiliser des caractéristiques d'entrée
dans un réseau de neurones.

68
00:03:55,140 --> 00:03:57,395
Nous avons besoin de x² et y².

69
00:03:57,395 --> 00:04:02,345
Ajoutons-les comme valeurs d'entrée.

70
00:04:02,345 --> 00:04:04,575
Si je procède à l'entraînement,

71
00:04:04,575 --> 00:04:07,215
vous pouvez voir que j'obtiens
presque immédiatement

72
00:04:07,215 --> 00:04:14,940
une bonne séparation
entre les points bleus et orange.

73
00:04:14,940 --> 00:04:16,445
Arrêtons ceci.

74
00:04:16,445 --> 00:04:19,320
Examinons ces deux exemples.

75
00:04:19,320 --> 00:04:25,665
Dans ces deux cas, la frontière
de séparation est-elle linéaire ?

76
00:04:25,665 --> 00:04:28,140
Dans ce cas, c'est assez évident.

77
00:04:28,140 --> 00:04:30,155
Il ne s'agit pas d'une frontière linéaire.

78
00:04:30,155 --> 00:04:32,550
Même si nous utilisons un modèle linéaire,

79
00:04:32,550 --> 00:04:34,740
il n'y a ni couche cachée,

80
00:04:34,740 --> 00:04:36,525
ni réseau de neurones.

81
00:04:36,525 --> 00:04:40,290
C'est une simple combinaison linéaire
des valeurs d'entrée.

82
00:04:40,290 --> 00:04:43,850
Nous avons pu obtenir
une frontière non linéaire.

83
00:04:43,850 --> 00:04:45,655
C'est un point important.

84
00:04:45,655 --> 00:04:48,210
Si vous avez des croisements
de caractéristiques,

85
00:04:48,210 --> 00:04:50,855
même si vous utilisez un modèle linéaire,

86
00:04:50,855 --> 00:04:54,085
comme le croisement
de caractéristiques est non linéaire,

87
00:04:54,085 --> 00:04:56,415
le modèle est en réalité non linéaire.

88
00:04:56,415 --> 00:04:58,740
Une des raisons pour lesquelles
les croisements

89
00:04:58,740 --> 00:05:00,320
de caractéristiques fonctionnent

90
00:05:00,320 --> 00:05:05,625
est parce qu'ils apportent la puissance
de la non-linéarité au problème.

91
00:05:05,625 --> 00:05:09,090
Ils permettent de résoudre le problème

92
00:05:09,090 --> 00:05:12,850
sans avoir à payer le prix
de la non-linéarité.

93
00:05:12,850 --> 00:05:16,110
Nous n'avons pas à nous inquiéter
de la profondeur des modèles

94
00:05:16,110 --> 00:05:19,335
ou des problèmes d'entraînement, etc.

95
00:05:19,335 --> 00:05:20,550
C'est un modèle linéaire.

96
00:05:20,550 --> 00:05:23,310
L'avantage d'un modèle linéaire est

97
00:05:23,310 --> 00:05:26,565
que sa surface est convexe,

98
00:05:26,565 --> 00:05:29,775
ce qui signifie que nous avons
un minimum global unique.

99
00:05:29,775 --> 00:05:32,570
Il est relativement facile à trouver.

100
00:05:32,570 --> 00:05:36,495
Vous avez donc les avantages
d'un modèle linéaire

101
00:05:36,495 --> 00:05:38,430
avec la puissance de la non-linéarité.

102
00:05:38,430 --> 00:05:43,005
C'est l'intérêt des croisements
de caractéristiques.

103
00:05:43,005 --> 00:05:45,240
Même dans l'autre exemple,

104
00:05:45,240 --> 00:05:48,710
il s'agit d'une frontière non linéaire,
car nous avons deux lignes,

105
00:05:48,710 --> 00:05:50,210
pas une ligne unique.

106
00:05:50,210 --> 00:05:53,070
Ce n'est pas aussi évident
que dans cet exemple

107
00:05:53,070 --> 00:05:56,395
où nous avons une ellipse,
qui n'est clairement pas une ligne.

108
00:05:56,395 --> 00:05:59,775
Souvenez-vous donc

109
00:05:59,775 --> 00:06:02,930
que, même si vous disposez
de la puissance d'un réseau de neurones

110
00:06:02,930 --> 00:06:04,860
et que vous voulez l'utiliser,

111
00:06:04,860 --> 00:06:10,455
vous devrez peut-être ajouter à votre kit
les croisements de caractéristiques.

112
00:06:10,455 --> 00:06:18,340
Ainsi, vous obtiendrez un modèle simple
tout en bénéficiant de la non-linéarité.