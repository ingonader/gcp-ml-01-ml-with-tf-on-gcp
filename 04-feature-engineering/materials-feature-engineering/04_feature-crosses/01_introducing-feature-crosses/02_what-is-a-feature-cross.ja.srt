1
00:00:00,000 --> 00:00:05,070
ニューラルネットワークの説明で使った
この図を覚えていますか？

2
00:00:05,070 --> 00:00:10,760
たとえば青い点は特定の機種の
携帯電話を購入するお客様で

3
00:00:10,760 --> 00:00:15,325
黄色い点はその携帯を購入しない
お客様だとしましょう

4
00:00:15,325 --> 00:00:21,240
x軸は前の携帯を購入してから
経過した時間

5
00:00:21,240 --> 00:00:26,625
y軸はお客様の
収入レベルだとします

6
00:00:26,625 --> 00:00:29,695
基本的にこの携帯電話を購入する人は

7
00:00:29,695 --> 00:00:34,320
購入から長い時間が経っていて
比較的裕福な場合です

8
00:00:34,320 --> 00:00:36,870
このデータを見てみましょう

9
00:00:36,870 --> 00:00:42,960
2つのクラスを大まかに
分ける線がわかりますか？

10
00:00:42,960 --> 00:00:44,930
わかりますよね

11
00:00:44,930 --> 00:00:46,980
少しだけエラーがあり

12
00:00:46,980 --> 00:00:49,020
完全には分割できませんが

13
00:00:49,020 --> 00:00:52,340
線形モデルが
これに適しているでしょう

14
00:00:52,340 --> 00:00:55,440
ですからこれは線形の問題です

15
00:00:55,440 --> 00:00:57,750
青の点と黄色の点は

16
00:00:57,750 --> 00:01:02,580
緑の直線で適切に分けられます

17
00:01:02,580 --> 00:01:06,495
でもこんなデータはどうでしょう？

18
00:01:06,495 --> 00:01:11,280
まだ線形モデルが使えますか？

19
00:01:11,280 --> 00:01:18,420
青い点と黄色い点を分ける直線を
引けないように見えます

20
00:01:18,500 --> 00:01:22,470
できませんね
線を引こうとすると

21
00:01:22,470 --> 00:01:25,520
青い点が線の両側に来てしまいます

22
00:01:25,520 --> 00:01:29,755
このデータは直線で分けられないので

23
00:01:29,755 --> 00:01:32,270
線形モデルは使えません

24
00:01:32,270 --> 00:01:37,720
もう少し「線形モデル」の意味を
具体的にできるでしょうか？

25
00:01:37,720 --> 00:01:40,510
軸について考えましょう

26
00:01:40,510 --> 00:01:43,500
x1は入力変数の1つです

27
00:01:43,500 --> 00:01:46,515
x2も入力変数です

28
00:01:46,515 --> 00:01:51,520
「線形モデルを使えない」状態では

29
00:01:51,520 --> 00:01:55,550
x1とx2を線形で結び付けて

30
00:01:55,550 --> 00:02:00,065
データに適した1つの決定境界を
得る方法がありません

31
00:02:00,065 --> 00:02:02,335
機械学習の用語では

32
00:02:02,335 --> 00:02:05,025
yは対象（ターゲット）です

33
00:02:05,025 --> 00:02:07,725
たとえば青=1、黄色=0

34
00:02:07,725 --> 00:02:09,635
これらはラベルです

35
00:02:09,635 --> 00:02:12,640
wとbは重みとバイアスで

36
00:02:12,640 --> 00:02:14,715
これから学習します

37
00:02:14,715 --> 00:02:22,975
この決定境界に合うように
wとbを修正する方法はありません

38
00:02:22,975 --> 00:02:30,130
でも何か他の方法で線形モデルを
使い続けることはできますか？

39
00:02:30,130 --> 00:02:34,510
単純に言うと
2つの軸を図の中心に描き

40
00:02:34,510 --> 00:02:39,465
原点(0,0)が図の中心に来るようにします

41
00:02:39,465 --> 00:02:44,805
現在のx1、x2を
前のx1、x2から得るには

42
00:02:44,805 --> 00:02:47,010
単に定数を引き算します

43
00:02:47,010 --> 00:02:49,560
この線形モデルは引き続き

44
00:02:49,560 --> 00:02:52,935
古い座標系の線形モデルです

45
00:02:52,935 --> 00:02:55,215
さてこの空間に

46
00:02:55,215 --> 00:02:58,725
新しい特徴x3を定義しましょう

47
00:02:58,725 --> 00:03:04,045
x3は特徴クロスです
ここからが重要です

48
00:03:04,045 --> 00:03:09,840
新しい特徴x3をx1とx2の
積だと定義します

49
00:03:09,840 --> 00:03:12,165
どのように役立ちますか？

50
00:03:12,165 --> 00:03:15,645
x3はx1とx2の積ですから

51
00:03:15,645 --> 00:03:18,590
どんな場合に正の数になりますか？

52
00:03:18,590 --> 00:03:22,800
そうです
x1とx2が両方とも正のとき

53
00:03:22,800 --> 00:03:26,880
またはx1とx2が両方とも負のときです

54
00:03:26,880 --> 00:03:28,665
負の数はどうでしょう？

55
00:03:28,665 --> 00:03:30,820
x3が負になるのは

56
00:03:30,820 --> 00:03:36,235
そのとおりx1またはx2が負で
もう一方が正のときです

57
00:03:36,235 --> 00:03:38,605
こうしてx3ができました

58
00:03:38,605 --> 00:03:45,910
x3を追加したら線形モデルで
解決できるでしょうか？

59
00:03:45,920 --> 00:03:53,925
x3の正弦（sine）がyになる
ルールを見つけることができます

60
00:03:54,265 --> 00:03:56,440
それを実施してみると

61
00:03:56,440 --> 00:03:59,070
w1が0
w2が0

62
00:03:59,070 --> 00:04:00,990
w3が1です

63
00:04:00,990 --> 00:04:05,055
yはx3のsineです

64
00:04:05,055 --> 00:04:10,575
特徴クロスによって
これが線形の問題になりました

65
00:04:10,575 --> 00:04:12,960
よくできていますね

66
00:04:12,960 --> 00:04:14,785
従来の機械学習では

67
00:04:14,785 --> 00:04:18,254
特徴クロスはあまり
重要ではありませんでした

68
00:04:18,254 --> 00:04:22,570
従来のML手法は小さな
データセット用に開発されたからです

69
00:04:22,570 --> 00:04:25,625
しかしデータセットの規模が

70
00:04:25,625 --> 00:04:28,875
数千、数万、数億になったりすると

71
00:04:28,875 --> 00:04:33,570
特徴クロスがとても便利な
テクニックになるのです

72
00:04:33,570 --> 00:04:38,430
前に説明しましたが
ニューラルネットワークの層では

73
00:04:38,430 --> 00:04:40,140
入力を結合でき

74
00:04:40,140 --> 00:04:44,505
こうしてニューラルネットワークが
強力になります

75
00:04:44,505 --> 00:04:48,555
ディープニューラルネットワークでは
多数の層が可能です

76
00:04:48,555 --> 00:04:52,320
各層はその前の層と結びつくので

77
00:04:52,320 --> 00:04:57,200
DNNは複雑な多次元空間を
モデル化できます

78
00:04:57,250 --> 00:05:02,280
また特徴クロスでは特徴も結合できます

79
00:05:02,280 --> 00:05:03,940
この利点は

80
00:05:03,940 --> 00:05:06,320
シンプルなモデルつまり

81
00:05:06,320 --> 00:05:08,750
線形モデルを使えることです

82
00:05:08,750 --> 00:05:12,240
シンプルなモデルを使うのは
良いことです

83
00:05:12,240 --> 00:05:14,060
特徴クロスにより

84
00:05:14,060 --> 00:05:19,585
非線形の入力を線形学習器つまり
線形モデルにすることができます

85
00:05:19,585 --> 00:05:23,380
ただし注意点があります

86
00:05:23,380 --> 00:05:26,650
直感的な方法で説明しましょう

87
00:05:26,650 --> 00:05:32,870
このセクションの最初の部分で
軸を図の中心に移動しましたね

88
00:05:32,870 --> 00:05:35,670
なぜそうしたのでしょう？