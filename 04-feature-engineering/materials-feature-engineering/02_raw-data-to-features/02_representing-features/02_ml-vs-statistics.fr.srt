1
00:00:00,000 --> 00:00:04,050
Dans le cas des statistiques,
s'il y a des valeurs manquantes,

2
00:00:04,050 --> 00:00:07,620
vous attribueriez normalement une valeur,
comme la moyenne de la colonne.

3
00:00:07,620 --> 00:00:11,780
C'est là que le ML et les statistiques
divergent d'un point de vue philosophique.

4
00:00:12,580 --> 00:00:15,440
Avec le ML, vous créez un modèle séparé

5
00:00:15,440 --> 00:00:18,860
pour quand vous avez les données
et quand vous ne les avez pas.

6
00:00:18,860 --> 00:00:23,300
Nous pouvons nous le permettre avec le ML,
que nous ayons les données ou non,

7
00:00:23,300 --> 00:00:25,170
car nous disposons d'assez de données

8
00:00:25,170 --> 00:00:28,505
pour créer quelque chose
d'aussi précis que possible.

9
00:00:28,505 --> 00:00:32,030
En revanche, les statistiques consistent
à garder les données que vous avez

10
00:00:32,030 --> 00:00:34,805
et à en tirer
les meilleurs résultats possibles.

11
00:00:35,125 --> 00:00:38,320
Cette différence de philosophie
affecte le traitement des anomalies.

12
00:00:38,320 --> 00:00:40,810
Avec le ML, vous cherchez
à obtenir assez d'anomalies

13
00:00:40,810 --> 00:00:42,410
pour effectuer l'entraînement.

14
00:00:42,410 --> 00:00:44,580
Vous vous souvenez des cinq exemples ?

15
00:00:44,580 --> 00:00:46,250
Avec les statistiques, vous dites :

16
00:00:46,250 --> 00:00:48,935
"J'ai toutes les données
que je peux recueillir."

17
00:00:48,935 --> 00:00:50,735
Vous éliminez donc les anomalies.

18
00:00:50,735 --> 00:00:54,895
C'est une différence philosophique
du fait de leurs scénarios d'utilisation.

19
00:00:54,895 --> 00:00:58,335
Les statistiques sont souvent appliquées
à des régimes de données limités

20
00:00:58,335 --> 00:01:00,635
alors que le ML utilise beaucoup de données.

21
00:01:00,635 --> 00:01:02,870
Avec le ML, vous ajoutez donc une colonne

22
00:01:02,870 --> 00:01:05,239
pour indiquer si des données sont manquantes.

23
00:01:05,239 --> 00:01:07,810
Si vous n'avez pas assez
de données, vous les attribuez

24
00:01:07,810 --> 00:01:09,630
ou vous les remplacez par une moyenne.

25
00:01:10,890 --> 00:01:13,410
Dans cet exemple,
nous prédisons la valeur de maisons.

26
00:01:13,410 --> 00:01:17,860
L'ensemble de données inclut la latitude.
Les deux pics que vous voyez ici,

27
00:01:17,860 --> 00:01:20,520
pour SFO et LAS,

28
00:01:20,520 --> 00:01:22,805
correspondent à San Francisco et Los Angeles.

29
00:01:22,805 --> 00:01:27,295
Représenter la latitude par un nombre
à virgule flottante n'est pas logique,

30
00:01:27,295 --> 00:01:31,770
car il n'y a pas de relation linéaire
entre la latitude et la valeur des maisons.

31
00:01:31,770 --> 00:01:38,840
Par exemple, les maisons à la latitude 35
ne sont pas 34 ou 35 fois plus chères

32
00:01:38,840 --> 00:01:41,585
que les maisons à la latitude 34.

33
00:01:42,145 --> 00:01:46,495
Cependant, les latitudes sont probablement
un bon indicateur du prix des maisons.

34
00:01:46,855 --> 00:01:48,910
Alors que faire avec cette magnitude ?

35
00:01:49,630 --> 00:01:51,440
Et si nous faisions ceci ?

36
00:01:51,440 --> 00:01:54,385
Au lieu d'avoir
un nombre à virgule flottante,

37
00:01:54,385 --> 00:01:58,080
utilisons
11 caractéristiques booléennes distinctes.

38
00:01:58,080 --> 00:02:00,215
LatitudeBin1,

39
00:02:00,215 --> 00:02:05,435
LatitudeBin2… LatitudeBin11,
avec des valeurs booléennes (oui/non).

40
00:02:05,435 --> 00:02:08,425
Nous utilisons ici
des frontières fixes entre les bins.

41
00:02:08,425 --> 00:02:11,340
Une autre solution couramment
employée par les data scientists

42
00:02:11,340 --> 00:02:13,870
est d'utiliser
des frontières basées sur des quantiles

43
00:02:13,870 --> 00:02:16,160
pour avoir
un nombre constant de valeurs par bin.

44
00:02:16,330 --> 00:02:19,295
Vous verrez ceci souvent
dans d'autres problèmes de régression.

45
00:02:19,295 --> 00:02:23,860
Nombre de cycles d'entraînement serviront
à corriger les valeurs inhabituelles.

46
00:02:25,530 --> 00:02:28,820
Avec le ML,
vous fusionnez la longue traîne,

47
00:02:28,820 --> 00:02:32,195
tandis qu'avec les statistiques,
vous la supprimez de votre ensemble.

48
00:02:32,195 --> 00:02:34,375
Si une maison compte 50 pièces,

49
00:02:34,375 --> 00:02:38,735
nous indiquons qu'elle en a quatre,
la valeur la plus élevée.

50
00:02:38,735 --> 00:02:42,800
Le prix d'une maison est de l'ordre
de plusieurs centaines de milliers,

51
00:02:42,800 --> 00:02:45,885
alors que le nombre de pièces est petit.

52
00:02:45,885 --> 00:02:49,080
Les optimiseurs ont généralement
du mal à gérer ce type de problème.

53
00:02:49,080 --> 00:02:51,510
Le prix finit par dominer votre gradient.

54
00:02:52,400 --> 00:02:55,310
Les architectures de ML modernes
prennent maintenant en compte

55
00:02:55,310 --> 00:02:59,285
les magnitudes variables
grâce à la normalisation par lots.

56
00:02:59,285 --> 00:03:01,200
Vous pouvez rencontrer des problèmes

57
00:03:01,200 --> 00:03:05,310
si un lot d'exemples comporte
des valeurs inhabituelles,

58
00:03:05,310 --> 00:03:08,220
mais ce n'est plus
aussi important que dans le passé.