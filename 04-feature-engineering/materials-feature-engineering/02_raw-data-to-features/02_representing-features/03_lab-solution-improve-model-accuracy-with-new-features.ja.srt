1
00:00:00,000 --> 00:00:02,115
このラボでは

2
00:00:02,115 --> 00:00:04,755
さまざまな特徴を試します

3
00:00:04,755 --> 00:00:07,910
a_featuresにアクセスした後

4
00:00:07,910 --> 00:00:09,490
上に移動して

5
00:00:09,490 --> 00:00:11,450
すべてのセルを消去すると

6
00:00:11,450 --> 00:00:14,725
今必要なものだけを
実際に実行できます

7
00:00:14,725 --> 00:00:18,320
まずたくさんのものを
インポートをします

8
00:00:18,320 --> 00:00:20,290
TensorFlowをインポートし

9
00:00:20,290 --> 00:00:23,245
Pandasや
NumPyなどをインポートして

10
00:00:23,245 --> 00:00:28,320
インポートが終わったら
データセットを読み込みます

11
00:00:28,320 --> 00:00:31,920
カリフォルニアの住宅のデータセットです

12
00:00:31,920 --> 00:00:35,160
これからカリフォルニアの住宅の価格を

13
00:00:35,160 --> 00:00:37,975
このデータセットから予測します

14
00:00:37,975 --> 00:00:40,180
読み込んだこのデータセットの

15
00:00:40,180 --> 00:00:42,680
中身を知っておくと役立つでしょう

16
00:00:42,680 --> 00:00:44,925
そこでdf.headを実行すると

17
00:00:44,925 --> 00:00:47,050
最初の数行が表示され

18
00:00:47,050 --> 00:00:49,180
経度と緯度や

19
00:00:49,180 --> 00:00:52,590
築年数の平均（median age）があります

20
00:00:52,590 --> 00:00:54,305
このデータセットは

21
00:00:54,305 --> 00:00:57,155
個別の物件ではなく集計です

22
00:00:57,155 --> 00:00:59,350
部屋の合計数は

23
00:00:59,350 --> 00:01:01,130
5,612

24
00:01:01,130 --> 00:01:03,500
明らかに
1つの物件ではありません

25
00:01:03,500 --> 00:01:08,510
この部屋数は
1つの郵便番号または1つの郡など

26
00:01:08,510 --> 00:01:10,980
なんらかの集計です

27
00:01:10,980 --> 00:01:13,710
こうして部屋の合計数が集約され

28
00:01:13,710 --> 00:01:16,030
ベッドルームの合計数もあり

29
00:01:16,030 --> 00:01:19,490
人口つまり住民の数は
約1,000人です

30
00:01:19,490 --> 00:01:23,150
さらに世帯数は472世帯

31
00:01:23,150 --> 00:01:27,190
収入の平均値は1.5で
単位は不明です

32
00:01:27,190 --> 00:01:32,035
住宅価値の平均値は66,900で

33
00:01:32,035 --> 00:01:34,005
これも単位が不明です

34
00:01:34,005 --> 00:01:40,100
こういったことを
データセットから知ろうとしています

35
00:01:40,100 --> 00:01:43,335
データセットの最初の数行は
こうなっていて

36
00:01:43,335 --> 00:01:47,010
数値にざっと目を通すと役立つでしょう

37
00:01:47,010 --> 00:01:49,605
さてdf.describe()はとても便利です

38
00:01:49,605 --> 00:01:51,840
これはPandasでは

39
00:01:51,840 --> 00:01:55,330
数値列の統計を表示し

40
00:01:55,330 --> 00:01:57,110
カテゴリ列の場合は

41
00:01:57,110 --> 00:01:59,620
その列ついて何も表示しません

42
00:01:59,620 --> 00:02:02,400
ここではすべて数値列ですから

43
00:02:02,400 --> 00:02:05,735
すべての列が表示され

44
00:02:05,735 --> 00:02:09,630
たとえばデータセットに
17,000個の経度と

45
00:02:09,630 --> 00:02:11,940
17,000個の緯度があり

46
00:02:11,940 --> 00:02:14,550
これがデータセットの行数です

47
00:02:14,550 --> 00:02:17,490
こうして確認していくことができます

48
00:02:17,490 --> 00:02:19,940
すべて17,000ですね

49
00:02:19,940 --> 00:02:22,740
もし17,000以外のものがあったら

50
00:02:22,740 --> 00:02:27,750
その行の値が
1つ以上欠落していることになります

51
00:02:27,750 --> 00:02:31,180
このケースではまず
サニティーチェックを行い

52
00:02:31,180 --> 00:02:32,969
欠損値はなく

53
00:02:32,969 --> 00:02:36,120
すべての値の行数は17,000行です

54
00:02:36,120 --> 00:02:39,275
経度の平均値は-119

55
00:02:39,275 --> 00:02:41,640
緯度の平均値は35です

56
00:02:41,640 --> 00:02:44,000
カリフォルニアなので適切ですね

57
00:02:44,000 --> 00:02:47,820
築年数の平均値は28.6です

58
00:02:47,820 --> 00:02:50,340
単位は年でしょう
約30年です

59
00:02:50,340 --> 00:02:53,685
部屋の総数は2,643です

60
00:02:53,685 --> 00:02:56,355
これは1つの家ではありませんね

61
00:02:56,355 --> 00:03:00,240
おそらくこの集計単位での
部屋の総数でしょう

62
00:03:00,240 --> 00:03:03,090
これを何とか工夫すべきです

63
00:03:03,090 --> 00:03:07,900
ベッドルームの総数も539で
おかしいですね

64
00:03:07,900 --> 00:03:13,245
人口は1,429、世帯数は501

65
00:03:13,245 --> 00:03:17,925
収入の平均値は3.9です

66
00:03:17,925 --> 00:03:23,055
住宅価値の平均値は27,000ですね

67
00:03:23,055 --> 00:03:26,015
これはすべて平均的な値です

68
00:03:26,015 --> 00:03:27,850
さらに標準偏差と

69
00:03:27,850 --> 00:03:29,610
最小値があり

70
00:03:29,610 --> 00:03:32,230
部屋の最小数は2

71
00:03:32,230 --> 00:03:36,025
部屋の最大数は37,937です

72
00:03:36,025 --> 00:03:39,225
データの概要はこのとおりです

73
00:03:39,225 --> 00:03:43,470
ではこのデータを2つに分割します

74
00:03:43,470 --> 00:03:45,390
これは実験ですから

75
00:03:45,390 --> 00:03:47,295
保存はしません

76
00:03:47,295 --> 00:03:49,485
ランダムな分割で十分でしょう

77
00:03:49,485 --> 00:03:52,310
マスクを作成します

78
00:03:52,310 --> 00:03:53,970
このマスクは

79
00:03:53,970 --> 00:03:59,750
dfsの長さつまり
17,000個からなる配列を作ります

80
00:03:59,750 --> 00:04:03,135
またランダムが0.8未満か確認します

81
00:04:03,135 --> 00:04:06,780
つまり値の80%が1で

82
00:04:06,780 --> 00:04:11,430
値の約20%がゼロです

83
00:04:11,430 --> 00:04:14,610
traindfではすべての値で
これが1になり

84
00:04:14,610 --> 00:04:19,110
evaldfではすべての値の
mskがゼロになります

85
00:04:19,110 --> 00:04:20,608
ここで

86
00:04:20,608 --> 00:04:25,740
2つのデータフレーム
traindfとevaldfが得られ

87
00:04:25,740 --> 00:04:27,850
新しいものを追加して

88
00:04:27,850 --> 00:04:33,390
traindfの長さを出力します
約13,000ですね

89
00:04:33,390 --> 00:04:37,035
evaldfの長さも出力します

90
00:04:37,035 --> 00:04:41,235
約20%ですから
約3,400です

91
00:04:41,235 --> 00:04:43,925
これでトレーニング
データセットと

92
00:04:43,925 --> 00:04:46,445
評価用データセットができたので

93
00:04:46,445 --> 00:04:48,855
モデルを作成しましょう

94
00:04:48,860 --> 00:04:50,625
モデルを作成するには

95
00:04:50,625 --> 00:04:53,125
まずデータを読み込む必要があるので

96
00:04:53,125 --> 00:04:55,720
make_input_fnを実行します

97
00:04:55,720 --> 00:04:57,795
所定のデータフレームで

98
00:04:57,795 --> 00:05:00,370
エポックの数を読み取り

99
00:05:00,370 --> 00:05:03,140
pandas_input_fnを使って

100
00:05:03,140 --> 00:05:05,865
データフレームを受け入れますが

101
00:05:05,865 --> 00:05:09,515
それだけでなく特徴も追加します

102
00:05:09,515 --> 00:05:13,800
まず部屋数を見てください

103
00:05:13,800 --> 00:05:15,630
この部屋の総数は

104
00:05:15,630 --> 00:05:17,540
おかしいですよね？

105
00:05:17,540 --> 00:05:20,785
2,643部屋の家などありません

106
00:05:20,785 --> 00:05:22,335
間違っています

107
00:05:22,335 --> 00:05:23,910
これは実際には

108
00:05:23,910 --> 00:05:28,470
この郵便番号での
部屋の総数ですね

109
00:05:28,470 --> 00:05:30,750
これを正規化して

110
00:05:30,750 --> 00:05:33,675
1軒の家の値にする必要があります

111
00:05:33,675 --> 00:05:37,050
そのために部屋の総数を

112
00:05:37,050 --> 00:05:39,285
世帯数で割ると

113
00:05:39,285 --> 00:05:42,300
家の部屋数がわかります

114
00:05:42,300 --> 00:05:45,750
この郵便番号を持つ
標準的な家の数値です

115
00:05:45,750 --> 00:05:49,755
この郵便番号でそのほかに
正規化が必要なものは何ですか

116
00:05:49,755 --> 00:05:51,120
調べてみましょう

117
00:05:51,120 --> 00:05:54,090
緯度と経度はそのままでよさそうです

118
00:05:54,090 --> 00:05:56,955
部屋の合計数は正規化が必要で

119
00:05:56,955 --> 00:05:59,895
ベッドルームの総数も
正規化する必要があるので

120
00:05:59,895 --> 00:06:01,365
操作を進めて

121
00:06:01,365 --> 00:06:05,685
部屋の数だけでなく

122
00:06:05,685 --> 00:06:10,590
ベッドルームの数も処理します

123
00:06:10,590 --> 00:06:13,360
total_bedroomsですね

124
00:06:15,140 --> 00:06:17,880
total_bedrooms

125
00:06:17,880 --> 00:06:24,085
これをベッドルーム数
（num_bedrooms）にしましょう

126
00:06:24,085 --> 00:06:28,160
これで2つの特徴が追加され

127
00:06:28,160 --> 00:06:30,840
入力関数が作成されました

128
00:06:30,840 --> 00:06:32,670
さて特徴列ですが

129
00:06:32,670 --> 00:06:36,225
housing_median_ageは
数値列ですから

130
00:06:36,225 --> 00:06:38,430
そのまま使えます

131
00:06:38,430 --> 00:06:40,685
築年数の平均値を確認すると

132
00:06:40,685 --> 00:06:42,375
適切な数値が

133
00:06:42,375 --> 00:06:44,380
年単位で示されているので

134
00:06:44,380 --> 00:06:46,650
そのまま使えます

135
00:06:46,650 --> 00:06:48,900
こうして築年数の平均値を使い

136
00:06:48,900 --> 00:06:55,275
次に緯度を
32～42の間でバケット化します

137
00:06:55,275 --> 00:06:57,085
なぜ32～42ですか？

138
00:06:57,085 --> 00:07:00,545
ここに戻って確認すると

139
00:07:00,545 --> 00:07:04,645
緯度は32～42の間で変化しているので

140
00:07:04,645 --> 00:07:10,790
32～42の間でバケット化します

141
00:07:10,790 --> 00:07:15,504
緯度を使うなら
経度も使いましょう

142
00:07:15,510 --> 00:07:18,520
これを使って

143
00:07:21,280 --> 00:07:25,240
経度も処理します

144
00:07:25,240 --> 00:07:28,755
こうして経度を処理し

145
00:07:28,755 --> 00:07:38,270
経度の境界は
-124から-114の間にします

146
00:07:38,270 --> 00:07:43,055
下に移動してこれを
-124と-114に変更し

147
00:07:43,055 --> 00:07:49,970
1度の経度は妥当でしょう

148
00:07:49,970 --> 00:07:53,580
1度はおよそ100キロメートルです

149
00:07:53,580 --> 00:07:55,085
これでいいでしょう

150
00:07:55,085 --> 00:07:56,360
このように

151
00:07:56,360 --> 00:07:58,355
部屋の数と

152
00:07:58,355 --> 00:08:01,085
ベッドルームの数も追加したので

153
00:08:01,085 --> 00:08:03,410
それも処理します

154
00:08:03,410 --> 00:08:06,510
部屋の数、ベッドルームの数

155
00:08:06,510 --> 00:08:08,985
さらに平均収入

156
00:08:08,985 --> 00:08:12,825
これらが特徴列です

157
00:08:12,825 --> 00:08:17,294
次にトレーニングと評価を行います

158
00:08:17,294 --> 00:08:19,390
train_and_evaluateを使って

159
00:08:19,390 --> 00:08:22,405
train_specや
eval_specなどを渡し

160
00:08:22,405 --> 00:08:24,160
この時点で

161
00:08:24,160 --> 00:08:26,215
train_and_evaluateを呼び出して

162
00:08:26,215 --> 00:08:28,405
trained_modelを書き出します

163
00:08:28,405 --> 00:08:30,340
これを実行すると

164
00:08:30,340 --> 00:08:33,669
評価の出力が得られます

165
00:08:33,669 --> 00:08:35,065
実行中です

166
00:08:35,065 --> 00:08:39,465
5,000ステップを実行するよう指示しました

167
00:08:39,465 --> 00:08:40,715
現時点で

168
00:08:40,715 --> 00:08:42,659
ステップ1,650なので

169
00:08:42,659 --> 00:08:44,455
少し待ちましょう

170
00:08:44,455 --> 00:08:46,180
処理が終わったら

171
00:08:46,180 --> 00:08:49,560
時折
辞書を保存していますね

172
00:08:49,560 --> 00:08:52,270
average_lossを指定していますが

173
00:08:52,270 --> 00:08:54,500
平均損失はそれほど役立ちません

174
00:08:54,500 --> 00:08:56,985
バッチに対して計算された損失ですから

175
00:08:56,985 --> 00:08:58,830
あまり意味がありませんが

176
00:08:58,830 --> 00:09:00,145
この損失は

177
00:09:00,145 --> 00:09:03,205
評価用データセットに関する
損失なので妥当です

178
00:09:03,205 --> 00:09:05,465
実際の損失を見ると

179
00:09:05,465 --> 00:09:10,220
評価用データセットで計算された
平均損失は妥当です

180
00:09:10,220 --> 00:09:12,740
損失自体は単に
バッチに関するものですから

181
00:09:12,740 --> 00:09:14,110
不要です

182
00:09:14,110 --> 00:09:15,585
下に行って

183
00:09:15,585 --> 00:09:17,350
終わるまで待ちます

184
00:09:17,350 --> 00:09:21,205
4,000、5,000
できました

185
00:09:21,205 --> 00:09:27,130
データセット全体に対する
平均損失RMSCは0.59です

186
00:09:27,130 --> 00:09:29,200
別のことを試しましょう

187
00:09:29,200 --> 00:09:38,480
もし部屋の数がなかったら
どうなるか見てみましょう

188
00:09:38,480 --> 00:09:42,395
これらを追加するのをやめて

189
00:09:42,395 --> 00:09:47,305
入力列を作成するときに

190
00:09:47,305 --> 00:09:50,410
部屋数を使わず

191
00:09:50,410 --> 00:09:52,225
ベッドルームの数も

192
00:09:52,225 --> 00:09:55,210
緯度も経度も使わず

193
00:09:55,210 --> 00:09:56,965
平均収入も使わず

194
00:09:56,965 --> 00:09:59,080
築年数だけを使います

195
00:09:59,080 --> 00:10:02,215
これを実行すると
特徴列はこれだけです

196
00:10:02,215 --> 00:10:04,145
どうなりますか？

197
00:10:04,145 --> 00:10:06,570
下に行くと

198
00:10:08,320 --> 00:10:11,525
先ほどは0.59でしたね

199
00:10:11,525 --> 00:10:13,205
このセルを消去して

200
00:10:13,205 --> 00:10:16,425
再び実行します
今度は入力が1つだけです

201
00:10:16,425 --> 00:10:19,810
この時点で何が得られますか

202
00:10:20,210 --> 00:10:23,310
損失が1.87ですから

203
00:10:23,310 --> 00:10:26,930
これらの入力特徴は
役に立っていました

204
00:10:26,930 --> 00:10:30,870
使わないと損失が上昇したからです

205
00:10:30,870 --> 00:10:34,320
こうしてどういう特徴が
役立つかわかります

206
00:10:34,320 --> 00:10:37,260
これを手動で実行できます

207
00:10:37,260 --> 00:10:40,710
収入の平均値だけを使うと
どうなるか確認できます

208
00:10:40,710 --> 00:10:43,590
平均収入はとても良い指標です

209
00:10:43,590 --> 00:10:47,720
収入の平均値を使ってもう1回試すと

210
00:10:47,720 --> 00:10:50,495
損失が劇的に減少しました

211
00:10:50,495 --> 00:10:52,800
ほかの特徴も役立ちますが

212
00:10:52,800 --> 00:10:55,100
それほどでもありません

213
00:10:55,100 --> 00:10:57,410
平均収入が特に役立つ理由は

214
00:10:57,410 --> 00:11:00,390
人々がどんな物件を
購入できるかを反映し

215
00:11:00,390 --> 00:11:05,445
市場も人々の経済力に合わせる
傾向があるからです

216
00:11:05,445 --> 00:11:09,810
今は平均損失が0.69になっています

217
00:11:09,810 --> 00:11:16,410
平均収入の特徴を追加するだけで
1.38から0.69に下がりました

218
00:11:16,410 --> 00:11:19,230
平均収入はとても役立つ特徴です

219
00:11:19,230 --> 00:11:22,215
これは現実世界では
どんな意味がありますか？

220
00:11:22,215 --> 00:11:24,060
現実世界では

221
00:11:24,060 --> 00:11:26,625
どんなデータを集めるかが重要です

222
00:11:26,625 --> 00:11:28,680
たとえばこのデータセットで

223
00:11:28,680 --> 00:11:33,240
その地域に住む人の平均収入を
収集しないとしたら

224
00:11:33,240 --> 00:11:36,180
悪いモデルになります

225
00:11:36,180 --> 00:11:39,630
つまりこういうことです

226
00:11:39,630 --> 00:11:44,220
機械学習モデルで重要なのは
モデル自体ではなく

227
00:11:44,220 --> 00:11:47,325
モデルに入力するデータです

228
00:11:47,325 --> 00:11:51,045
このモデルで本当に重要なのは

229
00:11:51,045 --> 00:11:55,200
この地区に住む人の平均収入によって

230
00:11:55,200 --> 00:11:58,250
この地区の住宅価格を予想できることです

231
00:11:58,250 --> 00:12:00,240
これはとても重要な特徴です

232
00:12:00,240 --> 00:12:02,130
そしてこの特徴を使うには

233
00:12:02,130 --> 00:12:06,880
データエンジニアリングのパイプラインを
使ってデータを入力します