1
00:00:00,000 --> 00:00:04,050
Bei Statistiken würden Sie es
wahrscheinlich sehen, wenn Werte fehlen.

2
00:00:04,050 --> 00:00:08,020
Sie würden den durchschnittlichen
Wert einer Spalte einfach imputieren.

3
00:00:08,020 --> 00:00:12,150
An dieser Stelle gehen ML und
Statistiken vom Ansatz her auseinander.

4
00:00:12,150 --> 00:00:15,440
Die Idee von ML ist,
dass Sie ein eigenständiges Modell

5
00:00:15,440 --> 00:00:18,860
dafür entwickeln, ob
die Daten vorhanden sind oder nicht.

6
00:00:18,860 --> 00:00:21,080
ML bietet uns die Möglichkeit,

7
00:00:21,080 --> 00:00:23,550
über Szenarien mit
und ohne Daten nachzudenken,

8
00:00:23,550 --> 00:00:25,920
da wir in ML genügend Daten haben,

9
00:00:25,920 --> 00:00:28,505
um möglichst präzise Modelle zu erstellen.

10
00:00:28,505 --> 00:00:31,220
Bei Statistiken geht es jedoch darum,

11
00:00:31,220 --> 00:00:34,925
aus den vorhandenen Daten
die besten Ergebnisse zu erzielen.

12
00:00:34,925 --> 00:00:38,390
Die unterschiedlichen Ansätze wirken
sich auf den Umgang mit Abweichungen aus.

13
00:00:38,390 --> 00:00:40,470
Bei ML finden Sie genügend Abweichungen,

14
00:00:40,470 --> 00:00:42,250
zum Trainieren eines Modells.

15
00:00:42,250 --> 00:00:44,450
Erinnern Sie sich
an die Regel der fünf Proben?

16
00:00:44,450 --> 00:00:46,010
Bei Statistiken sagen Sie

17
00:00:46,010 --> 00:00:48,935
"Ich habe alle Daten,
die ich erfassen kann."

18
00:00:48,935 --> 00:00:50,735
Abweichungen werden ausgeschlossen.

19
00:00:50,735 --> 00:00:52,455
Die Ansätze unterscheiden sich

20
00:00:52,455 --> 00:00:55,180
aufgrund der Situationen,
in denen ML und Statistiken genutzt werden.

21
00:00:55,180 --> 00:01:00,635
Statistiken werden für begrenzte Daten
genutzt, ML für riesige Datenmengen.

22
00:01:00,635 --> 00:01:02,870
Eine Extraspalte
zur Kennzeichnung fehlender

23
00:01:02,870 --> 00:01:05,839
oder nicht fehlender Daten
würden Sie bei ML verwenden.

24
00:01:05,839 --> 00:01:10,170
Haben Sie zu wenig Daten, imputieren oder
ersetzen Sie sie durch einen Mittelwert.

25
00:01:10,170 --> 00:01:13,410
In diesem Beispiel soll
ein Immobilienwert berechnet werden.

26
00:01:13,410 --> 00:01:17,860
Das Dataset enthält Breitengrade
und die zwei abgebildeten Höchstwerte,

27
00:01:17,860 --> 00:01:20,520
einen für SFO und einen für LAS.

28
00:01:20,520 --> 00:01:22,775
San Francisco und Los Angeles.

29
00:01:22,775 --> 00:01:27,295
Es hat keinen Sinn, die Breite in unserem
Modell als Fließkommawert darzustellen.

30
00:01:27,295 --> 00:01:29,390
Denn es besteht keine lineare Beziehung

31
00:01:29,390 --> 00:01:31,760
zwischen Breitengrad und Immobilienwert.

32
00:01:31,760 --> 00:01:36,560
Häuser am Breitengrad 35 sind nicht 35-mal

33
00:01:36,560 --> 00:01:41,585
oder 34-mal teurer
als Häuser am Breitengrad 34.

34
00:01:41,585 --> 00:01:46,615
Trotzdem sind einzelne Breitengrade
wahrscheinlich ein guter Wertindikator.

35
00:01:46,615 --> 00:01:49,530
Was machen wir mit der Bezugsgröße?

36
00:01:49,530 --> 00:01:51,870
Eine Möglichkeit wäre Folgendes.

37
00:01:51,870 --> 00:01:54,695
Statt einer einzigen Fließkommafunktion

38
00:01:54,695 --> 00:01:58,370
könnten wir 11 individuelle
boolesche Funktionen anwenden.

39
00:01:58,370 --> 00:02:00,215
Yes-no latitudeBin1,

40
00:02:00,215 --> 00:02:05,435
latitudeBin2 bis latitudeBin11
mit booleschen Ja-Nein-Werten.

41
00:02:05,435 --> 00:02:08,425
Dabei kommen
feste Bin-Grenzwerte zum Einsatz.

42
00:02:08,425 --> 00:02:11,720
Andere Optionen,
die Data Scientists häufig verwenden,

43
00:02:11,720 --> 00:02:15,950
sind Quantilgrenzwerte, damit die Anzahl
der Werte in jedem Bin einheitlich ist.

44
00:02:15,950 --> 00:02:19,085
Dieses Problem taucht
häufig bei der Regression auf.

45
00:02:19,085 --> 00:02:24,530
Es kann mehrere Trainingsdurchläufe
erfordern, die Ausreißer zu korrigieren.

46
00:02:24,530 --> 00:02:28,110
Sie brechen also
die langen Werte in ML herunter,

47
00:02:28,110 --> 00:02:32,195
statt sie bei normalen
Statistiken aus ihrem Satz zu entfernen.

48
00:02:32,195 --> 00:02:38,735
Wenn das Haus 50 Zimmer hat, stellen
wir 4 Zimmer ein – unseren Höchstwert.

49
00:02:38,735 --> 00:02:42,310
Die Idee ist, dass der Preis
einer Immobilie sechsstellig ist,

50
00:02:42,310 --> 00:02:46,055
während die Anzahl
der Zimmer einstellig ist.

51
00:02:46,055 --> 00:02:48,940
Das ist ein typisches
Problem für Optimierungstools.

52
00:02:48,940 --> 00:02:51,850
Am Ende wird
der Gradient durch den Preis dominiert.

53
00:02:51,850 --> 00:02:55,310
Moderne Architekturen für ML
berücksichtigen viele Bezugsgrößen

54
00:02:55,310 --> 00:02:59,285
aufgrund eines Vorgangs,
der sich Batch-Normalisierung nennt.

55
00:02:59,285 --> 00:03:01,700
Sie werden allerdings Probleme haben,

56
00:03:01,700 --> 00:03:04,790
wenn ein Beispiel-Batch
nur ungewöhnliche Werte enthält.

57
00:03:04,790 --> 00:03:08,220
Es ist also nicht so wichtig,
wie es früher einmal war.