では良い特徴の2番目の側面は 予測の時点で値が
わかっている必要があることです 機械学習モデルを構築する目的は 予測に使いたいからですよね 予測に使えなければ 機械学習モデルを構築する意味がありません さて私が気に入っている点です よくある間違いですが データウェアハウスの中から単に すべてのデータと
関連フィールドを取り出して モデルに投げ込むと マシンが処理します すべてのフィールドをMLモデルに入力すると 予測で何が起きるでしょう？ 予測の際 たとえば ウェアハウス内のデータが
売上データだとしましょう このデータがモデルに入力されます たとえば前日の販売数を モデルに入力します でもここで問題が生じます 毎日の売上データが届くのは1か月後です 店舗から情報が届くまでに時間がかかるのです しかもデータに収集や加工で遅れが生じます データウェアハウスに情報が入るには
その前に 誰かがデータを収集し テーブルをまとめて事前処理する
必要があります しかし予測時には リアルタイムのデータがありません データを使えないのです データウェアハウスの情報には
今すぐわかるものと リアルタイムで
わからないものがあります 予測時点でわからないデータを使う場合 この入力をモデルで使っても モデルは役に立ちません 必要な入力値が存在しないからです 「売上データは1か月後に届く」と言いました 1か月後に届くデータを使う
機械学習モデルは 予測時に何も予測できません ここでの要点は モデルで使うすべての特徴の
すべての入力が 実際の予測時点で
手元に揃っている必要があります 入力変数を確実に
使えるようにするのです ですからデータを
タイミングよく収集してください 多くの場合
予測時に このデータを集めるのが
合法的か、倫理的か 配慮する必要があります 場合によっては
利用できる情報が揃っているのに 予測時にユーザーから
収集できないことがあります 繰り返しますが
予測時に収集できない場合 MLモデルではそれを使えません 別の例を見てみましょう 覚えやすい例ですが 再び家の価格の予測モデルです 物件の今日の販売価格と モデルとデータセットがあり モデルが価格を出力して トレーニングデータセットでは
完全に正確になります 家の販売価格の
データフィールドがあるからです でも予測時に 新しく販売される家は
過去の販売データがないので モデルは役に立ちません 予測時に不明なことを
入力できないからです ここでディスカッション形式の問題です 2つ目のフィールドが悪い特徴なのはなぜ？
何が間違っていますか？ ヒントです クラスターIDが別のモデルから
得られる場合はどうですか？ 知らない間に
そのモデルが更新されたら？ トレーニングデータセットから
引き続き学習できますか？ 答えは 特徴の定義そのものが時間とともに
変化してはなりません それにモデルをアップデートする
必要が生じます