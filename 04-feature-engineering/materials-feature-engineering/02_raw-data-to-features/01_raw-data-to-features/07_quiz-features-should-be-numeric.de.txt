Wir machen wieder den Test. Welches dieser Merkmale ist numerisch? Nicht numerische Merkmale
können zwar verwendet werden, müssen aber
in numerischer Form dargestellt werden. Wir versuchen wieder, die Anzahl der Gutscheine
vorherzusagen, die eingelöst werden. Wir vergleichen verschiedene Merkmale
unterschiedlicher Rabattgutscheine. Der Prozentwert des Rabatts, zum Beispiel 10 Prozent oder 20 Prozent – ist das numerisch?
Ja, natürlich. Und wir haben
eine aussagekräftige Bezugsgröße. Ein 20-Prozent-Gutschein ist doppelt
so wertvoll wie ein 10-Prozent-Gutschein. Prozentwerte stellen
also kein Problem dar und bieten
eine aussagekräftige Bezugsgröße. Kommen wir zur Größe
des Gutscheins – Punkt 2. Wir gehen von folgenden Größen aus. 4 cm², 24 cm² und 48 cm². Sind diese Werte numerisch? Klar. Und die Größen sind nachvollziehbar, möglicherweise als Bezugsgröße. Doch es ist unklar,
ob die Größen aussagekräftig sind. Beim Platzieren einer
Anzeige, etwa einer Banneranzeige, wäre eine größere
Anzeige sinnvoller – auch zur Einordnung. Bei einem physischen
Gutschein in einer Zeitung ist es allerdings fraglich,
ob ein Gutschein mit 48 cm² doppelt so gut ist
wie ein Gutschein mit 24 cm². Wir verändern das Problem ein wenig. Die Gutscheingrößen
sind jetzt klein, mittel und groß. Sind "klein", "mittel"
und "groß" numerisch? Ganz und gar nicht. Sie können natürlich
kategorische Variablen als Eingabewerte
für neuronale Netzwerke nutzen. Aber Sie können "klein", "mittel"
und "groß" nicht direkt verwenden. Die Werte müssen erst umgewandelt werden. Sie müssen eine andere Möglichkeit finden, um sie in numerischer Form
darzustellen. Darauf gehen wir gleich ein. Erst kommen wir zu Punkt 3. Die Schriftart einer Anzeige, Arial 18, Times New Roman 24 –
ist das numerisch? Nein. Wie soll man Times New Roman 
in einen numerischen Wert konvertieren? Sie könnten natürlich
Arial die Nummer 1 geben, Times New Roman die 2,
Rubato die Nummer 3, Comic Sans die 4 usw. Doch das ist ein Zahlencode –
keine aussagekräftige Größe. Wenn Arial "1"
und Times New Roman "2" ist, ist Times New Roman
nicht doppelt so gut wie Arial. Die aussagekräftige
Größe ist sehr wichtig. Punkt 4:
die Farbe des Gutscheins. Rot, Schwarz, Blau, Grün usw. Auch diese Werte sind nicht numerisch. Sie haben keine aussagekräftige Größe. Wir könnten zwar RGB-Werte nutzen, um aussagekräftige Zahlen
oder Hex-Codes zu erstellen, doch sie wären nicht
numerisch aussagekräftig. Wenn ich zwei Farben subtrahiere
und die Differenz lautet "drei", kann ich dann zwei andere Farben,
deren Differenz ebenfalls "drei" ist, als gleichwertig betrachten? Nein.
Und das ist ein Problem. Punkt 5: Artikelkategorie. 1 für Milchprodukt, 2 für Feinkost, 3 für Konserven. Nein. Das sind Kategorien, keine numerischen Werte. Sie können wie gesagt auch
nicht numerische Werte verwenden. Diese müssen aber erst umgewandelt werden. Dazu gleich mehr. Ein weiteres Beispiel: Um Wörter in einem
Natural Language Processing-System numerisch zu machen,
würden Sie normalerweise Word2vec oder Word-to-Vector verwenden. Das sind Standardmethoden, die Sie auf die Wörter
bzw. die Wortvektoren anwenden, sodass jedes Wort zu einem Vektor wird. Am Ende des Word2vec-Prozesses können Sie den Vektor für "Mann" und den Vektor für "Frau" subtrahieren, und erhalten eine ähnliche Differenz, wie wenn Sie den Vektor für "König" und den Vektor für "Königin" subtrahieren. Interessant, nicht wahr?
So funktioniert Word2vec. Eine nicht numerische
Eingabevariable numerisch zu machen ist keine leichte Aufgabe. Es ist sehr aufwendig, aber machbar. Sie könnten natürlich einfach willkürliche Codierungen
wie 1, 2, 3, 4, 5 wählen. Das resultierende
ML-Modell ist aber deutlich besser, wenn Sie eine Vektorcodierung nutzen,
die den Kontext von männlich, weiblich, Mann, Frau, König und Königin erkennt. Das meinen wir mit numerischen Merkmalen, die aussagekräftige Größen haben. Sie müssen nützlich sein und Rechenoperationen ermöglichen. Sie müssen Vektordarstellungen finden, die Ihnen diese Eigenschaften bieten. Dafür können Sie Prozesse nutzen wie automatische Codierung und Einbettung. Wenn Sie Natural
Language Processing anwenden, ist Word2vec bereits vorhanden, und Sie können
verfügbare Wörterbücher nutzen. Das ist eine gängige Methode. Sie können diese Wörterbücher verwenden, um einen Text in Vektoren zu konvertieren. Sie müssen keine eigene Zuordnung für nicht numerische
und numerische Werte erstellen. Die gibt es bereits. Aber wenn nicht,
dann müssen Sie sie selbst erstellen.