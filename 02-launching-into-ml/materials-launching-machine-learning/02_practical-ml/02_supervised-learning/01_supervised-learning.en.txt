We discussed ML as a process and how Google has adopted several philosophical positions that have been crucial to our ML success. What we haven't done yet is dive into what ML is and how it works. That's what we'll do now. In this module, we'll cover supervised learning which is one branch of machine learning where you give the model labeled examples of what it should learn. A history of ML to survey the algorithms of the last 50 years and to understand why neural networks are so prominent at this moment. Let's start with supervised machine learning. Two of the most common classes of machine learning models are supervised and unsupervised ML models. The key difference is that with supervised models, we have labels or in other words, the correct answers to whatever it is that we want to learn to predict. In unsupervised learning, the data does not have labels. This graph is an example of the sort of problem that an unsupervised model might try to solve. Here, we want to look at tenure and income and then group or cluster employees to see whether someone is on the fast track. Critically, there is no ground truth here. Management doesn't, as far as we know, have a big table of people they are going to promote fast and those they are not going to promote. Consequently, unsupervised problems are all about discovery, about looking at the raw data and seeing if it naturally falls into groups. At first look, it seems that there are two distinct clusters or groups that I could separate nicely with a line. In this course though, we'll be focused on supervised machine learning problems, like this one. The critical difference is that with supervised learning, we have some notion of a label or one characteristic of each data point that we care a lot about. Typically, this is something we know about in historical data but we don't know in real time. We know other things which we call predictors and we want to use those predictors to predict the thing we don't know. For example, let's say you are the waiter in a restaurant. You have historical data of the bill amount and how much different people tipped. Now, you're looking at the group sitting at the corner table, you know what their total bill is but you don't know what their tip is going to be. In the historical data, the tip is a label. You create a model to predict the tip from the bill amount. Then, you try to predict the tip, in real time, based on the historical data and the values that you know for the specific table. Within supervise ML, there are two types of problems: regression and classification. To explain them, let's dive a little deeper into this data. In this data set of tips, an example data set that comes with a python package seaborn, each row has many characteristics, such as total bill, tip, and sex. In machine learning, we call each row an example. We'll choose one of the columns as the characteristic we want to predict, called the label, and we'll choose a set of the other columns which are called the features. In model option one, we want to protect the tip amount, therefore the column tip is my label. I can use one, all, or any number of columns as my features to predict the tip. This will be a regression model because tip is a continuous label. In model option two, we want to predict the sex of the customer, therefore the column sex is the label. Once again, I will use some set of the rest of the columns as my features to try and predict the customer sex. This will be a classification model because our label sex has a discrete number of values or classes. In summary, depending on the problem you're trying to solve, the data you have, explainability, etc will determine which machine learning models you use to find a solution. Your data isn't labelled, we won't be able to use supervised learning then and will have to resort to clustering algorithms to discover interesting properties of the data. Your data is labelled and the label is dog breed, which is a discrete quantity, since there are a finite number of dog breeds, we use a classification algorithm. If instead the label is dog weight, which is a continuous quantity, we should use a regression algorithm. The label again is the thing that you are trying to predict. In supervised learning, you have some data with the correct answers. Imagine you are in banking and you create an ML model for detecting if transactions are fraudulent or not. Is this classification or regression, and why? The correct answer is classification, categorical label. This is a binary classification problem because there are two possible classes for each transaction, fraudulent or not fraudulent. In practice, you may actually have a third class, uncertain. This way, depending on your classification threshold, it could send any cases that it can't firmly place into the fraudulent or not fraudulent buckets to a human to have a closer look. It is often good practice to have a human in the loop when performing machine learning. We can eliminate regression, categorical label, and classification continuous label because the model types have the opposite label type that they should. Regression and continuous label at least is a correct pairing. However, it is incorrect because this is a classification problem so we would not use regression. You could also create a regression model such as predicting the number of fraudulent transactions, fraudulent transaction amounts, etc.