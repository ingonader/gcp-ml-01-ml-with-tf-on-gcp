Nous avons parlé du ML comme processus,
et des positions philosophiques de Google qui ont été la pierre d'angle
du succès de notre ML. Mais nous n'avons pas encore vu
ce qu'était le machine learning et comme cela fonctionne.
Regardons cela maintenant. Dans ce module, nous allons
parler de l'apprentissage supervisé, qui est une branche du ML,
dans laquelle on donne au modèle des exemples étiquetés
de ce qu'il doit apprendre. Un historique du ML pour examiner
les algorithmes des 50 dernières années et comprendre pourquoi les réseaux
de neurones occupent une telle place. Commençons par l'apprentissage supervisé. Deux des classes les plus courantes des modèles de machine learning sont
les modèles supervisés et non supervisés. La principale différence est,
qu'avec les modèles supervisés, il y a des étiquettes ou, autrement dit, les bonnes réponses
à ce que l'on veut apprendre à prédire. Dans l'apprentissage non supervisé,
les données n'ont pas d'étiquettes. Ce graphique illustre
un exemple du type de problème qu'un modèle non supervisé
peut essayer de résoudre. Ici, nous voulons examiner
l'ancienneté et les revenus, puis grouper les employés pour voir
si l'un d'eux progresse rapidement. Il n'y a pas de "réalité de terrain" ici. La direction n'a pas,
à notre connaissance, un grand tableau contenant les personnes
qu'elle va promouvoir rapidement, et celles qu'elle ne va pas promouvoir. Ainsi, pour les problèmes non supervisés,
tout est question de découverte, il s'agit d'examiner les données brutes et de voir si elles peuvent
être naturellement regroupées. À première vue, il semblerait
qu'il y ait deux groupes distincts que je pourrais séparer par une ligne. Cependant, dans ce cours,
nous allons nous concentrer sur les problèmes d'apprentissage
supervisé, comme celui-ci. La principale différence est,
qu'avec le ML supervisé, il est question d'étiquettes
ou d'une caractéristique de chaque point de données
auquelle nous portons un grand intérêt. En général, c'est quelque chose
que nous apprenons grâce aux données historiques,
pas en temps réel. Nous connaissons aussi les "prédicteurs", et nous les utilisons
pour prédire ce que nous ne savons pas. Par exemple, imaginons
que vous êtes serveur dans un restaurant. Vous disposez des données historiques
sur le montant des pourboires. Vous observez le groupe
assis à la table dans l'angle, vous connaissez le montant de l'addition,
mais pas le montant de leur pourboire. Dans les données historiques,
le pourboire est une étiquette. Vous créez un modèle pour prédire
le pourboire à partir de l'addition. Puis, vous essayez de prédire le pourboire en temps réel et en fonction
des données historiques et des valeurs que vous connaissez
pour cette table. Au sein du ML supervisé,
il existe deux types de problèmes : la régression et la classification. Pour les expliquer, penchons-nous
plus avant sur ces données. Dans cet ensemble
de données de pourboires, un exemple d'ensemble de données
fourni avec un package Python Seaborn, chaque ligne présente
de nombreuses caractéristiques, telles que le montant de l'addition,
le montant du pourboire et le sexe. En ML, chaque ligne est un exemple. Nous choisissons l'une des colonnes
comme caractéristique à prédire, il s'agit de l'étiquette,
et nous choisissons un ensemble composé des autres colonnes.
Ce sont les caractéristiques. Dans le modèle "Option 1", nous voulons prédire
le montant du pourboire. La colonne "tip" est donc mon étiquette. Je peux utiliser
une colonne, toutes les colonnes, ou le nombre de colonnes de mon choix
comme caractéristiques pour ma prédiction. Il s'agit d'un modèle de régression,
car "tip" est une étiquette continue. Dans le modèle "Option 2", nous voulons prédire le sexe du client. La colonne "sex" est donc l'étiquette. Ici aussi, je vais utiliser
un ensemble de colonnes comme caractéristiques
pour prédire le sexe du client. Il s'agit d'un modèle de classification, car notre étiquette "sex" a
un nombre distinct de valeurs ou classes. Pour résumer, le problème à résoudre,
les données que vous possédez, l'explicabilité, etc. déterminent les modèles de ML à utiliser
pour trouver une solution. Si vos données n'ont pas d'étiquettes, nous ne pourrons pas
utiliser l'apprentissage supervisé. Nous devrons recourir
à des algorithmes de groupement pour trouver les propriétés
intéressantes des données. Si vos données ont une étiquette,
et que l'étiquette est la race de chien, une variable "discrète",
le nombre de races étant limité, nous utilisons
un algorithme de classification. Si l'étiquette est le poids des chiens, une variable "continue", nous devrons utiliser
un algorithme de régression. Je me répète, mais l'étiquette est
ce que vous essayez de prédire. En apprentissage supervisé, vous avez
des données avec les bonnes réponses. Imaginez que vous travaillez
dans le secteur bancaire, et que vous créez un modèle de ML
pour détecter les fraudes. S'agit-il de classification
ou de régression, et pourquoi ? La bonne réponse est "classification,
étiquette de catégorie". Il s'agit d'un problème
de classification binaire, car il existe deux classes possibles
pour chaque transaction, frauduleuse ou non frauduleuse. Dans la pratique, vous pouvez rencontrer
une troisième classe : incertain. Selon votre seuil de classification,
tout cas impossible à classer comme frauduleux ou non frauduleux
pourrait être envoyé à un humain pour que celui-ci l'examine. Il est souvent judicieux qu'un humain
intervienne dans un processus de ML. Nous pouvons éliminer la régression,
étiquette de classification, et la classification, étiquette continue, car ces modèles ont un type d'étiquette
contraire à celui qu'ils devraient avoir. La régression et l'étiquette continue
sont au moins une association correcte. Toutefois, c'est incorrect, car il s'agit
d'un problème de classification, et nous n'utiliserions
donc pas la régression. Vous pourriez aussi
créer un modèle de régression, pour prédire le nombre
de transactions frauduleuses, les montants
des transactions frauduleuses, etc.