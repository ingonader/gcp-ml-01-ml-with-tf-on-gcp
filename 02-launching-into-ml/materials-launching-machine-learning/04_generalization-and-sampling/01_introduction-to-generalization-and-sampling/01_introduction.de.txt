Ich bin Evan Jones, 
Technical Curriculum Developer bei Google Cloud
und Spezialist für Big Data. Die nächsten ML-Themen
sind Generalisierung und Sampling. In diesem Kurs haben wir
bisher ML-Modelltraining besprochen und Modelltraining innerhalb des
Tensor Flow-Playgrounds ausprobiert. Jetzt müssen wir
folgende Frage beantworten: In welchen Fällen ist das genaueste
ML-Modell nicht die richtige Wahl? Wie im letzten Modell 
zu Optimierung angedeutet: Nur weil ein Modell einen
Verlustwert von null für das Trainings-Dataset hat, funktioniert
es nicht unbedingt gut in der Praxis. Sie sollten beachten, dass das beste
ML-Modell nicht unbedingt das Modell ist, das am besten mit Ihrem 
Trainings-Dataset funktioniert, sondern das Modell, das am
besten mit unbekannten Daten arbeitet. Sie sollten sich auf die Leistung Ihres
Modells in der Produktion konzentrieren. Das schließt Daten ein, 
die Ihrem Modell noch unbekannt sind. Wie gut wird Ihr Modell also
mit unbekannten Daten umgehen? Zuerst benötigen Sie Daten,
die während des Trainings nicht im Modell angezeigt werden. Nachdem Sie das
Modell trainiert haben, können Sie es anhand dieses
ausgelagerten Datasets auswerten. Sie lernen zu prüfen, ob eine
Überanpassung des Modells vorliegt und zu welchem Zeitpunkt Sie
das Modelltraining beenden sollten. Im zweiten Teil des Moduls
geht es darum, wie Sie dieses unbekannte Dataset erstellen können. Natürlich haben Sie keine unbekannten
Daten, sondern ein Trainings-Dataset, das Sie jeweils in ein Trainings- und ein 
Auswertungs-Dataset aufteilen können. So testen und trainieren Sie 
Ihr Modell mit einem Dataset. Wenn es so weit ist, können
Sie die Leistung des Modells in der Praxis anhand eines
Auswertungs- oder Test-Datasets messen. So lernen Sie, wie man
wiederholbare Trainings,- Auswertungs- und Test-Datasets erstellt
und Leistungs-Benchmarks entwickelt.