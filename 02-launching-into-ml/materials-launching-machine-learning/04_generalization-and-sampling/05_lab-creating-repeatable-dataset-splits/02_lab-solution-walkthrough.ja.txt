では繰り返し可能な分割について
始めましょう このラボをまだご覧になっておらず 自分で試していない場合は
ぜひ試してみてください その後でこのソリューションの
ウォークスルー動画をご覧ください では始めましょう 最終的に行いたいのは 出発が遅れた飛行機の
到着時刻の遅れを予想することです それから空港と遅れの関係です たとえば到着空港と出発空港などです ニューヨークを出発するフライトが 30分遅れてロサンゼルスに向かっている場合 到着も同じように遅れるでしょうか？ またそのような関係を予測したいと思います この関係や関係のモデルにたどり着くために ご覧のような数式を使います Cloud Datalabのノートブックです 到着の遅延は 出発の遅延のα倍になります
αはパラメータです αを推定するために
この数式を使います ここでの目的は 出発の遅延の情報を入力して 到着が遅延するかどうかを予測することです ただし再モデル化の前に テスト用と評価用の環境を構築します そのために データセットが非常に大きいので Google BigQueryを使います Cloud Datalabから呼び出します 次に到着空港と出発空港のペアを
作成します これで 特定の空港や
特定の便に強い相関関係があるかや 予定時刻より遅れて出発した場合に
到着も遅れるかなどを確認できます このノートブックでは デンバーとロサンゼルスだけを見ていきます これらを念頭に このラボで何を行おうとしているかを
理解してください 繰り返し可能なデータセットのサンプルを
BigQuery内で作成します では最初にやってはいけないことを
確認しましょう こうしたコードや単純なランダムのサンプルを
同僚のノートブックで見かけたら こんなふうに指摘できます 「このコードを実行しても
講義と同じ結果にはならないかもしれないよ」 では最初は単純なランダム分割です ではこのコードを実行しましょう 私はすでに実行したのですが このαに強い相関があることに気付きました デンバーとロサンゼルスの間が0.97です このセルまでを実行します この係数を取得しましょう 最後の3桁は784です そしてこれを繰り返せるように まったく同じことをしたら どうなると思いますか？ 784になっていますか？
いえ919ですね 何も変えていないし トレーニングもまだ行っていません これは同じデータになるはずです コードの7行目を見てください このランダム関数を
分割フィールドとして選択しています 講義でも説明しましたが
これを実行するたびに ランダム関数が0から1の間の
別の数字を適用します その数字で分割するので
繰り返し可能になりません ではちょっと改善しましょう BigQuery内で行が実行されるたびに
このランダム関数が実行されます これをもう少し明確にしましょう これを損失の指標に使う場合 到着の遅延と出発の遅延の間の
平均二乗平方根誤差です これをトレーニング用と評価用の
別のデータセットに分割します これがすべてのレコードに対して
即座に実行されました この0.8未満のランダム関数を
このすべてに対して実行しました 同じRMSEが得られるか確認しましょう このコードセルを実行します RMSEはトレーニングで13.098
評価で13.027です 比較的一貫性がありますね では同じことをやって
再現できるか見てみましょう トレーニングでは13.098になる必要があります ご覧のように トレーニングでは 13.089になりました　さっきは98でしたね
それと13.063です この裏で起こっていることは まったく同じコードを実行しても RMSEは違う結果になります 多くの人がモニターに向かって
叫んでいるかもしれませんが 犯人はこのランダム関数です トレーニングと評価を
ランダムに分割してもうまくいきません そこでこう考えるかもしれません 「さて どうしたらいいんだろう？ トレーニングと評価の全データを
ランダム関数を1回使って設定して 80%と20%に分割した なのに変化し続けるのはなぜだろう？ 毎回ランダム関数が実行される以外の方法は
ないのだろうか？」 ここで考え方を完全に変える必要があります 別の例を見てみましょう ランダム関数によるトレーニングがあります これを最初に実行します 小さなサブクエリです トレーニング用と評価用に分割して
サブデータセットとして作成します 次にこれらのクエリを実行しますが
これを見てください また同じ問題が起こっています
RMSEが13.037です あなたの実行結果とは違うでしょう 評価用のRMSEです ここをクリックして
このセルまでを実行します このセルまで全部が再実行されます これが実行されたら 13.037になるのを期待しています 実行中です 13.087になりました αが違います さっきは確か0.977でした ご覧のように BigQueryのコード内のどこかで
ランダム関数を使って実行すると データが自動的に変わります ランダム関数を使用しない方法はないのでしょうか？ ランダム関数の代わりに 少し前にデモを行ったハッシュ関数を使います それをこれから紹介します ここでは ランダム関数の0.8未満を使う代わりに
WHERE節の内部で分割を実行します 今から使うのは 日付のハッシュです 日付は変わりません 日付はトレーニング用データセット内の日付です この余りを見て 特定のカテゴリに入るか確認します 今回は8未満をすべて取得して トレーニングバケットに入れます これは80%の分割です このデータをトレーニング用に使います 最初が 0.975ですね 最後を確認しましょう 403です このまま実行して どうなるか見てみましょう ここでようやく
もう一度403を取得しました これが繰り返し可能な方法です 直感的につじつまがあいますね このコードを実行している間に 内部で変わる関数はありません 今度はこれを使用して もう少しSQLを追加し
平均二乗平方根誤差を使います 平均二乗平方根誤差をSQLの代わりに使い 先ほど見たこの関数の平均を取ります そして平方根を取ると トレーニング用データセットが
13.16072になりました 13.16072はこれを実行するたびに得られる
毎回同じ結果です ここから何を学べるでしょうか 繰り返し可能なデータサンプルを作成するときは 単純なランダムサンプルではなく
必ずハッシュ関数を使うことです 最初に見た方法は
多少洗練されてはいますが トレーニング用と評価用のデータを
事前分割するのと同じ危険を伴います データを分割してサブセットを作成するときに
こんな疑問を持つかもしれません 「この方法で1回実行して その結果を
トレーニング用と評価用のテーブルに保存して すぐに使用すればいいんじゃないか？」 確かに 1回だけの実行ならいいでしょう
80-20にも分割できています でも 将来データが増えたらどうしますか？ 他の人が元のデータセットで
分析を繰り返したいときは？ 1回ハードコードでデータを
80-20に分割できたからと言って 同じことを繰り返せるわけではありません データセットが拡大縮小する場合や 80-20とは別の比率で分割したい場合は
なおさらです ですから より柔軟に
繰り返せるように データをバケット化し
ハッシュするためのフィールドを使います ここで見ましたね これが 機械学習モデルを
実行するのに必要な基礎となります 練習して慣れておいてください データバケットを作成することで
モデルのトレーニング、評価、 最後に本番で使用できるかのテストを
テストデータセットを使って行えるようにします 以上です 最後に もう少し資料を説明してから
まとめのラボに取り組みましょう タクシー料金を予測します
またお会いしましょう