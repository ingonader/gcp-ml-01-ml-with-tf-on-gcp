1
00:00:00,310 --> 00:00:02,620
Dans cet atelier,
vous allez découvrir l'impact

2
00:00:02,620 --> 00:00:05,525
de différentes façons de créer
des ensembles de données de ML.

3
00:00:05,845 --> 00:00:08,270
La reproductibilité est importante en ML.

4
00:00:08,510 --> 00:00:10,775
Imaginez que vous modifiez votre modèle,

5
00:00:10,775 --> 00:00:12,685
comme vos paramètres et hyperparamètres.

6
00:00:12,685 --> 00:00:17,100
Les données des entraînements
suivants changent aussi.

7
00:00:17,380 --> 00:00:20,905
Vous ne pouvez pas dire
si votre modèle est plus performant,

8
00:00:20,905 --> 00:00:24,035
en fonction des performances
des modèles plus performants,

9
00:00:24,035 --> 00:00:26,820
ou si l'instantané de données
utilisé pour cet entraînement

10
00:00:26,820 --> 00:00:29,010
était plus facile,
car les données changent.

11
00:00:29,010 --> 00:00:31,730
En utilisant les mêmes données
alors que le modèle change,

12
00:00:31,730 --> 00:00:33,445
vous pouvez ajuster votre modèle,

13
00:00:33,445 --> 00:00:34,715
puis l'exécuter à nouveau,

14
00:00:34,715 --> 00:00:37,290
avec le même ensemble de test.

15
00:00:38,020 --> 00:00:40,170
Dans cet atelier,
vous allez apprendre à créer

16
00:00:40,170 --> 00:00:42,815
et diviser des ensembles,
et à garantir leur constance.

17
00:00:43,135 --> 00:00:44,880
Essayez par vous-même.

18
00:00:45,380 --> 00:00:50,070
Les solutions des ateliers se trouvent
dans le dépôt du code dans GitHub.

19
00:00:50,480 --> 00:00:52,000
Tout est en Open Source,

20
00:00:52,000 --> 00:00:55,470
et vous aurez accès à ce dépôt
même après la fin du cours.

21
00:00:55,810 --> 00:00:58,615
Nous vous encourageons vivement,
comme j'aime à le dire,

22
00:00:58,615 --> 00:01:00,900
les bons artistes copient,
les grands volent.

23
00:01:00,900 --> 00:01:02,660
N'hésitez donc pas à utiliser ce code

24
00:01:02,660 --> 00:01:05,300
comme point de départ
de vos futurs projets de ML.

25
00:01:05,872 --> 00:01:09,872
Essayez cet atelier,
et revenez pour la solution.