Our goal in this next lab is to estimate taxi fare in New York City. Alright. So I've got to set expectations here. This is not going to be an easy problem. It's going to take us a long time and lots of learning on the models part, to get to the point where we can beat a simple benchmark with machine learning. What are going to have to do? Well first, we've got to get the data. We've got to understand it, clean it, pre-process it, and then everything you didn't the last lab, where you split it into repeatable segments, like training evaluation and testing, you're going to have to do again. Next, when we're ready for ML model building, you need to decide what ML model you're going to use to predict the cost of a cab ride. Finally, in order to beat our benchmark metric for model performance, we'll then need to fine tune and adjust the model to get the best results. Squeeze out those last bits of performance. Note that good benchmarking here is going to be absolutely critical. We're going to have to establish a baseline using a simple ML model that we'll then have to beat with our model with more advanced insights and tuning. Now a benchmark is like a simple algorithm. If I just asked you an RMSE of three dollars is that good or not? Well, you might not know. That's why having well-thought-out benchmarks is a critical step in ML performance and helps us determine whether or not our greatest model is good enough. What's a good benchmark for a taxi fare prediction? Perhaps you could compute say, the distance between the pickup point and the drop off point and multiply it by a constant, like cost per kilometer and cost per mile and then we're done. Alright. That seems like a reasonable benchmark. We'll do that and then we'll have to beat it with a better model. Exploring, creating those data sets and then benchmarking. Those are the three fundamental steps that you are going to take for any ML project they're going to take. And you're offering to spend a weeks just exploring the data set to gain that intuition and insight into the problem that you're trying to solve. You need to understand what the data is before you attempt to model it. Now this benchmarking phase should not be neglected. If you don't have a good benchmark, you don't know what is good performance or bad performance. And many times errors can be detected simply by realizing that your performance is nowhere near the benchmark. Go ahead and get started with this lab, check you work against the solution, and then come back we'll do a walkthrough together when you're ready. Good luck.