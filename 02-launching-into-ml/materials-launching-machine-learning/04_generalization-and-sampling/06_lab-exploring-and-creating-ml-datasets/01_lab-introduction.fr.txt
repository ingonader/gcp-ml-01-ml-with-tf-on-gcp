Notre objectif dans cet atelier est
d'estimer les frais de taxi à NYC. Il faut que je définisse les attentes. Ce problème ne va pas être facile. Cela va nous prendre beaucoup de temps,
et nous avons beaucoup à apprendre, pour arriver à dépasser
un simple benchmark avec le ML. Qu'allons-nous devoir faire ? Nous devons d'abord obtenir les données. Nous devons les comprendre,
les nettoyer, les prétraiter, et, tout le travail
du dernier atelier : diviser en segments reproductibles, entraînement, évaluation et test,
devra être refait. Ensuite, quand nous serons prêts
pour la création de modèles de ML, vous devrez choisir un modèle
pour prédire le coût d'une course en taxi. Enfin, pour dépasser notre benchmark
des performances du modèle, nous devrons ajuster le modèle
pour améliorer les résultats. Optimiser au mieux les performances. L'analyse comparative sera
absolument essentielle ici. Nous devrons créer une référence
avec un modèle de ML simple que nous devrons battre avec notre modèle, et des insights
et ajustements plus avancés. Un benchmark est
comme un algorithme simple. Si je vous demande une RMSE
de 3 dollars, est-ce bien ? Vous ne le savez peut-être pas. Il est donc essentiel d'avoir un benchmark
bien pensé pour les performances de ML. Cela aide à déterminer
si notre meilleur modèle est assez bon. Qu'est-ce qu'un bon benchmark
pour la prédiction de frais de taxi ? Vous pourriez calculer la distance entre le lieu de départ
et le lieu d'arrivée, et le multiplier par une constante, comme le coût par kilomètre ou mile,
et ce serait terminé. D'accord. Ce benchmark semble raisonnable. Nous ferons ça, et nous devrons
le battre avec un meilleur modèle. Explorer, créer ces ensembles de données,
puis faire des analyses comparatives. Ce sont les trois étapes de base que vous allez effectuer
pour tous vos projets de ML. Vous pouvez passer des semaines
à explorer les données, pour acquérir l'intuition
nécessaire à la résolution du problème. Vous devez comprendre les données
avant de les modéliser. L'analyse comparative
ne doit pas être négligée. Si le benchmark n'est pas bon, il n'est pas possible de distinguer
les bonnes des mauvaises performances. Et les erreurs sont souvent détectées quand on réalise que les performances
sont très éloignées du benchmark. C'est le moment
de commencer cet atelier, comparez votre travail à la solution, et revenez pour ma présentation
lorsque vous êtes prêt. Bonne chance !