Já vimos como
o gradiente descendente funciona. Vamos vê-lo em ação, usando uma ferramenta
que nos permite ver em tempo real muitos dos fenômenos que discutimos. O TensorFlow Playground é uma ferramenta
eficiente para ver as redes neurais em ação. Você deve estar pensando: "Ainda não vimos as redes neurais!". Não se preocupe.
Vamos apresentá-las em breve. Por motivos que também
explicaremos futuramente, as redes neurais mais simples equivalem
matematicamente aos modelos lineares. Por isso, essa ferramenta é adequada
para demonstrar o que aprendemos até agora. Vamos usá-la para verificar
de modo experimental os conceitos teóricos que apresentamos hoje para que você possa
corroborar as suas intuições de ML. Você verá na prática os efeitos de definir a taxa de aprendizado e como
os modelos de ML descem pelo gradiente. Também farei conexões com tópicos que serão explorados com mais
detalhes neste e nos próximos cursos. Primeiro, vamos falar sobre a interface. Removi alguns recursos da ferramenta porque estão relacionados a assuntos
que veremos mais tarde. Ainda assim há muitas
funções interessantes para mexer. Primeiro,
temos a coluna das características. Nela, estão as entradas que o modelo analisa. As cores em cada caixa representam
o valor de cada característica. Laranja significa negativo
e azul significa positivo. Em seguida, temos a coluna de
camadas ocultas, que é onde estão os pesos. Ao passar o mouse por uma linha de peso, 
aparecerá o valor desse peso. Durante o treinamento do modelo, a extensão e a opacidade dessas linhas mudam para termos uma noção dos
valores de maneira rápida e global. Em seguida, temos a coluna de saídas, onde estão os dados de treinamento e as previsões atuais dos modelos para todos
os pontos no espaço das características. Também podemos ver
a perda de treinamento atual. Assim como nas características,
a cor representa o valor. A barra de controle superior tem
botões para redefinir o treinamento, iniciar o treinamento
e dar um único passo. Também há uma lista suspensa
de taxa de aprendizado. A coluna de dados permite escolher o conjunto
de dados e controlar o tamanho do lote. Vamos começar treinando um modelo linear
para classificar alguns dados. Ao clicar neste link, aparecerá uma janela do
TensorFlow Playground apenas com o essencial. Não se preocupe
com as camadas ocultas por enquanto. Nessa configuração da ferramenta, o modelo aceita um vetor de característica, calcula o produto escalar
com um fator de peso e adiciona um termo de tendência. Depois, usa o sinal da soma
para construir o limite de decisão. Logo, podemos pensar nessa configuração
como um modelo linear. Começaremos com um modelo que tentará
classificar dados de dois clusters distintos. Clique no botão Step,
à direita do botão Play, e veja tudo o que muda na interface. O número de época aumenta em um, as linhas que representam os pesos
mudam de cor e tamanho, o valor atual da função de perda muda, o gráfico de perda mostra
uma inclinação para baixo e o limite de decisão na saída também muda. Passe o mouse sobre a
linha que representa o peso 1 e você verá o valor do peso. Clique no botão Play para
continuar o treinamento, mas pause assim que
a perda diminuir abaixo de 0,002, o que deve ocorrer antes de 200 épocas. Parabéns! 
Você acabou de treinar seu primeiro modelo. Agora, vamos aumentar a complexidade. Vamos ver como três taxas de aprendizado
diferentes afetam o modelo no treinamento. Lembre-se de que
a taxa de aprendizado é o hiperparâmetro, que é definido antes
do início do treinamento do modelo e é multiplicado pela derivada para determinar o quanto os pesos
mudam em cada iteração do loop. Acesse o link para começar a treinar um
modelo com taxa de aprendizado muito pequena. Aguarde até que
a perda atinja cerca de 100 épocas, o que deve ocorrer após dois segundos, e pause o modelo. Qual é a perda de treinamento atual? E quais foram os pesos aprendidos? Aumente a taxa de aprendizado
para 0,001, reinicie o treinamento e pare novamente em torno de 100 épocas. Qual é a perda? Ela deve ser
significativamente menor dessa vez. Veja também o valor do peso 1. Agora, aumente a taxa de aprendizado para 0,1, reinicie o treinamento do modelo e treine por 100 épocas. A que velocidade
a curva de perda caiu dessa vez? Deve ter sido muito rápido. Vamos juntar essas observações e tentar explicá-las com base no
que aprendemos sobre otimização. Agora, aumente a taxa de aprendizado para 10, reinicie o treinamento do modelo e dê um único passo usando o botão Step. Observe o valor do peso. Continue treinando até chegar em 100 épocas. A que velocidade
a curva de perda caiu dessa vez? Ela deve ter caído de maneira brusca. Vamos juntar essas observações e tentar explicá-las com base no
que aprendemos sobre otimização. Aqui temos uma tabela
com os resultados que consegui. Não tem problema
se seus resultados forem um pouco diferentes. Talvez eles sejam diferentes dos meus pelo mesmo motivo que eles serão diferentes
se você realizar o treinamento novamente. O TensorFlow Playground
inicializa os pesos aleatoriamente. Isso significa que a pesquisa começa
cada vez em uma posição aleatória. Vamos falar sobre a coluna do peso 1. Veja como o valor dos pesos aumenta
conforme a taxa de aprendizado sobe. Por que isso acontece? Porque o modelo está dando passos maiores. De fato,
quando a taxa de aprendizado mudou para 10, o primeiro passo alterou
os pesos substancialmente. Vamos falar sobre a coluna
de perda ao longo do tempo. Conforme a taxa de aprendizado
foi aumentando, a curva de perda
foi ficando mais íngreme. É o mesmo efeito que observamos antes,
mas por uma perspectiva diferente.