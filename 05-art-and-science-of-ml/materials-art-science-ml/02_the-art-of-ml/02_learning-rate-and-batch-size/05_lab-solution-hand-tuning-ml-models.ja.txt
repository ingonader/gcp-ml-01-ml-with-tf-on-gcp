このラボでは手動で
ハイパーパラメータを調整しました 結果を復習しましょう 簡単な線形回帰を実行して
住宅の部屋数に基づいて住宅価格を予測します RMSEで モデルの正確性を判断し 学習率とバッチサイズを調整して
RMSEを改善します このラボに使用したデータは 1990年の
カリフォルニア州国勢調査に基づいています ここでPython Notebookに注目します 最初は複数のライブラリを
ロードしているだけです 警告が表示されますが無視してかまいません 実行しているバージョンによっては
警告は出ません 次にこのパブリックURLからデータセットを
PandasのDataFrameにロードします そしてデータの複数のレコードと統計を見て
データを分析します このデータセットには1つ問題があります 粒度が世帯レベルではなく
街区レベルであることです 使用する前に修正する必要があります そのため何ができますか 街区レベルの部屋の総数に基づいて
新しいデータ列を作成するだけです それを同じく街区レベルの世帯数で割ります そうすると大まかな世帯あたりの
部屋数が得られます それをdescribeすると
このように統計が得られます モデルのトレーニングに入る前に
データセットを見てみましょう 目的を思い出してください これが今 既存の2つの列を
分割して作成した部屋数の列です これが特徴となります つまり モデルへの入力です そしてモデルでは
住宅築年数の中央値を予測します つまり この列はラベルを構成します このセルでは 実際にトレーニング開始に
必要なものを定義します トレーニング関数、入力関数は
データフレームの関数です 部屋数が特徴 住宅築年数中央値がラベルです ここでは出力ディレクトリを定義しています また 常に出力ディレクトリの内容を削除して
ゼロから始めるようにします 前述したようにこれは線形回帰になります それがここです TensorFlowライブラリの線形回帰を使用し 特徴と出力ディレクトリを
そのestimatorに送り ここでトレーニングを開始します すでに述べたように RMSEに着目して
モデルのパフォーマンスを判断します それがここで行われます このセルを実行すると RMSEに対して
非常に大きな数値が報告されますが これはおかしいですね RMSEはそんなに大きな値ではなく
数百単位のはずだからです ここで起きているのはスケーリングです 10万スケールで報告されているので
そのスケールの適用が必要です そうするとRMSEを
適切なスケールで見ることができます これを次のセルで行っています y値を説明したスケールで除算します 残りは同じです ここでそれを実行すると 誤差率7.4%になります 最初にしては悪くありませんが
改善できるはずです 次のセルで改善していきます 学習率とバッチサイズを変更して 誤差率がどう改善するかを見てみましょう スケールは変わりません ここでバッチサイズを10に定義します 常に 出力ディレクトリを削除して
ゼロから始めます 学習率は0.01にします ここでも線形回帰です コードの残りは変わりません 違うのは バッチサイズが小さいので
ステップ数を増やす必要があることです それがここです 次にRMSEを印字して結果を見ましょう 学習率とバッチサイズを
変える前の誤差率は7.4でした 少し変更すると3.6に低下しました 最高のパフォーマンスを得られるように
ハイパーパラメータを調整してみましょう 私が前回調整してみたところ
2.528という結果になりました このラボで扱う内容はほとんど終わりました よくある質問のひとつは 「こうしたパラメータを調整する
標準的な方法があるか」です 簡単に言えば 異なるハイパーパラメータの効果はデータに
依存するため明確なルールはありません 自分のデータでのテストが必要です ただ 指針となりうる
いくつかの経験則があります トレーニングの誤差をモニタリングすると
次第に低下するはずです 通常は最初急激に低下します そしてトレーニングが収束するにつれて
最終的にプラトーに至ります トレーニングが収束しない場合
もっと長く実行してみてください トレーニング誤差の低下が遅すぎる場合 学習率を上げると
低下が早くなる場合があります ただし 学習率が高すぎると
逆効果になる場合があります トレーニング誤差が大きく異なる場合
学習率を低下させてみてください 学習率を低くし ステップ数かバッチサイズを
上げると 良い組み合わせとなる場合が多いです バッチサイズが小さすぎると
不安定になることもあります 最初に100や1,000などの大きな値で試し 低下が見られるまで値を小さくしていきます この経験則を厳密に適用しないでください
効果はデータに依存します 常に試して 検証してください このラボの補足として
特徴を追加して結果を見てください そんなに長い時間はかかりません 5分から10分ぐらいでしょう さらに多くの特徴を追加して
モデルの動作を確認できます