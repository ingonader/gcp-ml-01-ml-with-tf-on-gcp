1
00:00:00,420 --> 00:00:03,800
Neste laboratório, testamos o
ajuste manual de hiperparâmetros.

2
00:00:03,800 --> 00:00:05,610
Vamos analisar os resultados.

3
00:00:05,650 --> 00:00:08,270
Estamos fazendo uma regressão
linear simples para prever

4
00:00:08,270 --> 00:00:11,740
o preço de casas com base
no número de quartos.

5
00:00:12,750 --> 00:00:16,895
Julgaremos a precisão do
modelo com base no RMSE

6
00:00:16,895 --> 00:00:21,455
e ajustaremos a taxa de aprendizado
e o tamanho do lote para melhorá-lo.

7
00:00:21,965 --> 00:00:26,980
Os dados usados neste laboratório
são do censo de 1990 da Califórnia.

8
00:00:28,250 --> 00:00:33,090
Se você vir o bloco
de notas do Python,

9
00:00:33,090 --> 00:00:36,360
só estou carregando algumas
bibliotecas, nada demais.

10
00:00:36,360 --> 00:00:40,080
Recebi um aviso
que pode ser ignorado.

11
00:00:40,080 --> 00:00:43,820
Você pode não receber,
dependendo da versão usada.

12
00:00:43,820 --> 00:00:49,005
Depois, carrego meu conjunto
de dados deste URL público

13
00:00:50,255 --> 00:00:53,000
para um DataFrame do Pandas

14
00:00:54,010 --> 00:00:57,820
e examino os dados
olhando alguns registros

15
00:01:00,490 --> 00:01:02,760
e estatísticas dos dados.

16
00:01:05,770 --> 00:01:08,680
Um problema deste
conjunto de dados é que

17
00:01:08,680 --> 00:01:11,955
ele está no nível de granularidade
de blocos de cidade,

18
00:01:11,955 --> 00:01:13,500
não no nível das casas.

19
00:01:13,500 --> 00:01:16,610
Precisamos corrigir
isso antes de usar.

20
00:01:16,610 --> 00:01:18,250
Para fazer isso,

21
00:01:18,250 --> 00:01:22,640
basta criar uma nova coluna de
dados com base no número total

22
00:01:22,640 --> 00:01:27,335
de quartos que temos no nível do
bloco dividido pelo número de casas,

23
00:01:27,335 --> 00:01:29,090
também no nível de bloco,

24
00:01:29,090 --> 00:01:34,145
o que nos dá um valor aproximado
do número de quartos por casa.

25
00:01:34,145 --> 00:01:36,395
Se eu descrever isso,

26
00:01:36,395 --> 00:01:40,800
receberia estas estatísticas.

27
00:01:40,800 --> 00:01:43,710
Antes de passar para
o treinamento do modelo,

28
00:01:43,710 --> 00:01:45,935
vamos ver nosso
conjunto de dados

29
00:01:45,935 --> 00:01:48,160
e lembrar o que
estamos fazendo.

30
00:01:48,160 --> 00:01:51,370
Esta é a coluna que
acabamos de criar

31
00:01:51,370 --> 00:01:54,850
dividindo as duas colunas
existentes, num_rooms.

32
00:01:54,850 --> 00:01:56,455
Esse será nosso recurso.

33
00:01:56,455 --> 00:01:58,890
É basicamente a entrada
do nosso modelo.

34
00:01:58,890 --> 00:02:04,120
Nosso modelo prevê
o valor médio das casas.

35
00:02:04,120 --> 00:02:08,050
Esta coluna cria
o rótulo para nós.

36
00:02:11,040 --> 00:02:15,925
Nesta célula, defino o que
o treinamento precisa.

37
00:02:16,325 --> 00:02:20,180
A função do treinamento,
a função de entrada,

38
00:02:20,180 --> 00:02:23,810
vem do DataFrame.

39
00:02:26,690 --> 00:02:30,400
O número de quartos
é o recurso

40
00:02:30,400 --> 00:02:34,200
e o valor médio
da casa é o rótulo.

41
00:02:37,760 --> 00:02:40,700
Aqui, eu defino
o diretório de saída

42
00:02:40,700 --> 00:02:45,050
e garanto que ele
sempre comece do zero

43
00:02:45,050 --> 00:02:48,160
removendo o conteúdo
desse diretório.

44
00:02:49,270 --> 00:02:52,204
Mencionamos que seria
um regressor linear,

45
00:02:52,204 --> 00:02:53,850
então é isso
que estou fazendo.

46
00:02:53,850 --> 00:02:56,840
Estou usando o regressor linear
da biblioteca do TensorFlow

47
00:02:56,840 --> 00:03:01,475
e transmitindo o recurso e o
diretório de saída para o estimador.

48
00:03:01,475 --> 00:03:03,605
Em seguida,
começo o treinamento.

49
00:03:03,605 --> 00:03:05,570
Como mencionei, vou julgar

50
00:03:05,570 --> 00:03:09,080
o desempenho do
modelo pelo RMSE.

51
00:03:09,080 --> 00:03:10,855
É isso que está
acontecendo aqui.

52
00:03:12,055 --> 00:03:14,080
Se eu executar a célula,

53
00:03:17,650 --> 00:03:23,080
vejo que há um número grande
informado para o RMSE.

54
00:03:23,080 --> 00:03:28,330
Isso é insano, porque o RMSE
deveria estar nas centenas,

55
00:03:28,330 --> 00:03:31,980
não em um número
gigante assim.

56
00:03:31,980 --> 00:03:33,550
O que está acontecendo aqui

57
00:03:33,550 --> 00:03:35,080
é que há um escalonamento.

58
00:03:35,080 --> 00:03:37,850
Isso é informado
na escala de 100 mil,

59
00:03:37,850 --> 00:03:39,410
precisamos aplicar essa escala

60
00:03:39,410 --> 00:03:43,925
para ver o valor
adequado do RMSE.

61
00:03:43,925 --> 00:03:46,345
Farei isso no Excel.

62
00:03:47,325 --> 00:03:52,830
Basta dividir o valor de Y
com base na escala mencionada,

63
00:03:52,830 --> 00:03:54,910
o restante permanece igual.

64
00:03:55,810 --> 00:03:57,820
Se eu executar agora,

65
00:03:58,570 --> 00:04:03,635
recebo uma taxa
de erro de 7,4%.

66
00:04:03,635 --> 00:04:06,430
Não é ruim para o começo,

67
00:04:06,430 --> 00:04:08,245
mas podemos melhorar.

68
00:04:08,245 --> 00:04:10,250
É isso que acontece
na próxima célula.

69
00:04:10,250 --> 00:04:13,380
Vou alterar a taxa de aprendizado
e o tamanho do lote para ver

70
00:04:13,380 --> 00:04:16,830
a alteração na taxa de erro.

71
00:04:18,000 --> 00:04:20,490
Da mesma maneira,
a escala permanece igual.

72
00:04:20,490 --> 00:04:23,325
Agora, defino
um tamanho de lote

73
00:04:23,325 --> 00:04:24,910
de 10.

74
00:04:26,530 --> 00:04:29,055
Da mesma maneira,
começaremos do zero.

75
00:04:29,055 --> 00:04:31,534
Sempre removemos
o diretório de saída.

76
00:04:31,534 --> 00:04:36,360
Incluímos uma taxa
de aprendizado de 0,01.

77
00:04:38,220 --> 00:04:40,080
Novamente é
um regressor linear.

78
00:04:40,080 --> 00:04:43,370
o restante permanece igual.

79
00:04:43,800 --> 00:04:46,280
A única diferença aqui é que

80
00:04:46,280 --> 00:04:48,050
como temos um tamanho
de lote menor,

81
00:04:48,050 --> 00:04:51,170
precisamos de mais etapas,

82
00:04:51,170 --> 00:04:52,865
é isso que está acontecendo.

83
00:04:53,095 --> 00:04:56,860
Depois, mostramos o RMSE
para ver o que aconteceu.

84
00:05:02,520 --> 00:05:06,950
Lembre-se, antes de alterar a taxa
de aprendizado e o tamanho do lote,

85
00:05:06,950 --> 00:05:09,245
estávamos em 7,4.

86
00:05:09,245 --> 00:05:12,185
Com essa pequena mudança,

87
00:05:12,185 --> 00:05:14,800
fomos para 3,6.

88
00:05:15,370 --> 00:05:20,165
Faça testes com esses hiperparâmetros
para ter o melhor desempenho possível.

89
00:05:20,165 --> 00:05:24,870
Na última vez que
tentei, consegui 2,528.

90
00:05:27,340 --> 00:05:32,030
É isso que eu queria
dizer neste laboratório.

91
00:05:32,030 --> 00:05:36,795
Uma pergunta frequente é

92
00:05:36,795 --> 00:05:41,970
se há um método padrão
para ajustar esses parâmetros.

93
00:05:41,970 --> 00:05:43,630
A resposta curta é:

94
00:05:43,630 --> 00:05:46,605
o efeito de hiperparâmetros
depende dos dados,

95
00:05:46,605 --> 00:05:48,695
então não há atalhos.

96
00:05:48,695 --> 00:05:51,120
Você precisa fazer o
teste nos seus dados.

97
00:05:51,660 --> 00:05:54,930
Há algumas diretrizes que
podem ajudar a guiar você.

98
00:05:55,890 --> 00:05:58,000
Quando você monitora
o erro de treinamento,

99
00:05:58,000 --> 00:05:59,670
ele deve diminuir
constantemente.

100
00:06:00,860 --> 00:06:03,830
Geralmente, é rápido no começo

101
00:06:03,830 --> 00:06:08,210
e depois estabiliza conforme
o treinamento converge.

102
00:06:08,210 --> 00:06:10,145
Se o treinamento
não convergir,

103
00:06:10,145 --> 00:06:12,065
tente executar por mais tempo.

104
00:06:12,065 --> 00:06:15,350
Se a queda do erro de
treinamento demorar muito,

105
00:06:15,350 --> 00:06:19,160
aumentar a taxa de
aprendizado por ajudar.

106
00:06:19,600 --> 00:06:23,885
Mas, às vezes, pode ocorrer o
oposto se a taxa for alta demais.

107
00:06:25,085 --> 00:06:27,360
Se o erro de treinamento
variar muito,

108
00:06:27,360 --> 00:06:29,220
tente reduzir a
taxa de aprendizado.

109
00:06:29,220 --> 00:06:32,700
Essa redução, mais o
número grande de etapas ou

110
00:06:32,700 --> 00:06:36,185
um tamanho de lote maior
geralmente são uma boa combinação.

111
00:06:36,855 --> 00:06:41,185
Lotes muito pequenos também
podem causar instabilidade.

112
00:06:41,905 --> 00:06:43,530
Teste primeiro valores maiores,

113
00:06:43,530 --> 00:06:47,920
como 100 ou mil,
e diminua até ver a queda.

114
00:06:48,850 --> 00:06:54,170
Nunca siga estas diretrizes estritamente,
porque os efeitos dependem dos dados.

115
00:06:54,170 --> 00:06:56,380
Faça testes e
verifique os resultados.

116
00:06:58,630 --> 00:07:00,210
Como um bônus,

117
00:07:00,210 --> 00:07:04,425
você pode adicionar mais
recursos e ver os resultados.

118
00:07:04,425 --> 00:07:06,800
Não deve demorar muito.

119
00:07:06,800 --> 00:07:08,640
Entre cinco e 10 minutos,

120
00:07:08,640 --> 00:07:14,880
você poderá adicionar recursos
e ver o desempenho do modelo.