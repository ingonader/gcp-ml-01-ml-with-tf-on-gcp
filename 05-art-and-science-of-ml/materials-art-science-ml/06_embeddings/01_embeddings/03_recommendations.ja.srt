1
00:00:00,000 --> 00:00:01,880
前のコースでは

2
00:00:01,880 --> 00:00:05,670
特徴クロスの観点から
埋め込みを見てきましたが

3
00:00:05,670 --> 00:00:09,765
埋め込みはあらゆるカテゴリ列で有用です

4
00:00:09,765 --> 00:00:14,385
例として埋め込みを
別の観点から見てみましょう

5
00:00:14,385 --> 00:00:19,260
たとえば顧客に映画を
おすすめするとします

6
00:00:19,260 --> 00:00:25,155
自分の企業は100万人のユーザーと
50万の映画を抱えています

7
00:00:25,155 --> 00:00:27,245
ちなみにこれは小さい数字です

8
00:00:27,245 --> 00:00:31,950
YouTubeと他8つのGoogleサービスでは
10億人のユーザーを抱えています

9
00:00:31,950 --> 00:00:37,500
そしてそれぞれのユーザーに
5～10件の映画をおすすめするとします

10
00:00:37,500 --> 00:00:42,015
誰もが気に入る映画を
選ばなければなりません

11
00:00:42,015 --> 00:00:46,490
100万人のユーザーに対して
それぞれ個別に

12
00:00:46,490 --> 00:00:51,955
50万の映画の中から
5～10作品ずつを選ぶのです

13
00:00:51,955 --> 00:00:54,985
自社の入力データセットは

14
00:00:54,985 --> 00:00:58,875
マトリックスで表した場合

15
00:00:58,875 --> 00:01:03,485
100万の行と50万の列が
あることになります

16
00:01:03,485 --> 00:01:10,735
図の中の数値は顧客が見て
評価した映画の数を表しています

17
00:01:10,735 --> 00:01:15,200
このマトリックスの残りの部分を
知る必要があるわけですが

18
00:01:15,200 --> 00:01:17,130
この問題を解決するには

19
00:01:17,130 --> 00:01:21,875
似たような映画を見極める
方法が必要になります

20
00:01:21,875 --> 00:01:30,065
1つのアプローチは映画の属性を利用して
映画を類似性で分類することです

21
00:01:30,065 --> 00:01:33,660
たとえば観客の平均年齢を基準に

22
00:01:33,660 --> 00:01:37,450
映画を並べてみることができます

23
00:01:37,450 --> 00:01:42,465
漫画やアニメの映画は左側に表示され

24
00:01:42,465 --> 00:01:47,590
より暗い大人向けの映画は
右側に表示されています

25
00:01:47,590 --> 00:01:51,370
たとえば『Mr.インクレディブル』が
好きなユーザーなら

26
00:01:51,370 --> 00:01:55,440
おそらく子供か
または小さい子供がいると思われますから

27
00:01:55,440 --> 00:01:58,975
『シュレック』をおすすめできます

28
00:01:58,975 --> 00:02:04,455
しかし『ブルー』や『メメント』は
アートシアター系映画で

29
00:02:04,455 --> 00:02:07,960
一方『スターウォーズ』や
『ダークナイトライジング』は

30
00:02:07,960 --> 00:02:10,260
いずれも大ヒット作です

31
00:02:10,260 --> 00:02:13,125
『ブルー』が好きな人なら

32
00:02:13,125 --> 00:02:18,430
おそらくバットマン映画より
『メメント』が気にいるでしょう

33
00:02:18,430 --> 00:02:23,080
同様に『スターウォーズ』が
好きな人の場合は

34
00:02:23,080 --> 00:02:28,405
アートシアター系より
『ダークナイトライジング』を好むでしょう

35
00:02:28,405 --> 00:02:31,335
この問題に対処するため

36
00:02:31,335 --> 00:02:34,985
2番目の次元を
追加してみましょう

37
00:02:34,985 --> 00:02:39,780
たとえば2番目の次元は
その映画が公開されたときに

38
00:02:39,780 --> 00:02:44,030
映画館で売れたチケットの総数とします

39
00:02:44,030 --> 00:02:50,225
ここでは『スターウォーズ』と
『ダークナイトライジング』が近くなっています

40
00:02:50,225 --> 00:02:53,480
『ブルー』と『メメント』も
近いですね

41
00:02:53,480 --> 00:02:57,290
また『シュレック』と
『Mr.インクレディブル』も近いです

42
00:02:57,290 --> 00:03:01,950
『ハリー・ポッター』はアニメ映画と
『スターウォーズ』の中間で

43
00:03:01,950 --> 00:03:06,630
子供だけでなく大人も見ますし
これも大ヒット作です

44
00:03:06,630 --> 00:03:10,750
こうして2番目の次元を追加することで

45
00:03:10,750 --> 00:03:15,085
おすすめによい作品同士が
近くにまとまりました

46
00:03:15,085 --> 00:03:19,740
このほうが直感に
ずっと適合していますね

47
00:03:19,740 --> 00:03:24,110
もちろん次元は２つだけでなく
もっと作成できます

48
00:03:24,110 --> 00:03:26,525
さらに多くの次元を追加すれば

49
00:03:26,525 --> 00:03:30,075
いっそう細かい区別が可能になります

50
00:03:30,075 --> 00:03:35,370
そうした細かい区別によって
より適切におすすめできることもありますが

51
00:03:35,370 --> 00:03:39,180
必ずしもそうならないこともあります

52
00:03:39,180 --> 00:03:43,635
過学習の危険性は
常に存在します

53
00:03:43,635 --> 00:03:48,550
ポイントはこの情報に
Nの次元が含まれるということです

54
00:03:48,550 --> 00:03:52,520
この映画の例における
Nとは何でしょうか

55
00:03:52,520 --> 00:03:54,540
50万ですよね

56
00:03:54,540 --> 00:03:57,730
映画のIDはカテゴリ特徴であり

57
00:03:57,730 --> 00:04:01,220
通常はワンホットエンコーディングされます

58
00:04:01,220 --> 00:04:04,260
ですからNは50万です

59
00:04:04,260 --> 00:04:08,770
この例ではすべての映画を
2次元空間で表したので

60
00:04:08,770 --> 00:04:10,710
d＝2となります

61
00:04:10,710 --> 00:04:15,335
要点はdがNよりも
はるかに小さいということです

62
00:04:15,335 --> 00:04:22,496
ユーザーの映画への関心は
dの要素で表せることが前提となっています

63
00:04:22,496 --> 00:04:28,911
ユーザーの映画への関心を表すのに
多数の要素を用いる必要はありません