1
00:00:00,000 --> 00:00:07,115
前のコースでは特徴クロスとともに
埋め込みについて簡単に学習しましたが

2
00:00:07,115 --> 00:00:10,930
埋め込みは近代的な機械学習の
至るところで利用されており

3
00:00:10,930 --> 00:00:15,950
特徴クロスや
構造化データばかりではありません

4
00:00:15,950 --> 00:00:22,390
埋め込みは画像モデルやテキストモデルでも
頻繁に利用されています

5
00:00:22,390 --> 00:00:28,105
では埋め込みについて
簡単に復習してみましょう

6
00:00:28,105 --> 00:00:29,500
まず一例として

7
00:00:29,500 --> 00:00:34,080
交通関連の予測を行う
機械学習モデルを作成しました

8
00:00:34,080 --> 00:00:38,010
たとえば次の車が
交差点に着くまでの間の

9
00:00:38,010 --> 00:00:42,690
さまざまな情報をモデルに
入力するとします

10
00:00:42,690 --> 00:00:48,675
特に時刻や曜日などという
カテゴリ情報に注目します

11
00:00:48,675 --> 00:00:53,575
ここで時刻や曜日を
単独の情報として扱わず

12
00:00:53,575 --> 00:00:58,635
連結して特徴クロスを
作成すると

13
00:00:58,635 --> 00:01:03,430
機械学習モデルは大幅に
改善されると説明しました

14
00:01:03,430 --> 00:01:09,145
この特徴クロスの際に
多数のハッシュバケットを使用すれば

15
00:01:09,145 --> 00:01:11,970
それぞれのバケットにはおそらく

16
00:01:11,970 --> 00:01:18,680
時刻と曜日の組み合わせが1つだけ
含まれることになります

17
00:01:18,680 --> 00:01:22,800
ここで埋め込みの概念を
紹介しました

18
00:01:22,800 --> 00:01:27,710
特徴クロスを
ワンホットエンコードして

19
00:01:27,710 --> 00:01:30,720
そのまま利用する代わりに

20
00:01:30,720 --> 00:01:37,715
結合層に渡して交通を予測するよう
モデルをトレーニングします

21
00:01:37,715 --> 00:01:44,827
この黄色と緑のノードで示された結合層で
埋め込みが作成されます

22
00:01:44,827 --> 00:01:48,230
埋め込みは実数値になります

23
00:01:48,230 --> 00:01:53,375
特徴クロスの値の
加重和だからです

24
00:01:53,375 --> 00:01:56,050
ここで重要なのは

25
00:01:56,050 --> 00:02:01,550
この黄色と緑のノードで示された
埋め込み層に加わる重みが

26
00:02:01,550 --> 00:02:05,900
データから学習されるということです

27
00:02:05,900 --> 00:02:09,810
要点はこうした重みを
データセットでトレーニングして

28
00:02:09,810 --> 00:02:15,704
現実的な問題を解決すると
非常に有効だということです

29
00:02:15,724 --> 00:02:19,510
曜日と時間の
特徴クロスには

30
00:02:19,510 --> 00:02:22,530
68の固有値が含まれますが

31
00:02:22,530 --> 00:02:28,535
ここではそれらをたった2つの
実数値で表しているのです

32
00:02:28,535 --> 00:02:36,885
このモデルは特徴クロスを
低次元領域に埋め込む方法を学習します

33
00:02:36,885 --> 00:02:41,950
この緑のボックスはおそらく
歩行者の通行をとらえており

34
00:02:41,950 --> 00:02:46,880
黄色のほうは自動車の通行を
表すと考えられますが

35
00:02:46,880 --> 00:02:51,800
これらが厳密に何をとらえているかは
問題ではありません

36
00:02:51,800 --> 00:02:57,060
重要なのはその時刻や曜日における
街中の交差点での

37
00:02:57,060 --> 00:03:00,910
交通に関連するすべての情報が

38
00:03:00,910 --> 00:03:06,229
たった2つの数値に凝縮されている
ということです

39
00:03:06,229 --> 00:03:10,785
これを大規模で高品質な
データセットに対して行えば

40
00:03:10,785 --> 00:03:16,355
これらの数値は1つの
非常に有用な特性を持つことになります

41
00:03:16,355 --> 00:03:20,145
交通状態が似ている時間に対しては

42
00:03:20,145 --> 00:03:23,620
近似した実数値が与えられ

43
00:03:23,620 --> 00:03:30,870
交通状態が異なる時間に対しては
異なる実数値が与えられます

44
00:03:30,870 --> 00:03:35,225
次にTensorFlowでの埋め込みの
作成方法を紹介しました

45
00:03:35,225 --> 00:03:37,620
埋め込みを作成するには

46
00:03:37,620 --> 00:03:41,070
tf.feature列で埋め込み列の
メソッドを使用して

47
00:03:41,070 --> 00:03:45,590
埋め込むカテゴリの列を渡します

48
00:03:45,590 --> 00:03:49,095
これは特徴クロスだけでなく

49
00:03:49,095 --> 00:03:52,270
あらゆるカテゴリ列に使用できます

50
00:03:52,270 --> 00:03:57,075
あらゆるカテゴリ列を
埋め込めるのです

51
00:03:57,075 --> 00:04:03,230
そして最後に
ある問題で学習した埋め込みを

52
00:04:03,230 --> 00:04:09,890
別の類似した機械学習の問題に
適用する方法を簡単に説明しました

53
00:04:09,890 --> 00:04:13,965
たとえばロンドンの
交通データを利用して

54
00:04:13,965 --> 00:04:19,185
時刻や曜日を2つの実数値で
表す方法を学んだなら

55
00:04:19,185 --> 00:04:26,610
同じ重みを簡単に別の都市にも
適用してみることができます

56
00:04:26,610 --> 00:04:30,560
また 交通の問題で学習した
埋め込みを利用して

57
00:04:30,560 --> 00:04:34,685
TV番組の視聴率を
予測することもできます

58
00:04:34,685 --> 00:04:38,630
これは道路の交通量と
TV番組の視聴率が

59
00:04:38,630 --> 00:04:43,505
いずれも同じ潜在的因子に
依存しているからです

60
00:04:43,505 --> 00:04:50,065
つまり人々が移動中か
家庭と職場のどちらにいるかということです

61
00:04:50,065 --> 00:04:55,719
一見まったく異なる問題でも
同じ潜在的因子を共有していれば

62
00:04:55,719 --> 00:05:00,270
転移学習を利用できることがあります