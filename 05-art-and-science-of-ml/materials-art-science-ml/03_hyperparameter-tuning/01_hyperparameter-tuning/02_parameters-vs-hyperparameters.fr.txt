Vous reconnaissez sûrement ce schéma. Vous l'avez déjà vu dans le deuxième
cours sur la mise en pratique du ML. On avait vu que les modèles de ML
étaient des fonctions mathématiques avec des paramètres
et des hyperparamètres. Un paramètre est une variable à valeur réelle
qui change pendant l'entraînement du modèle, comme tous ces biais et bases que
vous connaissez bien à présent. Un hyperparamètre est un élément
défini avant l'entraînement, qui ne change pas après, par exemple, le taux d'apprentissage, le taux
de régularisation, la taille des lots, le nombre de couches cachées et le nombre
de neurones dans chaque couche du réseau. Maintenant que vous faites la distinction
entre les paramètres et les hyperparamètres, concentrons-nous sur les hyperparamètres. Comme les paramètres sont réglés
par l'algorithme d'entraînement, nous devons régler les hyperparamètres. Dans le module précédent, on a ajusté
manuellement certains d'entre eux. Vous savez donc que la taille des lots et
le taux d'apprentissage sont importants. Voici des graphiques tirés de
l'article d'Andrej Karpathy, que je vous recommande de lire. Il illustre bien le problème. Sur la gauche, avec un taux
d'apprentissage bas, la courbe bleue du graphique,
l'amélioration est linéaire. Mais, vous n'obtenez pas souvent
les meilleures performances. Avec un taux d'apprentissage élevé,
soit la courbe verte, l'amélioration est exponentielle, mais
les performances sont rarement optimales. Avec un taux très élevé, ici la courbe jaune,
votre tâche sera compliquée. Il existe souvent un taux d'apprentissage
idéal, comme la courbe rouge, mais quasiment impossible à trouver. Voyons ce que nous apprennent ces
graphiques sur la taille des lots. À droite, vous voyez une courbe
de pertes très complexe. Cela est dû à une petite taille de lots. Dans le précédent module, vous avez
appris qu'une taille de lots trop grande pouvait ralentir le processus
de façon considérable. Notez que ces graphiques
sont affichés par itération. Malheureusement, TensorFlow
ne détermine pas les itérations. Vous devez déterminer l'itération
en calculant le nombre d'étapes d'une taille de lots donnée
étant égal à une itération. En d'autres termes, vous devez déterminer
le nombre d'étapes de la taille de lots nécessaires pour parcourir une fois
votre ensemble de données.